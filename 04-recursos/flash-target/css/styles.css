/**
 * Vodafone Reboot Framework: Version 15.5.0. Generation Date: 2020-02-03T15:49:38.416Z
 */

.vfes-ms-content .vfes-bestprice {
  width: 6.9375rem;
}

.vfes-ms-content .vfes-counter {
  background-image: url("https://www.vodafone.es/c/statics/imagen/fondo-mobile-flash.png");
  background-size: cover;
  background-repeat: no-repeat;
}

.vfes-ms-content .countDown_cont {
  font-size: 0.8125rem;
  display: -webkit-box;
  display: flex;
  color: #333;
  flex-wrap: wrap;
  align-content: center;
  -webkit-box-pack: center;
          justify-content: center;
}

.vfes-ms-content .countDown_interval_cont {
  display: -webkit-box;
  display: flex;
  justify-content: space-around;
  width: auto;
}

.vfes-ms-content .countDown_interval_cont:nth-child(n+1):not(:last-child) {
  margin-right: 1em;
}

.vfes-ms-content .countDown_interval_basic_cont {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
}

.vfes-ms-content .countDown_interval_basic_cont_description {
  display: -webkit-box;
  display: flex;
  margin-left: .3em;
  margin-top: 1em;
  margin-bottom: 1em;
  font-size: 1.2em;
  font-weight: 700;
  color: #fff;
}

.vfes-ms-content .countDown_digit_cont {
  -webkit-perspective: 3.2em;
          perspective: 3.2em;
  box-shadow: 0.1em 0.1em 0.1em rgba(0, 0, 0, 0.2);
  width: 1em;
  height: 1.6em;
  position: relative;
  line-height: 1.6em;
  font-size: 2.5em;
  font-weight: 700;
  border-radius: .08em;
}

.vfes-ms-content .countDown_digit_cont:nth-child(n+1):not(:last-child) {
  margin-right: .05em;
}

.vfes-ms-content .countDown_digit_last_placeholder,
.vfes-ms-content .countDown_digit_new_placeholder {
  position: absolute;
  left: 0;
  width: 100%;
  height: 50%;
  text-align: center;
  overflow: hidden;
}

.vfes-ms-content .countDown_digit_last_placeholder {
  bottom: 0;
  background: #fff;
  border-radius: 0 0 .08em .08em;
}

.vfes-ms-content .countDown_digit_last_placeholder_inner {
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  bottom: 50%;
  position: absolute;
}

.vfes-ms-content .countDown_digit_new_placeholder {
  top: 0;
  background: #f7f7f7;
  border-radius: .08em .08em 0 0;
}

.vfes-ms-content .countDown_digit_last_rotate,
.vfes-ms-content .countDown_digit_new_rotate {
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  width: 100%;
  height: 50%;
  font-weight: 700;
  position: absolute;
  top: 0;
  overflow: hidden;
  -webkit-animation-duration: .4s;
          animation-duration: .4s;
  -webkit-animation-timing-function: linear;
          animation-timing-function: linear;
  border-radius: .08em .08em 0 0;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards;
  -webkit-transform-origin: 100% 100%;
          transform-origin: 100% 100%;
}

.vfes-ms-content .countDown_digit_last_rotate:after,
.vfes-ms-content .countDown_digit_new_rotate:after {
  content: "";
  position: absolute;
  z-index: -1;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  border-bottom: 0.01em solid rgba(0, 0, 0, 0.1);
}

.vfes-ms-content .countDown_digit_last_rotate {
  -webkit-animation-name: countDown_flip_1;
          animation-name: countDown_flip_1;
  background: #f7f7f7;
}

.vfes-ms-content .countDown_digit_new_rotate {
  -webkit-animation-name: countDown_flip_2;
          animation-name: countDown_flip_2;
  background: #fff;
}

.vfes-ms-content .countDown_digit_new_rotated {
  -webkit-transform: rotateX(180deg);
          transform: rotateX(180deg);
  width: 100%;
  height: 100%;
}

.vfes-ms-content .countDown_digit_new_rotated_inner {
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  bottom: 50%;
  position: absolute;
}

@-webkit-keyframes countDown_flip_1 {
  0% {
    -webkit-transform: rotateX(0);
            transform: rotateX(0);
    z-index: 1;
  }
  100% {
    -webkit-transform: rotateX(-180deg);
            transform: rotateX(-180deg);
    z-index: 0;
  }
}

@keyframes countDown_flip_1 {
  0% {
    -webkit-transform: rotateX(0);
            transform: rotateX(0);
    z-index: 1;
  }
  100% {
    -webkit-transform: rotateX(-180deg);
            transform: rotateX(-180deg);
    z-index: 0;
  }
}

@-webkit-keyframes countDown_flip_2 {
  0% {
    -webkit-transform: rotateX(0);
            transform: rotateX(0);
    z-index: 0;
  }
  100% {
    -webkit-transform: rotateX(-180deg);
            transform: rotateX(-180deg);
    z-index: 1;
  }
}

@keyframes countDown_flip_2 {
  0% {
    -webkit-transform: rotateX(0);
            transform: rotateX(0);
    z-index: 0;
  }
  100% {
    -webkit-transform: rotateX(-180deg);
            transform: rotateX(-180deg);
    z-index: 1;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfes-bestprice {
    width: 8.75rem;
  }
  .vfes-ms-content .countDown_digit_cont {
    font-size: 4.5em;
  }
  .vfes-ms-content .vfes-counter {
    background-image: url("https://www.vodafone.es/c/statics/imagen/fondo-desktop-flash.png");
    background-size: cover;
    background-repeat: no-repeat;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfes-bestprice {
    width: 10.625rem;
  }
  .vfes-ms-content .countDown_digit_cont {
    font-size: 5em;
  }
  .vfes-ms-content .vfms-title {
    text-align: left;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
