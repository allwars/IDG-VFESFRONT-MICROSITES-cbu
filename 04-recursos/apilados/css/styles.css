/**
 * Vodafone Reboot Framework: Version 15.6.0. Generation Date: 2020-02-11T14:52:34.469Z
 */

.vfes-ms-content {
  /*.vfes-cardSticky{
    position: relative;
    top: 50px;
    z-index: 1;
  }*/
}

.vfes-ms-content .sticky {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background-color: white;
  color: #333333;
  border: solid #333333 0.0625rem;
  font-size: 1.875rem;
  padding: 1rem;
  z-index: 1000;
}

.vfes-ms-content .access {
  visibility: hidden;
}

.vfes-ms-content .vfms-icon-rate {
  min-width: 2.5rem;
}

.vfes-ms-content .vfes-stack {
  position: relative;
  min-height: 3.125rem;
}

.vfes-ms-content .vfes-stack .vfes-stack__content.hide {
  display: none;
}

.vfes-ms-content .vfes-stack .vfes-stack__accordion-button {
  border-right: 0.0625rem solid #E60000;
  border-top: 0.0625rem solid #E60000;
  cursor: pointer;
  height: 0.75rem;
  width: 0.75rem;
  -webkit-transform: rotate(-45deg);
          transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  position: absolute;
  top: 1rem;
  right: 0.5rem;
  -webkit-transition: all .1s ease-in-out;
  transition: all .1s ease-in-out;
}

.vfes-ms-content .vfes-stack .vfes-stack__accordion-button.active {
  -webkit-transform: rotate(135deg);
          transform: rotate(135deg);
  -ms-transform: rotate(135deg);
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50IHtcblxuICAuc3RpY2t5IHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOjA7XG4gICAgbGVmdDowO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIGNvbG9yOiAjMzMzMzMzO1xuICAgIGJvcmRlcjogc29saWQgIzMzMzMzMyAxcHg7XG4gICAgZm9udC1zaXplOiAzMHB4O1xuICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgei1pbmRleDogMTAwMDtcbiAgfVxuICAuYWNjZXNzIHtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIH1cblxuXG4gIC8qLnZmZXMtY2FyZFN0aWNreXtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiA1MHB4O1xuICAgIHotaW5kZXg6IDE7XG4gIH0qL1xuXG4gIC52Zm1zLWljb24tcmF0ZSB7XG4gICAgbWluLXdpZHRoOiA0MHB4O1xuICB9XG5cbiAgLnZmZXMtc3RhY2sge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtaW4taGVpZ2h0OiA1MHB4O1xuICAgIC52ZmVzLXN0YWNrX19jb250ZW50LmhpZGUge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgfVxuXG5cbiAgICAudmZlcy1zdGFja19fYWNjb3JkaW9uLWJ1dHRvbiB7XG4gICAgICBib3JkZXItcmlnaHQ6IDAuMDYyNXJlbSBzb2xpZCAjRTYwMDAwO1xuICAgICAgYm9yZGVyLXRvcDogMC4wNjI1cmVtIHNvbGlkICNFNjAwMDA7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICBoZWlnaHQ6IDAuNzVyZW07XG4gICAgICB3aWR0aDogMC43NXJlbTtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMXJlbTtcbiAgICAgIHJpZ2h0OiAwLjVyZW07XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgLjFzIGVhc2UtaW4tb3V0O1xuXG4gICAgICAmLmFjdGl2ZXtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTM1ZGVnKTtcbiAgICAgICAgLW1zLXRyYW5zZm9ybTogcm90YXRlKDEzNWRlZyk7XG4gICAgICB9XG4gICAgfVxuXG4gIH1cblxufVxuXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFDQ0EsQUFBQSxnQkFBZ0IsQ0FBQztFQW1CZjs7OztLQUlHO0NBbUNKOztBQTFERCxBQUVFLGdCQUZjLENBRWQsT0FBTyxDQUFDO0VBQ04sUUFBUSxFQUFFLEtBQUs7RUFDZixHQUFHLEVBQUMsQ0FBQztFQUNMLElBQUksRUFBQyxDQUFDO0VBQ04sS0FBSyxFQUFFLElBQUk7RUFDWCxnQkFBZ0IsRUFBRSxLQUFLO0VBQ3ZCLEtBQUssRUFBRSxPQUFPO0VBQ2QsTUFBTSxFQUFFLGlCQUFpQjtFQUN6QixTQUFTLEVBQUUsSUFBSTtFQUNmLE9BQU8sRUFBRSxJQUFJO0VBQ2IsT0FBTyxFQUFFLElBQUk7Q0FDZDs7QUFiSCxBQWNFLGdCQWRjLENBY2QsT0FBTyxDQUFDO0VBQ04sVUFBVSxFQUFFLE1BQU07Q0FDbkI7O0FBaEJILEFBeUJFLGdCQXpCYyxDQXlCZCxlQUFlLENBQUM7RUFDZCxTQUFTLEVBQUUsSUFBSTtDQUNoQjs7QUEzQkgsQUE2QkUsZ0JBN0JjLENBNkJkLFdBQVcsQ0FBQztFQUNWLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLFVBQVUsRUFBRSxJQUFJO0NBeUJqQjs7QUF4REgsQUFnQ0ksZ0JBaENZLENBNkJkLFdBQVcsQ0FHVCxvQkFBb0IsQUFBQSxLQUFLLENBQUM7RUFDdEIsT0FBTyxFQUFFLElBQUk7Q0FDZDs7QUFsQ1AsQUFxQ0ksZ0JBckNZLENBNkJkLFdBQVcsQ0FRVCw2QkFBNkIsQ0FBQztFQUM1QixZQUFZLEVBQUUsdUJBQXVCO0VBQ3JDLFVBQVUsRUFBRSx1QkFBdUI7RUFDbkMsTUFBTSxFQUFFLE9BQU87RUFDZixNQUFNLEVBQUUsT0FBTztFQUNmLEtBQUssRUFBRSxPQUFPO0VBQ2QsU0FBUyxFQUFFLGNBQWM7RUFDekIsYUFBYSxFQUFFLGNBQWM7RUFDN0IsUUFBUSxFQUFFLFFBQVE7RUFDbEIsR0FBRyxFQUFFLElBQUk7RUFDVCxLQUFLLEVBQUUsTUFBTTtFQUNiLFVBQVUsRUFBRSxtQkFBbUI7Q0FNaEM7O0FBdERMLEFBa0RNLGdCQWxEVSxDQTZCZCxXQUFXLENBUVQsNkJBQTZCLEFBYTFCLE9BQU8sQ0FBQTtFQUNOLFNBQVMsRUFBRSxjQUFjO0VBQ3pCLGFBQWEsRUFBRSxjQUFjO0NBQzlCIn0= */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50IHtcblxuICAuc3RpY2t5IHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOjA7XG4gICAgbGVmdDowO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIGNvbG9yOiAjMzMzMzMzO1xuICAgIGJvcmRlcjogc29saWQgIzMzMzMzMyAxcHg7XG4gICAgZm9udC1zaXplOiAzMHB4O1xuICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgei1pbmRleDogMTAwMDtcbiAgfVxuICAuYWNjZXNzIHtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIH1cblxuXG4gIC8qLnZmZXMtY2FyZFN0aWNreXtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiA1MHB4O1xuICAgIHotaW5kZXg6IDE7XG4gIH0qL1xuXG4gIC52Zm1zLWljb24tcmF0ZSB7XG4gICAgbWluLXdpZHRoOiA0MHB4O1xuICB9XG5cbiAgLnZmZXMtc3RhY2sge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtaW4taGVpZ2h0OiA1MHB4O1xuICAgIC52ZmVzLXN0YWNrX19jb250ZW50LmhpZGUge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgfVxuXG5cbiAgICAudmZlcy1zdGFja19fYWNjb3JkaW9uLWJ1dHRvbiB7XG4gICAgICBib3JkZXItcmlnaHQ6IDAuMDYyNXJlbSBzb2xpZCAjRTYwMDAwO1xuICAgICAgYm9yZGVyLXRvcDogMC4wNjI1cmVtIHNvbGlkICNFNjAwMDA7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICBoZWlnaHQ6IDAuNzVyZW07XG4gICAgICB3aWR0aDogMC43NXJlbTtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMXJlbTtcbiAgICAgIHJpZ2h0OiAwLjVyZW07XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgLjFzIGVhc2UtaW4tb3V0O1xuXG4gICAgICAmLmFjdGl2ZXtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTM1ZGVnKTtcbiAgICAgICAgLW1zLXRyYW5zZm9ybTogcm90YXRlKDEzNWRlZyk7XG4gICAgICB9XG4gICAgfVxuXG4gIH1cblxufVxuXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFDQ0EsQUFBQSxnQkFBZ0IsQ0FBQztFQW1CZjs7OztLQUlHO0NBbUNKOztBQTFERCxBQUVFLGdCQUZjLENBRWQsT0FBTyxDQUFDO0VBQ04sUUFBUSxFQUFFLEtBQUs7RUFDZixHQUFHLEVBQUMsQ0FBQztFQUNMLElBQUksRUFBQyxDQUFDO0VBQ04sS0FBSyxFQUFFLElBQUk7RUFDWCxnQkFBZ0IsRUFBRSxLQUFLO0VBQ3ZCLEtBQUssRUFBRSxPQUFPO0VBQ2QsTUFBTSxFQUFFLGlCQUFpQjtFQUN6QixTQUFTLEVBQUUsSUFBSTtFQUNmLE9BQU8sRUFBRSxJQUFJO0VBQ2IsT0FBTyxFQUFFLElBQUk7Q0FDZDs7QUFiSCxBQWNFLGdCQWRjLENBY2QsT0FBTyxDQUFDO0VBQ04sVUFBVSxFQUFFLE1BQU07Q0FDbkI7O0FBaEJILEFBeUJFLGdCQXpCYyxDQXlCZCxlQUFlLENBQUM7RUFDZCxTQUFTLEVBQUUsSUFBSTtDQUNoQjs7QUEzQkgsQUE2QkUsZ0JBN0JjLENBNkJkLFdBQVcsQ0FBQztFQUNWLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLFVBQVUsRUFBRSxJQUFJO0NBeUJqQjs7QUF4REgsQUFnQ0ksZ0JBaENZLENBNkJkLFdBQVcsQ0FHVCxvQkFBb0IsQUFBQSxLQUFLLENBQUM7RUFDdEIsT0FBTyxFQUFFLElBQUk7Q0FDZDs7QUFsQ1AsQUFxQ0ksZ0JBckNZLENBNkJkLFdBQVcsQ0FRVCw2QkFBNkIsQ0FBQztFQUM1QixZQUFZLEVBQUUsdUJBQXVCO0VBQ3JDLFVBQVUsRUFBRSx1QkFBdUI7RUFDbkMsTUFBTSxFQUFFLE9BQU87RUFDZixNQUFNLEVBQUUsT0FBTztFQUNmLEtBQUssRUFBRSxPQUFPO0VBQ2QsU0FBUyxFQUFFLGNBQWM7RUFDekIsYUFBYSxFQUFFLGNBQWM7RUFDN0IsUUFBUSxFQUFFLFFBQVE7RUFDbEIsR0FBRyxFQUFFLElBQUk7RUFDVCxLQUFLLEVBQUUsTUFBTTtFQUNiLFVBQVUsRUFBRSxtQkFBbUI7Q0FNaEM7O0FBdERMLEFBa0RNLGdCQWxEVSxDQTZCZCxXQUFXLENBUVQsNkJBQTZCLEFBYTFCLE9BQU8sQ0FBQTtFQUNOLFNBQVMsRUFBRSxjQUFjO0VBQ3pCLGFBQWEsRUFBRSxjQUFjO0NBQzlCIn0= */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
