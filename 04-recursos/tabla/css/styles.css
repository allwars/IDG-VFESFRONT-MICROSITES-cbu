/**
 * Vodafone Reboot Framework: Version 2.6.3. Generation Date: 2020-11-05T14:27:59.602Z
 */

.vfes-ms-content .vf-table__container {
  position: relative;
  overflow-x: auto;
  border: 0.0625rem solid #ccc;
  border-radius: 0.375rem;
  background-color: #f4f4f4;
  color: #222222;
  text-align: center;
  font-size: 0.875rem;
  z-index: 0;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__container {
    overflow: initial;
    font-size: 1.25rem;
  }
}

.vfes-ms-content .vf-table__datalist {
  width: 100%;
}

.vfes-ms-content .vf-table__th {
  background-color: #f4f4f4;
  box-shadow: inset 0 -0.0625rem 0.0625rem #ccc;
  padding: 0.5rem 1rem;
  position: relative;
  width: 50%;
}

.vfes-ms-content .vf-table__th:first-child {
  border-top-left-radius: 0.375rem;
}

.vfes-ms-content .vf-table__th:last-child {
  border-top-right-radius: 0.375rem;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__th {
    padding: 1.5rem;
    position: -webkit-sticky;
    position: sticky;
    top: 4.375rem;
    z-index: 1;
  }
}

.vfes-ms-content .vf-table__th:not(:last-child):after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  width: 0.0625rem;
  background-color: #ccc;
}

.vfes-ms-content .vf-table__td {
  padding: 0.3125rem;
  position: relative;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__td {
    padding: 1.25rem 0.625rem;
  }
}

.vfes-ms-content .vf-table__td:not(:last-child):after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  width: 0.0625rem;
  background-color: #ccc;
}

.vfes-ms-content .vf-table__td--subheader {
  background-color: #fff;
  padding: 0.3125rem;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__td--subheader {
    padding: 0.625rem;
  }
}

.vfes-ms-content .vf-table__title {
  font-size: 0.875rem;
  white-space: nowrap;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__title {
    font-size: 1.25rem;
  }
}

.vfes-ms-content .vf-table__title--big {
  font-size: 1rem;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__title--big {
    font-size: 2.5rem;
  }
}

.vfes-ms-content .vf-table__title--small {
  font-size: 1rem;
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vf-table__title--small {
    font-size: 1.75rem;
  }
}

.vfes-ms-content .vf-table__icon {
  vertical-align: middle;
  /*  &::before{
           content:'';
           font-size: 20px;
       } */
}

.vfes-ms-content .vf-table__icon--tick::before {
  content: url("data:image/svg+xml; utf8, <svg xmlns='http://www.w3.org/2000/svg' width='24' height='18' viewBox='0 0 24 18'> <g fill='none' fill-rule='evenodd'> <path stroke='%23090' stroke-linecap='round' stroke-linejoin='round' d='M21.5 5.375L8.432 18.442 2.625 12.635'/> </g> </svg> ");
}

.vfes-ms-content .vf-table__icon--fault::before {
  content: url("data:image/svg+xml; utf8, <svg width='24' height='18' viewBox='0 0 24 18' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <g stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <path d='M11.2928932,12 L5.64644661,6.35355339 C5.45118446,6.15829124 5.45118446,5.84170876 5.64644661,5.64644661 C5.84170876,5.45118446 6.15829124,5.45118446 6.35355339,5.64644661 L12,11.2928932 L17.6464466,5.64644661 C17.8417088,5.45118446 18.1582912,5.45118446 18.3535534,5.64644661 C18.5488155,5.84170876 18.5488155,6.15829124 18.3535534,6.35355339 L12.7071068,12 L18.3535534,17.6464466 C18.5488155,17.8417088 18.5488155,18.1582912 18.3535534,18.3535534 C18.1582912,18.5488155 17.8417088,18.5488155 17.6464466,18.3535534 L12,12.7071068 L6.35355339,18.3535534 C6.15829124,18.5488155 5.84170876,18.5488155 5.64644661,18.3535534 C5.45118446,18.1582912 5.45118446,17.8417088 5.64644661,17.6464466 L11.2928932,12 Z' fill='%23E60000'></path> </g> </svg>");
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
