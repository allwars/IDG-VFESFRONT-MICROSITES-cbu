/**
 * Vodafone Reboot Framework: Version 2.12.0. Generation Date: 2021-02-22T08:58:22.115Z
 */

.vfes-ms-content .vf-banner {
  background-image:  url('../img/banner/bg-mobile.jpg?v=d9a20403454a1dc6d12e3a1bfa59f6a6');
  background-size: cover;
}

@media screen and (min-width: 47.75rem) {
  .vfes-ms-content .vf-banner {
    background-image:  url('../img/banner/bg-tablet.jpg?v=d0a610826a6004158c802f0f08ff5004');
    min-height: 23.125rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner {
    background-image:  url('../img/banner/bg-desktop.jpg?v=e568425ead9c8c4cc86a39d30c4a0942');
    min-height: 25rem;
  }
}

.vfes-ms-content .vf-block {
  display: block;
}

.vfes-ms-content .vf-ticket {
  position: relative;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-ticket {
    position: absolute;
    right: 1rem;
  }
}

.vfes-ms-content .vf-ticket__floating {
  position: -webkit-sticky;
  position: sticky;
  width: inherit;
  width: 100%;
  max-width: 25rem;
  padding-top: 0.625rem;
}

.vfes-ms-content .vf-ticket__opacity0 {
  opacity: 0;
}

.vfes-ms-content .vf-sticky {
  position: fixed;
  z-index: 1;
  bottom: 0;
  width: 100%;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-sticky {
    display: none;
  }
}

.vfes-ms-content .vf-form {
  margin-top: 0.625rem;
  padding: 0 0 0 0;
}

.vfes-ms-content .vf-form__box {
  width: initial;
}

.vfes-ms-content .vf-form__box:first-child {
  padding-right: 1.25rem;
}

.vfes-ms-content .ws10-c-form__radio:checked + .ws10-c-form__label::after {
  background-color: #007c92;
}

.vfes-ms-content .wfms__legal {
  font-size: 0.875rem;
}

.vfes-ms-content .vfms-link {
  color: #E60000;
}

.vfes-ms-content .vf-card--image {
  width: 100%;
  min-height: 0;
}

.vfes-ms-content .vf-card--image-height {
  height: auto;
}

.vfes-ms-content .vf-card--align {
  text-align: left;
}

.vfes-ms-content .vf-tray-quick-action--buton.ws10-o-tabs__tab--active {
  border: 0.125rem solid #007c92;
}

.vfes-ms-content .vf-backdrop--head-bg {
  background-image:  url('../img/safety-kit/backdrop/cabecera-modal-movil.jpg?v=0ae90767a4f3f6b567df7bce45582a07');
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  padding: 0.625rem 1.875rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vf-backdrop--head-bg {
    background-image:  url('../img/safety-kit/backdrop/cabecera-modal-tablet.jpg?v=301e071e8fc916cc2550265bfb725579');
    padding: auto;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-backdrop--head-bg {
    background-image:  url('../img/safety-kit/backdrop/cabecera-modal-desktop.jpg?v=4a921a764474dce3f568c5fd9784fa24');
  }
}

.vfes-ms-content .vf-backdrop--content {
  margin-top: -6.25rem;
  background: none;
  padding: 0;
}

.vfes-ms-content .vf-backdrop--item {
  background: #fff;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vf-backdrop--item {
    border-radius: 0.4375rem;
  }
}

.vfes-ms-content .vf-backdrop--panels {
  padding: 0 1.25rem 0 1.25rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vf-backdrop--panels {
    padding: 0;
  }
}

.vfes-ms-content .vf-tabs {
  overflow: hidden;
}

@media screen and (max-width: 40rem) {
  .vfes-ms-content .vf-tabs-container-buttons {
    position: relative;
    padding-bottom: 1.25rem;
    left: 0;
    top: 0;
    display: block;
    white-space: nowrap;
    width: 25rem;
    transform: translate3d(0rem, 0rem, 0rem);
  }
}

@media screen and (max-width: 40rem) {
  .vfes-ms-content .vf-tabs-container-buttons__scrollX {
    overflow-x: scroll;
  }
}

@media screen and (min-width: 47.9375rem) {
  .vfes-ms-content .vf-tabs-container-buttons__image {
    width: 6.5rem;
    height: auto;
  }
}

.vfes-ms-content .vf-tabs-container-buttons__image-logos {
  width: 5rem;
  background: white;
  border-radius: 0.375rem;
  filter: drop-shadow(0.125rem 0.25rem 0.375rem #dedede);
}

.vfes-ms-content .vf-tabs-button {
  width: 6.25rem;
  display: inline-block;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-tabs-button {
    width: 8.5rem;
    height: 8.5rem;
  }
}

.vfes-ms-content .vf-tabs-button__active {
  border: 0.125rem solid #007C92;
}

.vfes-ms-content .ws10-c-picker.vf-tabs-button__active {
  border: none;
}

.vfes-ms-content .vf-image {
  width: 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
