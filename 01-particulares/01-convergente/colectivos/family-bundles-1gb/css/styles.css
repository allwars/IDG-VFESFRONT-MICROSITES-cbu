/**
 * Vodafone Reboot Framework: Version 2.11.4. Generation Date: 2021-03-23T09:21:15.350Z
 */

html {
  scroll-behavior: smooth;
}

.vf-border-radius {
  border-radius: 0.375rem;
}

.vf-breadcrumbs li {
  list-style: none;
}

.vf-breadcrumbs li:first-child {
  display: none;
}

@media screen and (min-width: 60.625rem) {
  .vf-breadcrumbs li:first-child {
    display: block;
  }
}

.vf-breadcrumbs li:last-child {
  display: none;
}

@media screen and (min-width: 60.625rem) {
  .vf-breadcrumbs li:last-child {
    display: block;
  }
}

.vf-breadcrumbs li:nth-child(2n) a:before {
  border-width: .0625rem;
  border-right: .0625rem solid #333;
  border-top: .0625rem solid #333;
  display: block;
  width: .75rem;
  height: .75rem;
  transform: rotate(-135deg);
  content: "";
  display: inline-block;
  vertical-align: baseline;
  position: relative;
}

@media screen and (min-width: 60.625rem) {
  .vf-breadcrumbs li:nth-child(2n) a:before {
    display: none;
  }
}

.vf-breadcrumbs__link {
  display: flex;
  align-items: center;
}

@media screen and (min-width: 60.625rem) {
  .vf-breadcrumbs__link:after {
    border-width: .0625rem;
    border-right: .0625rem solid #333;
    border-top: .0625rem solid #333;
    display: block;
    width: .75rem;
    height: .75rem;
    transform: rotate(45deg);
    content: "";
    display: inline-block;
    vertical-align: baseline;
    position: relative;
  }
}

.vf-container-lane {
  position: relative;
}

.vf-banner {
  width: 100%;
  background-image: url("../img/banner/mobile-cabecera.jpg");
  background-size: 130%;
  background-repeat: no-repeat;
  background-position: right top;
}

@media screen and (min-width: 60.625rem) {
  .vf-banner {
    background-image:  url('../img/banner/desktop-cabecera.jpg?v=b70f4a442d263e626be0d7aa9f4292ad');
    background-size: cover;
  }
}

.vf-banner__title {
  padding-top: 1.25rem;
}

@media screen and (min-width: 60.625rem) {
  .vf-banner__title {
    padding-top: 3.125rem;
    padding-bottom: 13rem;
  }
}

@media screen and (min-width: 47.75rem) {
  .vf-banner__container {
    padding-top: 2.5rem;
    padding-bottom: 2.5rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vf-banner__container {
    padding-top: initial;
    padding-bottom: initial;
  }
}

.vf-rate-ticket {
  position: relative;
  margin: auto;
  z-index: 9;
}

@media screen and (min-width: 64.0625rem) {
  .vf-rate-ticket {
    position: absolute;
    right: 1rem;
    padding-top: 1.875rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vf-rate-ticket__stop {
    position: absolute;
    bottom: 0;
  }
}

.vf-rate-ticket__floating {
  position: sticky;
  width: 100%;
  max-width: 25rem;
  padding-top: .625rem;
}

.vf-rate-ticket__hidden {
  display: none;
}

@media screen and (min-width: 64.0625rem) {
  .vf-rate-ticket__hidden {
    display: block;
  }
}

.vf-rate-ticket__info-prices {
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
}

@media screen and (min-width: 60.625rem) {
  .vf-rate-ticket__info-prices {
    display: initial;
  }
}

@media screen and (min-width: 60.625rem) {
  .vf-rate-ticket__info-cta {
    margin-top: 0.625rem;
  }
}

.ws10-c-rate-features__collapse-btn .less {
  display: none;
}

.ws10-c-rate-features__collapse-btn.ws10-c-rate-features__collapse-btn--active .less {
  display: block;
}

.ws10-c-rate-features__collapse-btn.ws10-c-rate-features__collapse-btn--active .plus {
  display: none;
}

.vf-sticky_collapse-btn .less {
  display: none;
}

.ws10-c-sticky-backdrop--open .vf-sticky_collapse-btn .less {
  display: block;
}

.ws10-c-sticky-backdrop--open .vf-sticky_collapse-btn .plus {
  display: none;
}

.ws10-c-sticky-backdrop--open .vf-sticky_collapse-btn:after {
  transform: rotate(-45deg);
  margin-top: 0.125rem;
  transition: 0.1s linear;
}

.ws10-x-card-rate {
  width: 100%;
  max-height: 100%;
  display: flex;
  flex-direction: column;
}

.ws10-x-card-rate__title, .ws10-x-card-rate__rate-title {
  font-size: 1.125rem;
  font-weight: bold;
}

.ws10-x-card-rate__form, .ws10-x-card-rate__w-help-btn, .ws10-x-card-rate__w-last-btn, .ws10-x-card-rate__title {
  flex-shrink: 0;
}

.ws10-x-card-rate__w-help-btn {
  text-align: center;
  margin-top: 1rem;
}

@media screen and (min-width: 40rem) {
  .ws10-x-card-rate__w-last-btn {
    display: flex;
    justify-content: flex-end;
  }
}

.ws10-x-card-rate__last-btn {
  width: 100%;
}

@media screen and (min-width: 40rem) {
  .ws10-x-card-rate__last-btn {
    width: auto;
  }
}

.ws10-x-card-rate__tablist {
  margin-bottom: 1rem;
}

@media screen and (min-width: 40rem) {
  .ws10-x-card-rate__tablist {
    margin-bottom: 1.25rem;
  }
}

.ws10-x-card-rate__w-panels {
  margin-bottom: 1rem;
}

.ws10-x-card-rate__w-panels:last-child {
  margin-bottom: 0;
}

.ws10-x-card-rate__w-rate-info {
  display: grid;
  grid-template-columns: 60% 40%;
  grid-template-rows: repeat(2, auto);
  grid-column-gap: 0rem;
  grid-row-gap: 0rem;
}

@media screen and (min-width: 60.625rem) {
  .ws10-x-card-rate__w-rate-info {
    grid-row-gap: 1rem;
  }
}

.ws10-x-card-rate__rate-info-price {
  grid-area: 1 / 1 / 3 / 2;
}

@media screen and (min-width: 60.625rem) {
  .ws10-x-card-rate__rate-info-price {
    grid-area: 1 / 1 / 2 / 2;
  }
}

.ws10-x-card-rate__rate-info-tax {
  display: flex;
  align-items: flex-start;
  justify-content: flex-end;
  grid-area: 1 / 2 / 2 / 3;
}

@media screen and (min-width: 60.625rem) {
  .ws10-x-card-rate__rate-info-tax {
    align-items: flex-end;
  }
}

.ws10-x-card-rate__rate-info-cta {
  display: flex;
  align-items: flex-end;
  justify-content: flex-end;
  grid-area: 2 / 2 / 3 / 3;
}

@media screen and (min-width: 60.625rem) {
  .ws10-x-card-rate__rate-info-cta {
    grid-area: 2 / 1 / 3 / 3;
  }
}

@media screen and (min-width: 60.625rem) {
  .ws10-x-card-rate__cta {
    width: 100%;
  }
}

.ws10-x-card-rate__rate {
  margin: 0;
  font-size: 1rem;
}

.ws10-x-card-rate__rate-title {
  margin-bottom: 1rem;
}

.ws10-x-card-rate__rate-dto-percent, .ws10-x-card-rate__rate-dto-label, .ws10-x-card-rate__rate-price {
  display: flex;
}

.ws10-x-card-rate__rate-dto-percent {
  color: #007C92;
  font-weight: bold;
  margin-bottom: 0;
}

.ws10-x-card-rate__rate-dto-label {
  color: #666666;
}

.ws10-x-card-rate__rate-features {
  padding: 1rem 0;
  border-top: 0.0625rem solid #EBEBEB;
}

.ws10-x-card-rate__rate-features:last-child {
  border-bottom: 0.0625rem solid #EBEBEB;
}

.ws10-x-card-rate__rate-features-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

.ws10-x-card-rate__rate-features-list-item {
  margin-bottom: 0.5rem;
}

.ws10-x-card-rate__rate-features-list-item:last-child {
  margin-bottom: 0.75rem;
}

.ws10-x-card-rate--backdrop__w-rate-info {
  grid-template-rows: 1fr;
}

.ws10-x-card-rate--backdrop__rate-info-tax {
  align-items: flex-end;
  grid-area: 1 / 2 / 2 / 3;
}

.ws10-c-sticky-backdrop__wrapper {
  overflow-y: auto;
  height: auto;
}

.vf-firefoxflex-fix {
  max-width: 5.875rem;
}

.vf-entertainment {
  padding-bottom: 4rem;
}

.vf-entertainment .vf-bench--img {
  max-width: 6.5625rem;
}

.vf-entertainment .vf-accordion-tv {
  list-style: none;
  display: grid;
  grid-template-columns: 25% 25% 25% 25%;
  text-align: center;
  font-size: 0.875rem;
  justify-items: stretch;
}

.vf-entertainment .vf-accordion-funcionality__circle {
  border-radius: 50%;
  padding: 0.9375rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.vf-entertainment .vf-accordion-funcionality__circle--svg {
  width: 2.75rem;
  height: 2.75rem;
}

.vf-entertainment-cartelas__container {
  overflow-x: scroll;
}

@media screen and (min-width: 47.75rem) {
  .vf-entertainment-cartelas__mobile {
    display: none;
  }
}

.vf-entertainment-cartelas__desktop {
  display: none;
}

@media screen and (min-width: 47.75rem) {
  .vf-entertainment-cartelas__desktop {
    display: block;
  }
}

.vf-entertainment-cartelas__desktop img {
  background: red;
}

@media screen and (min-width: 47.75rem) {
  .vf-entertainment-cartelas__desktop img {
    max-height: 7.5rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vf-entertainment-cartelas__desktop img {
    max-height: initial;
  }
}

.vf-smarthome {
  padding-bottom: 4rem;
}

.vf-backdrop {
  width: 100%;
  background-color: #ffffff;
  max-height: 85vh;
}

@media screen and (min-width: 60.625rem) {
  .vf-backdrop {
    min-height: initial;
    border-radius: 0.375rem;
    min-height: 32.5rem;
  }
}

.vf-backdrop__head {
  background-size: cover;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  background-position: center;
}

.vf-backdrop__head-conectivity {
  background-image:  url('../img/conectivity/pop-up/bg-popup-cabecera.jpg?v=1c640250caa11ea0cbd06403333c738a');
}

@media screen and (min-width: 60.625rem) {
  .vf-backdrop__head-conectivity {
    background-image:  url('../img/conectivity/pop-up/bg-popup-cbecera-resp.jpg?v=d64a1cd60e06c62e523beabcd2978ee2');
  }
}

.vf-backdrop__head-entertainment {
  background-image:  url('../img/entertainment/cabecera-pop-resp.jpg?v=65233a2bb241ed27d72e229432961c0b');
}

@media screen and (min-width: 60.625rem) {
  .vf-backdrop__head-entertainment {
    background-image:  url('../img/entertainment/cabecera-pop.jpg?v=8caa729ea55ef9ae9ce22af293d426ad');
  }
}

.vf-backdrop__head-smarthome {
  background-image:  url('../img/smarthome/bg-smarthome-pop.jpg?v=2afdea24c024e2ee85d5d6ccd6ee0537');
}

@media screen and (min-width: 60.625rem) {
  .vf-backdrop__head-smarthome {
    background-image:  url('../img/smarthome/bg-smarthome-pop-desktop.jpg?v=bed83ffdaa2ccdd6ff1b57e045693c72');
  }
}

.vf-backdrop__content {
  margin-top: -3.75rem;
  padding: 0;
  background: none;
  position: relative;
}

@media screen and (min-width: 47.9375rem) {
  .vf-backdrop__content {
    margin-top: -6.25rem;
  }
}

.vf-backdrop__content--scrollY {
  padding-top: 8rem;
  -webkit-mask-image: linear-gradient(to bottom, transparent 18%, white 21%);
          mask-image: linear-gradient(to bottom, transparent 18%, white 21%);
}

.vf-backdrop__list {
  margin-left: 0.625rem;
  list-style: none;
}

.vf-backdrop__list--cheks {
  position: relative;
  display: flex;
  align-items: start;
}

.vf-backdrop__list--cheks:before {
  content: " ";
  width: 0.625rem;
  min-width: 0.625rem;
  height: 1.1875rem;
  border: solid #009900;
  border-width: 0 .1em .1em 0;
  margin-right: 1.25rem;
  transform: rotate(45deg);
}

.vf-tabs {
  overflow: hidden;
}

.vf-tabs-container-buttons {
  position: relative;
  padding-bottom: 2.5rem;
  left: 0;
  top: 0;
  display: block;
  white-space: nowrap;
  width: 25rem;
  transform: translate3d(0rem, 0rem, 0rem);
}

.vf-tabs-container-buttons__scrollX {
  overflow-x: scroll;
}

@media screen and (min-width: 47.9375rem) {
  .vf-tabs-container-buttons {
    overflow-x: initial;
    width: 37.5rem;
  }
}

@media screen and (min-width: 47.9375rem) {
  .vf-tabs-container-buttons__image {
    width: 6.5rem;
    height: auto;
  }
}

.vf-tabs-container-buttons__image-logos {
  width: 5rem;
  background: white;
  border-radius: 0.375rem;
  filter: drop-shadow(0.125rem 0.25rem 0.375rem #dedede);
}

@media screen and (min-width: 60.625rem) {
  .vf-tabs-container-buttons .ws10-c-tray-quick-action__content {
    height: 100%;
  }
}

.vf-tabs-button {
  width: 6.25rem;
  display: inline-block;
}

@media screen and (min-width: 60.625rem) {
  .vf-tabs-button {
    width: 8.5rem;
    height: 8.5rem;
  }
}

.vf-tabs-button__active {
  border: 0.125rem solid #007C92;
}

.ws10-c-picker.vf-tabs-button__active {
  border: none;
}

.vf-nosurprise {
  padding-bottom: 1.25rem;
}

.vf-nosurprise__link {
  text-decoration: none;
}

.vf-steps {
  padding-bottom: 4rem;
}

.vf-steps .ws10-c-timeline-steps__title {
  text-align: left;
}

@media screen and (min-width: 60.625rem) {
  .vf-steps .ws10-c-timeline-steps__title {
    max-width: none;
    text-align: center;
  }
}

.vf-steps .ws10-c-timeline-steps__text {
  max-width: none;
}

.vf-table__container {
  position: relative;
  overflow-x: auto;
  border: 0.0625rem solid #ccc;
  border-radius: 0.375rem;
  background-color: #f4f4f4;
  color: #222222;
  text-align: center;
  font-size: 0.875rem;
  z-index: 0;
}

@media screen and (min-width: 64rem) {
  .vf-table__container {
    overflow: initial;
    font-size: 1.25rem;
  }
}

.vf-table__datalist {
  width: 100%;
}

.vf-table__th {
  background-color: #f4f4f4;
  box-shadow: inset 0 -0.0625rem 0.0625rem #ccc;
  padding: 0.5rem 1rem;
  position: relative;
}

.vf-table__th:first-child {
  border-top-left-radius: 0.375rem;
}

.vf-table__th:last-child {
  border-top-right-radius: 0.375rem;
}

@media screen and (min-width: 64rem) {
  .vf-table__th {
    padding: 1.5rem;
    position: sticky;
    top: 4.375rem;
    z-index: 1;
  }
}

.vf-table__th:not(:last-child):after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  width: 0.0625rem;
  background-color: #ccc;
}

.vf-table__td {
  padding: 0.3125rem;
  position: relative;
}

@media screen and (min-width: 64rem) {
  .vf-table__td {
    padding: 1.25rem 0.625rem;
  }
}

.vf-table__td:not(:last-child):after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  width: 0.0625rem;
  background-color: #ccc;
}

.vf-table__td--subheader {
  background-color: #fff;
  padding: 0.3125rem;
}

@media screen and (min-width: 64rem) {
  .vf-table__td--subheader {
    padding: 0.625rem;
  }
}

.vf-table__title {
  font-size: 0.875rem;
  white-space: nowrap;
}

@media screen and (min-width: 64rem) {
  .vf-table__title {
    font-size: 1.25rem;
  }
}

.vf-table__title--big {
  font-size: 1rem;
}

@media screen and (min-width: 64rem) {
  .vf-table__title--big {
    font-size: 2.5rem;
  }
}

.vf-table__title--small {
  font-size: 1rem;
}

@media screen and (min-width: 64rem) {
  .vf-table__title--small {
    font-size: 1.75rem;
  }
}

.vf-table__icon {
  vertical-align: middle;
  /*  &::before{
         content:'';
         font-size: 20px;
     } */
}

.vf-table__icon--tick::before {
  content: url("data:image/svg+xml; utf8, <svg xmlns='http://www.w3.org/2000/svg' width='24' height='18' viewBox='0 0 24 18'> <g fill='none' fill-rule='evenodd'> <path stroke='%23090' stroke-linecap='round' stroke-linejoin='round' d='M21.5 5.375L8.432 18.442 2.625 12.635'/> </g> </svg> ");
}

.vf-table__icon--fault::before {
  content: url("data:image/svg+xml; utf8, <svg width='24' height='18' viewBox='0 0 24 18' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'> <g stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'> <path d='M11.2928932,12 L5.64644661,6.35355339 C5.45118446,6.15829124 5.45118446,5.84170876 5.64644661,5.64644661 C5.84170876,5.45118446 6.15829124,5.45118446 6.35355339,5.64644661 L12,11.2928932 L17.6464466,5.64644661 C17.8417088,5.45118446 18.1582912,5.45118446 18.3535534,5.64644661 C18.5488155,5.84170876 18.5488155,6.15829124 18.3535534,6.35355339 L12.7071068,12 L18.3535534,17.6464466 C18.5488155,17.8417088 18.5488155,18.1582912 18.3535534,18.3535534 C18.1582912,18.5488155 17.8417088,18.5488155 17.6464466,18.3535534 L12,12.7071068 L6.35355339,18.3535534 C6.15829124,18.5488155 5.84170876,18.5488155 5.64644661,18.3535534 C5.45118446,18.1582912 5.45118446,17.8417088 5.64644661,17.6464466 L11.2928932,12 Z' fill='%23E60000'></path> </g> </svg>");
}

.vf-sticky {
  z-index: 99;
  opacity: 0;
}

.vf-sticky-backdrop {
  overflow: inherit;
}

.vf-sticky_collapse-btn {
  position: absolute;
  top: 1rem;
  right: 1rem;
}

@media screen and (min-width: 64.0625rem) {
  .vf-sticky {
    display: none;
  }
}

.vf-width {
  width: 6.25rem;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
