/**
 * Vodafone Reboot Framework: Version 15.7.0. Generation Date: 2020-04-16T08:51:41.873Z
 */

.vfes-ms-content {
  /*********************************************************/
  /****************** CONFIGURATOR STYLES ******************/
  /*********************************************************/
  /**************************************************/
  /***************** TICKET STYLES ******************/
  /**************************************************/
  /**************************************************/
  /***************** Channel MODAL ******************/
  /**************************************************/
}

.vfes-ms-content :focus {
  outline: 0.1875rem solid #007C92;
}

.vfes-ms-content .vfes-button:not(.vfes-button--tertiary) {
  border: 0.0625rem solid transparent;
}

.vfes-ms-content .vfes-layout__wrapper {
  overflow: hidden;
}

.vfes-ms-content .vfes-button--secondary[disabled] {
  background-color: #ccc;
  color: #fff;
  pointer-events: none;
}

.vfes-ms-content .vfms-banner-layout {
  padding: 1.875rem 0;
}

.vfes-ms-content .vfms-banner .vfes-title--1 {
  margin-bottom: 1.25rem;
}

.vfes-ms-content .vfms-banner .vfes-title--3 {
  margin-bottom: 0;
}

.vfes-ms-content .vfms-label__outstanding {
  position: absolute;
  top: -1.375rem;
  padding: 0.3125rem 0.625rem 0.3125rem 0.625rem;
  border-radius: 0.375rem 0.375rem 0 0;
}

.vfes-ms-content .vfms-configurator .vfms-label__outstanding + .vfes-card {
  border-radius: 0 0.375rem 0.375rem 0.375rem;
}

.vfes-ms-content .vfms-configurator__status {
  display: block;
  position: absolute;
  right: -1.5625rem;
  top: -0.4375rem;
  width: 0;
  height: 0;
  border-left: 2.5rem solid transparent;
  border-right: 2.5rem solid transparent;
  border-top: 2.5rem solid #cccccc;
  background-color: #ccc;
  -webkit-transform: rotate(-135deg);
          transform: rotate(-135deg);
  z-index: 1;
  -webkit-transition: border-color 0.3s ease-out, background-color 0.3s ease-out;
  transition: border-color 0.3s ease-out, background-color 0.3s ease-out;
  opacity: 0;
}

.vfes-ms-content .vfms-configurator__icon {
  position: absolute;
  top: 0.3125rem;
  right: 0.3125rem;
  z-index: 2;
}

.vfes-ms-content .vfms-configurator__icon--tick {
  display: none;
}

.vfes-ms-content .vfms-configurator__remove {
  display: none;
}

.vfes-ms-content .vfms-configurator .added .vfms-configurator__status {
  background-color: #428600;
  border-top-color: #428600;
  opacity: 1;
  -webkit-transition: 0.5s;
  transition: 0.5s;
}

.vfes-ms-content .vfms-configurator .added .vfms-configurator__icon--tick {
  display: inline-block;
}

.vfes-ms-content .vfms-configurator .added .vfms-configurator__icon--plus {
  display: none;
}

.vfes-ms-content .vfms-configurator .added .vfms-configurator__add {
  display: none;
}

.vfes-ms-content .vfms-configurator .added .vfms-configurator__remove {
  display: inline-block;
}

.vfes-ms-content .vfms-configurator .added.vfms-configurator__single .vfms-configurator__add {
  display: inline-block;
}

.vfes-ms-content .vfms-configurator .vfes-title {
  margin-bottom: 0.625rem;
  text-align: center;
}

.vfes-ms-content .vfms-configurator .vfes-layout__item {
  overflow: hidden;
}

.vfes-ms-content .vfms-card-configurator {
  display: -webkit-box;
  display: flex;
  padding: 0.875rem 0 1.5rem;
  -webkit-box-pack: justify;
          justify-content: space-between;
  flex-wrap: wrap;
}

.vfes-ms-content .vfms-card-configurator img {
  margin-bottom: 0;
}

.vfes-ms-content .vfms-card-configurator p {
  margin-bottom: 0;
}

.vfes-ms-content .vfms-card-configurator__column {
  display: -webkit-inline-box;
  display: inline-flex;
  -webkit-box-align: center;
          align-items: center;
  -webkit-box-flex: 1;
          flex: 1 50%;
}

.vfes-ms-content .vfms-card-configurator__column:last-child {
  justify-content: space-around;
}

.vfes-ms-content .vfms-card-configurator__info {
  display: -webkit-inline-box;
  display: inline-flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
}

.vfes-ms-content .vfms-card-configurator__counter {
  position: relative;
  padding: 0 1.25rem;
}

.vfes-ms-content .vfms-card-configurator__num {
  display: inline-block;
  border: 0.0625rem solid #cccccc;
  padding: 1.4375rem 2.5rem;
  font-size: 1.25rem;
  line-height: 1.75rem;
  border-radius: 0.375rem;
}

.vfes-ms-content .vfms-card-configurator__button {
  width: 2.5rem;
  height: 2.5rem;
  display: -webkit-inline-box;
  display: inline-flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  box-shadow: 0 0.125rem 0.25rem 0 rgba(0, 0, 0, 0.2);
  border: 0.0625rem solid #cccccc;
  border-radius: 100%;
  background-color: #e60000;
  color: #FFFFFF;
  opacity: 1;
  -webkit-transition: opacity 0.3s ease-out, left 0.3s ease-out;
  transition: opacity 0.3s ease-out, left 0.3s ease-out;
}

.vfes-ms-content .vfms-card-configurator__button.hide {
  display: inline-block;
  pointer-events: none;
  opacity: 0;
}

.vfes-ms-content .vfms-card-configurator__button-less {
  left: 0;
}

.vfes-ms-content .vfms-card-configurator__button-less.hide {
  left: -0.625rem;
}

.vfes-ms-content .vfms-card-configurator__button-more {
  right: 0;
}

.vfes-ms-content .vfms-card-configurator__button-more.hide {
  right: -0.625rem;
}

.vfes-ms-content .vfms-card-configurator.vfms-card-terminal {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  text-align: left;
  padding: 0.5rem 1.25rem 1rem;
}

.vfes-ms-content .vfms-card-configurator.vfms-card-terminal.hide {
  display: none;
}

.vfes-ms-content .vfms-card-configurator.vfms-card-terminal.show {
  display: -webkit-box;
  display: flex;
}

.vfes-ms-content .vfms-card-configurator.vfms-card-terminal .vfms-card-configurator__column {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-align: start;
          align-items: flex-start;
}

.vfes-ms-content .vfms-card-configurator.vfms-card-terminal .vfms-card-configurator__column img {
  align-self: center;
}

.vfes-ms-content .vfms-card-configurator.vfms-card-terminal .vfms-card-configurator__column .vfes-button {
  margin-top: 1rem;
}

.vfes-ms-content .vfms-card-one {
  border: none;
}

.vfes-ms-content .vfms-card-one .vfes-card-rate__dataitem-price {
  font-size: 1.25rem;
  text-align: left;
  line-height: 1.2;
}

.vfes-ms-content .vfms-card-one .vfes-card-rate__dataitem {
  padding: 0.625rem 0.3125rem 0 0.5rem;
}

.vfes-ms-content .vfms-card-one .vfes-card-rate__dataitem .vfes-title {
  line-height: 1.2;
}

.vfes-ms-content .vfms-card-one .vfes-card-rate__dataitem svg {
  width: 3.125rem;
  height: 3.125rem;
}

.vfes-ms-content .vfms-card-one .vfes-bestprice {
  display: -webkit-box;
  display: flex;
  padding: 0.3125rem 0;
}

.vfes-ms-content .vfms-card-one .vfes-bestprice img {
  width: 1.5rem;
  height: 1.5rem;
}

.vfes-ms-content .vfms-card-one .vfms-card-rate__tooltip {
  position: relative;
  padding: 0.125rem 0 0.125rem 0;
  border-bottom: 0.0625rem solid #ebebeb;
  margin-bottom: 0.3125rem;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
}

.vfes-ms-content .vfms-card-one .vfms-card-rate__tooltip p {
  margin-bottom: 0;
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  padding: 0 0.5rem 0 0.5rem;
}

.vfes-ms-content .vfms-card-one .vfms-card-rate__tooltip button {
  position: relative;
  bottom: initial;
  right: initial;
}

.vfes-ms-content .vfms-card-one .vfms-configurator__button {
  padding: 0.625rem 0.625rem 1.25rem 1.125rem;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
}

.vfes-ms-content .vfms-card-one--offer {
  border: 0.0625rem solid #9C2AA0;
}

.vfes-ms-content .vfms-card-one--offer-super {
  border: 0.0625rem solid #5E2750;
}

.vfes-ms-content .vfms-card-one--offer-color {
  border: 0.0625rem solid #9C2AA0;
}

.vfes-ms-content .vfms-card-packtv {
  padding: 1rem 1.25rem;
  position: relative;
  overflow: hidden;
  border: none;
}

.vfes-ms-content .vfms-card-packtv.vfms-card-tv--offer {
  border: 0.0625rem solid #9C2AA0;
}

.vfes-ms-content .vfms-card-packtv.vfms-card-tv--offer-albergine {
  border: 0.0625rem solid #5E2750;
}

.vfes-ms-content .vfms-card-packtv.vfms-card-tv--offercolour {
  border: 0.0625rem solid #00B0CA;
}

.vfes-ms-content .vfms-card-packtv__border {
  position: absolute;
  height: 0.75rem;
  left: 0;
  right: 0;
  top: 0;
}

.vfes-ms-content .vfms-card-packtv .vfes-button {
  width: 100%;
}

.vfes-ms-content .vfes-carousel--active {
  overflow: initial;
}

.vfes-ms-content .vfes-carousel--active .vfes-carousel__list-element {
  opacity: 0;
  -webkit-transition: opacity 0.3s ease-out;
  transition: opacity 0.3s ease-out;
}

.vfes-ms-content .vfes-carousel--active .vfes-carousel__list-element--active {
  opacity: 1;
}

.vfes-ms-content .vfes-carousel__arrow {
  left: -0.75rem;
}

.vfes-ms-content .vfes-carousel__arrow--right {
  right: -0.75rem;
  left: auto;
}

.vfes-ms-content .vfms-ticket__body.hide + .vfes-card__list-footer {
  border-top: 0;
}

.vfes-ms-content .vfms-ticket__dropdown-button {
  position: absolute;
  top: 0.1875rem;
  right: 0.625rem;
  color: #e60000;
}

.vfes-ms-content .vfms-ticket__content {
  max-height: 18.75rem;
  overflow-y: auto;
}

.vfes-ms-content .vfms-ticket__overlay {
  position: fixed;
  background-color: rgba(0, 0, 0, 0.8);
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: block;
}

.vfes-ms-content .vfms-ticket__overlay.hide {
  display: none;
}

.vfes-ms-content .vfms-ticket__element {
  margin-bottom: 0.75rem;
}

.vfes-ms-content .vfms-ticket__element:last-child {
  margin-bottom: 0;
}

.vfes-ms-content .vfms-ticket__wrapper.fixed {
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: 7;
}

.vfes-ms-content .vfms-ticket .vfes-card__list-header .vfes-card__list-paragraphs .vfes-paragraph {
  width: auto;
}

.vfes-ms-content .vfes-alert {
  position: relative;
  height: 2.4375rem;
  top: 0.3125rem;
  overflow: hidden;
  -webkit-transition: height 0.5s ease-out;
  transition: height 0.5s ease-out;
  letter-spacing: normal;
}

.vfes-ms-content .vfes-alert.hide {
  height: 0;
}

.vfes-ms-content .vfes-alert-body {
  background-color: #FFFFFF;
}

.vfes-ms-content .vfes-card__list {
  margin-bottom: 0;
}

.vfes-ms-content .vfes-card__list-content .vfes-paragraph {
  margin-left: 3.125rem;
}

.vfes-ms-content .vfes-card__list-content .vfes-card__list-list {
  margin-left: 3.125rem;
}

.vfes-ms-content .vfes-card__list-container.hide {
  display: none;
}

.vfes-ms-content .vfes-card__list-footer {
  border-top: 0.0625rem solid #e60000;
}

.vfes-ms-content .vfes-card__list-footer .vfes-button {
  width: 100%;
}

.vfes-ms-content .vfes-button.js-modal-confirm-accept {
  margin: 0.625rem;
}

.vfes-ms-content .vfms-padding-cintillo {
  padding: 0.125rem 0.375rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content {
    /*********************************************************/
    /****************** CONFIGURATOR STYLES ******************/
    /*********************************************************/
  }
  .vfes-ms-content .vfms-card-configurator {
    padding: 1.125rem 2.6875rem 1.125rem 1.0625rem;
  }
  .vfes-ms-content .vfms-card-configurator.vfms-card-terminal {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
    padding: 1.125rem 2.6875rem 1.125rem 1.0625rem;
  }
  .vfes-ms-content .vfms-card-configurator.vfms-card-terminal .vfms-card-configurator__column {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
    -webkit-box-align: center;
            align-items: center;
  }
  .vfes-ms-content .vfms-card-configurator.vfms-card-terminal .vfms-card-configurator__column img {
    width: 6.25rem;
    height: 6.25rem;
  }
  .vfes-ms-content .vfms-card-configurator.vfms-card-terminal .vfms-card-configurator__column .vfes-button {
    margin-top: 0;
    width: 9.375rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content {
    /*********************************************************/
    /****************** CONFIGURATOR STYLES ******************/
    /*********************************************************/
    /**************************************************/
    /***************** TICKET STYLES ******************/
    /**************************************************/
  }
  .vfes-ms-content .vfms-configurator .vfes-layout__item:not(.vfms-ticket__wrapper) {
    z-index: 8;
  }
  .vfes-ms-content .vfms-configurator .vfes-title {
    text-align: left;
  }
  .vfes-ms-content .vfms-card-configurator {
    padding: 1.125rem 2.375rem 1.125rem 0.375rem;
  }
  .vfes-ms-content .vfes-carousel__arrow {
    width: 2.5rem;
    height: 2.5rem;
  }
  .vfes-ms-content .vfes-carousel__arrow::after {
    height: 1rem;
    width: 1rem;
  }
  .vfes-ms-content .vfms-ticket {
    max-width: 23.75rem;
    width: 100%;
    float: right;
  }
  .vfes-ms-content .vfms-ticket__wrapper {
    position: relative;
    overflow: initial;
    top: 3.75rem;
  }
  .vfes-ms-content .vfms-ticket__wrapper.fixed {
    width: 100% !important;
    max-width: 75rem;
    bottom: auto;
    top: 5rem;
    bottom: initial;
    left: 50%;
    -webkit-transform: translateX(-50%);
            transform: translateX(-50%);
  }
  .vfes-ms-content .vfms-ticket__overlay {
    display: none;
  }
  .vfes-ms-content .vfms-ticket__content {
    max-height: 20rem;
  }
  .vfes-ms-content .vfes-alert {
    display: none;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
