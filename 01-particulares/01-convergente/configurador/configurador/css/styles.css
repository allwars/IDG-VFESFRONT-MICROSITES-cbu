/**
 * Vodafone Reboot Framework: Version 2.2.3. Generation Date: 2020-06-02T09:27:41.154Z
 */

.vfes-ms-content {
  /*********************************************************/
  /****************** CONFIGURATOR STYLES ******************/
  /*********************************************************/
  /**************************************************/
  /***************** TICKET STYLES ******************/
  /**************************************************/
  /**************************************************/
  /***************** Channel MODAL ******************/
  /**************************************************/
}

.vfes-ms-content :focus {
  outline: 0.1875rem solid #007C92;
}

.vfes-ms-content .vfes-button:not(.vfes-button--tertiary) {
  border: 0.0625rem solid transparent;
}

.vfes-ms-content .vfes-layout__wrapper {
  overflow: hidden;
}

.vfes-ms-content .vfes-button--secondary[disabled] {
  background-color: #ccc;
  color: #fff;
  pointer-events: none;
}

.vfes-ms-content .vfms-banner-layout {
  padding: 1.875rem 0;
}

.vfes-ms-content .vfms-banner .vfes-title--1 {
  margin-bottom: 1.25rem;
}

.vfes-ms-content .vfms-banner .vfes-title--3 {
  margin-bottom: 0;
}

.vfes-ms-content .vfms-label__outstanding {
  position: absolute;
  top: -1.375rem;
  padding: 0.3125rem 0.625rem 0.3125rem 0.625rem;
  border-radius: 0.375rem 0.375rem 0 0;
}

.vfes-ms-content .vfms-configurator .vfms-label__outstanding + .vfes-card {
  border-radius: 0 0.375rem 0.375rem 0.375rem;
}

.vfes-ms-content .vfms-configurator__status {
  display: block;
  position: absolute;
  right: -1.5625rem;
  top: -0.4375rem;
  width: 0;
  height: 0;
  border-left: 2.5rem solid transparent;
  border-right: 2.5rem solid transparent;
  border-top: 2.5rem solid #cccccc;
  background-color: #ccc;
  transform: rotate(-135deg);
  z-index: 1;
  transition: border-color 0.3s ease-out, background-color 0.3s ease-out;
  opacity: 0;
}

.vfes-ms-content .vfms-configurator__icon {
  position: absolute;
  top: 0.3125rem;
  right: 0.3125rem;
  z-index: 2;
}

.vfes-ms-content .vfms-configurator__icon--tick {
  display: none;
}

.vfes-ms-content .vfms-configurator__remove {
  display: none;
}

.vfes-ms-content .vfms-configurator .added .vfms-configurator__status {
  background-color: #428600;
  border-top-color: #428600;
  opacity: 1;
  transition: 0.5s;
}

.vfes-ms-content .vfms-configurator .added .vfms-configurator__icon--tick {
  display: inline-block;
}

.vfes-ms-content .vfms-configurator .added .vfms-configurator__icon--plus {
  display: none;
}

.vfes-ms-content .vfms-configurator .added .vfms-configurator__add {
  display: none;
}

.vfes-ms-content .vfms-configurator .added .vfms-configurator__remove {
  display: inline-block;
}

.vfes-ms-content .vfms-configurator .added.vfms-configurator__single .vfms-configurator__add {
  display: inline-block;
}

.vfes-ms-content .vfms-configurator .vfes-title {
  margin-bottom: 0.625rem;
  text-align: center;
}

.vfes-ms-content .vfms-configurator .vfes-layout__item {
  overflow: hidden;
}

.vfes-ms-content .vfms-card-configurator {
  display: flex;
  padding: 0.875rem 0 1.5rem;
  justify-content: space-between;
  flex-wrap: wrap;
}

.vfes-ms-content .vfms-card-configurator img {
  margin-bottom: 0;
}

.vfes-ms-content .vfms-card-configurator p {
  margin-bottom: 0;
}

.vfes-ms-content .vfms-card-configurator__column {
  display: inline-flex;
  align-items: center;
  flex: 1 50%;
}

.vfes-ms-content .vfms-card-configurator__column:last-child {
  justify-content: space-around;
}

.vfes-ms-content .vfms-card-configurator__info {
  display: inline-flex;
  flex-direction: column;
}

.vfes-ms-content .vfms-card-configurator__counter {
  position: relative;
  padding: 0 1.25rem;
}

.vfes-ms-content .vfms-card-configurator__num {
  display: inline-block;
  border: 0.0625rem solid #cccccc;
  padding: 1.4375rem 2.5rem;
  font-size: 1.25rem;
  line-height: 1.75rem;
  border-radius: 0.375rem;
}

.vfes-ms-content .vfms-card-configurator__button {
  width: 2.5rem;
  height: 2.5rem;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  box-shadow: 0 0.125rem 0.25rem 0 rgba(0, 0, 0, 0.2);
  border: 0.0625rem solid #cccccc;
  border-radius: 100%;
  background-color: #e60000;
  color: #FFFFFF;
  opacity: 1;
  transition: opacity 0.3s ease-out, left 0.3s ease-out;
}

.vfes-ms-content .vfms-card-configurator__button.hide {
  display: inline-block;
  pointer-events: none;
  opacity: 0;
}

.vfes-ms-content .vfms-card-configurator__button-less {
  left: 0;
}

.vfes-ms-content .vfms-card-configurator__button-less.hide {
  left: -0.625rem;
}

.vfes-ms-content .vfms-card-configurator__button-more {
  right: 0;
}

.vfes-ms-content .vfms-card-configurator__button-more.hide {
  right: -0.625rem;
}

.vfes-ms-content .vfms-card-configurator.vfms-card-terminal {
  flex-direction: column;
  text-align: left;
  padding: 0.5rem 1.25rem 1rem;
}

.vfes-ms-content .vfms-card-configurator.vfms-card-terminal.hide {
  display: none;
}

.vfes-ms-content .vfms-card-configurator.vfms-card-terminal.show {
  display: flex;
}

.vfes-ms-content .vfms-card-configurator.vfms-card-terminal .vfms-card-configurator__column {
  flex-direction: column;
  align-items: flex-start;
}

.vfes-ms-content .vfms-card-configurator.vfms-card-terminal .vfms-card-configurator__column img {
  align-self: center;
}

.vfes-ms-content .vfms-card-configurator.vfms-card-terminal .vfms-card-configurator__column .vfes-button {
  margin-top: 1rem;
}

.vfes-ms-content .vfms-card-one {
  border: none;
}

.vfes-ms-content .vfms-card-one .vfes-card-rate__dataitem-price {
  font-size: 1.25rem;
  text-align: left;
  line-height: 1.2;
}

.vfes-ms-content .vfms-card-one .vfes-card-rate__dataitem {
  padding: 0.625rem 0.3125rem 0 0.5rem;
}

.vfes-ms-content .vfms-card-one .vfes-card-rate__dataitem .vfes-title {
  line-height: 1.2;
}

.vfes-ms-content .vfms-card-one .vfes-card-rate__dataitem svg {
  width: 3.125rem;
  height: 3.125rem;
}

.vfes-ms-content .vfms-card-one .vfes-bestprice {
  display: flex;
  padding: 0.3125rem 0;
}

.vfes-ms-content .vfms-card-one .vfes-bestprice img {
  width: 1.5rem;
  height: 1.5rem;
}

.vfes-ms-content .vfms-card-one .vfms-card-rate__tooltip {
  position: relative;
  padding: 0.125rem 0 0.125rem 0;
  border-bottom: 0.0625rem solid #ebebeb;
  margin-bottom: 0.3125rem;
  display: flex;
  justify-content: center;
  align-items: center;
}

.vfes-ms-content .vfms-card-one .vfms-card-rate__tooltip p {
  margin-bottom: 0;
  display: flex;
  align-items: center;
  padding: 0 0.5rem 0 0.5rem;
}

.vfes-ms-content .vfms-card-one .vfms-card-rate__tooltip button {
  position: relative;
  bottom: initial;
  right: initial;
}

.vfes-ms-content .vfms-card-one .vfms-configurator__button {
  padding: 0.625rem 0.625rem 1.25rem 1.125rem;
  display: flex;
  flex-direction: column;
}

.vfes-ms-content .vfms-card-one--offer {
  border: 0.0625rem solid #9C2AA0;
}

.vfes-ms-content .vfms-card-one--offer-super {
  border: 0.0625rem solid #5E2750;
}

.vfes-ms-content .vfms-card-one--offer-color {
  border: 0.0625rem solid #9C2AA0;
}

.vfes-ms-content .vfms-card-packtv {
  padding: 1rem 1.25rem;
  position: relative;
  overflow: hidden;
  border: none;
}

.vfes-ms-content .vfms-card-packtv.vfms-card-tv--offer {
  border: 0.0625rem solid #9C2AA0;
}

.vfes-ms-content .vfms-card-packtv.vfms-card-tv--offer-albergine {
  border: 0.0625rem solid #5E2750;
}

.vfes-ms-content .vfms-card-packtv.vfms-card-tv--offercolour {
  border: 0.0625rem solid #00B0CA;
}

.vfes-ms-content .vfms-card-packtv__border {
  position: absolute;
  height: 0.75rem;
  left: 0;
  right: 0;
  top: 0;
}

.vfes-ms-content .vfms-card-packtv .vfes-button {
  width: 100%;
}

.vfes-ms-content .vfes-carousel--active {
  overflow: initial;
}

.vfes-ms-content .vfes-carousel--active .vfes-carousel__list-element {
  opacity: 0;
  transition: opacity 0.3s ease-out;
}

.vfes-ms-content .vfes-carousel--active .vfes-carousel__list-element--active {
  opacity: 1;
}

.vfes-ms-content .vfes-carousel__arrow {
  left: -0.75rem;
}

.vfes-ms-content .vfes-carousel__arrow--right {
  right: -0.75rem;
  left: auto;
}

.vfes-ms-content .vfms-ticket__body.hide + .vfes-card__list-footer {
  border-top: 0;
}

.vfes-ms-content .vfms-ticket__dropdown-button {
  position: absolute;
  top: 0.1875rem;
  right: 0.625rem;
  color: #e60000;
}

.vfes-ms-content .vfms-ticket__content {
  max-height: 18.75rem;
  overflow-y: auto;
}

.vfes-ms-content .vfms-ticket__overlay {
  position: fixed;
  background-color: rgba(0, 0, 0, 0.8);
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: block;
}

.vfes-ms-content .vfms-ticket__overlay.hide {
  display: none;
}

.vfes-ms-content .vfms-ticket__element {
  margin-bottom: 0.75rem;
}

.vfes-ms-content .vfms-ticket__element:last-child {
  margin-bottom: 0;
}

.vfes-ms-content .vfms-ticket__wrapper.fixed {
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: 7;
}

.vfes-ms-content .vfms-ticket .vfes-card__list-header .vfes-card__list-paragraphs .vfes-paragraph {
  width: auto;
}

.vfes-ms-content .vfes-alert {
  position: relative;
  height: 2.4375rem;
  top: 0.3125rem;
  overflow: hidden;
  transition: height 0.5s ease-out;
  letter-spacing: normal;
}

.vfes-ms-content .vfes-alert.hide {
  height: 0;
}

.vfes-ms-content .vfes-alert-body {
  background-color: #FFFFFF;
}

.vfes-ms-content .vfes-card__list {
  margin-bottom: 0;
}

.vfes-ms-content .vfes-card__list-content .vfes-paragraph {
  margin-left: 3.125rem;
}

.vfes-ms-content .vfes-card__list-content .vfes-card__list-list {
  margin-left: 3.125rem;
}

.vfes-ms-content .vfes-card__list-container.hide {
  display: none;
}

.vfes-ms-content .vfes-card__list-footer {
  border-top: 0.0625rem solid #e60000;
}

.vfes-ms-content .vfes-card__list-footer .vfes-button {
  width: 100%;
}

.vfes-ms-content .vfes-button.js-modal-confirm-accept {
  margin: 0.625rem;
}

.vfes-ms-content .vfms-padding-cintillo {
  padding: 0.125rem 0.375rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content {
    /*********************************************************/
    /****************** CONFIGURATOR STYLES ******************/
    /*********************************************************/
  }
  .vfes-ms-content .vfms-card-configurator {
    padding: 1.125rem 2.6875rem 1.125rem 1.0625rem;
  }
  .vfes-ms-content .vfms-card-configurator.vfms-card-terminal {
    flex-direction: row;
    padding: 1.125rem 2.6875rem 1.125rem 1.0625rem;
  }
  .vfes-ms-content .vfms-card-configurator.vfms-card-terminal .vfms-card-configurator__column {
    flex-direction: row;
    align-items: center;
  }
  .vfes-ms-content .vfms-card-configurator.vfms-card-terminal .vfms-card-configurator__column img {
    width: 6.25rem;
    height: 6.25rem;
  }
  .vfes-ms-content .vfms-card-configurator.vfms-card-terminal .vfms-card-configurator__column .vfes-button {
    margin-top: 0;
    width: 9.375rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content {
    /*********************************************************/
    /****************** CONFIGURATOR STYLES ******************/
    /*********************************************************/
    /**************************************************/
    /***************** TICKET STYLES ******************/
    /**************************************************/
  }
  .vfes-ms-content .vfms-configurator .vfes-layout__item:not(.vfms-ticket__wrapper) {
    z-index: 8;
  }
  .vfes-ms-content .vfms-configurator .vfes-title {
    text-align: left;
  }
  .vfes-ms-content .vfms-card-configurator {
    padding: 1.125rem 2.375rem 1.125rem 0.375rem;
  }
  .vfes-ms-content .vfes-carousel__arrow {
    width: 2.5rem;
    height: 2.5rem;
  }
  .vfes-ms-content .vfes-carousel__arrow::after {
    height: 1rem;
    width: 1rem;
  }
  .vfes-ms-content .vfms-ticket {
    max-width: 23.75rem;
    width: 100%;
    float: right;
  }
  .vfes-ms-content .vfms-ticket__wrapper {
    position: relative;
    overflow: initial;
    top: 3.75rem;
  }
  .vfes-ms-content .vfms-ticket__wrapper.fixed {
    width: 100% !important;
    max-width: 75rem;
    bottom: auto;
    top: 5rem;
    bottom: initial;
    left: 50%;
    transform: translateX(-50%);
  }
  .vfes-ms-content .vfms-ticket__overlay {
    display: none;
  }
  .vfes-ms-content .vfms-ticket__content {
    max-height: 20rem;
  }
  .vfes-ms-content .vfes-alert {
    display: none;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi52ZmVzLW1zLWNvbnRlbnQge1xuXG4gICAgOmZvY3VzIHtcbiAgICAgICAgb3V0bGluZTogM3B4IHNvbGlkICMwMDdDOTI7XG4gICAgfVxuXG4gICAgLnZmZXMtYnV0dG9uOm5vdCgudmZlcy1idXR0b24tLXRlcnRpYXJ5KSB7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIH1cblxuICAgIC52ZmVzLWxheW91dF9fd3JhcHBlciB7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgfVxuXG4gICAgLnZmZXMtYnV0dG9uLS1zZWNvbmRhcnlbZGlzYWJsZWRdIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIH1cblxuICAgIC52Zm1zLWJhbm5lcntcblxuICAgICAgICAmLWxheW91dHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDMwcHggMDtcbiAgICAgICAgfVxuICAgICAgICAudmZlcy10aXRsZS0tMXtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgICAgIH1cblxuICAgICAgICAudmZlcy10aXRsZS0tM3tcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAudmZtcy1sYWJlbF9fb3V0c3RhbmRpbmd7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAtMjJweDtcbiAgICAgICAgcGFkZGluZzogNXB4IDEwcHggNXB4IDEwcHg7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDZweCA2cHggMCAwO1xuICAgIH1cbiAgICBcbiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuICAgIC8qKioqKioqKioqKioqKioqKiogQ09ORklHVVJBVE9SIFNUWUxFUyAqKioqKioqKioqKioqKioqKiovXG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAgICAudmZtcy1jb25maWd1cmF0b3Ige1xuXG4gICAgICAgIC8vRXNxdWluYXMgZGUgY2FyZHMgY29uIGNpbnRpbGxvXG4gICAgICAgIFxuICAgICAgICAudmZtcy1sYWJlbF9fb3V0c3RhbmRpbmcgKyAudmZlcy1jYXJkIHtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDAgNnB4IDZweCA2cHg7XG4gICAgICAgIH1cblxuXHRcdC8vRmluIG1vZGljZmljYWNpw7NuIGVzcXVpbmFzIGRlIGNhcmRzIGNvbiBjaW50aWxsb1xuXG5cdFx0Jl9fc3RhdHVzIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgcmlnaHQ6IC0yNXB4O1xuICAgICAgICAgICAgdG9wOiAtN3B4O1xuICAgICAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgICAgICBib3JkZXItbGVmdDogNDBweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgIGJvcmRlci1yaWdodDogNDBweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgIGJvcmRlci10b3A6IDQwcHggc29saWQgI2NjY2NjYztcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjY2M7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtMTM1ZGVnKTtcbiAgICAgICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgMC4zcyBlYXNlLW91dCwgYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2Utb3V0O1xuXHRcdFx0b3BhY2l0eTogMDtcblxuXHRcdH1cblxuICAgICAgICAmX19pY29uIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogNXB4O1xuICAgICAgICAgICAgcmlnaHQ6IDVweDtcbiAgICAgICAgICAgIHotaW5kZXg6IDI7XG5cbiAgICAgICAgICAgICYtLXRpY2sge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmX19yZW1vdmUge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5hZGRlZCB7XG4gICAgICAgICAgICAudmZtcy1jb25maWd1cmF0b3JfX3N0YXR1cyB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzQyODYwMDtcbiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiAjNDI4NjAwO1xuXHRcdFx0XHRvcGFjaXR5OiAxO1xuXHRcdFx0XHR0cmFuc2l0aW9uOiAwLjVzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAudmZtcy1jb25maWd1cmF0b3JfX2ljb24ge1xuICAgICAgICAgICAgICAgICYtLXRpY2sge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgJi0tcGx1cyB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAudmZtcy1jb25maWd1cmF0b3JfX2FkZCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLnZmbXMtY29uZmlndXJhdG9yX19yZW1vdmUge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJi52Zm1zLWNvbmZpZ3VyYXRvcl9fc2luZ2xlIC52Zm1zLWNvbmZpZ3VyYXRvcl9fYWRkIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC52ZmVzLXRpdGxlIHtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIH1cblxuICAgICAgICAudmZlcy1sYXlvdXRfX2l0ZW0ge1xuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC52Zm1zLWNhcmQtY29uZmlndXJhdG9yIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgcGFkZGluZzogMTRweCAwIDI0cHg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuXG4gICAgICAgIGltZyB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgcCB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAmX19jb2x1bW4ge1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgZmxleDogMSA1MCU7XG5cbiAgICAgICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmX19pbmZvIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICAgICAgICB9XG5cbiAgICAgICAgJl9fY291bnRlciB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBwYWRkaW5nOiAwIDIwcHg7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICZfX251bSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjY2NjO1xuICAgICAgICAgICAgcGFkZGluZzogMjNweCA0MHB4O1xuICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDI4cHg7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgICAgIH1cblxuICAgICAgICAmX19idXR0b24ge1xuICAgICAgICAgICAgd2lkdGg6IDQwcHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICAgICAgYm94LXNoYWRvdzogMCAycHggNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2NjY2NjYztcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTYwMDAwO1xuICAgICAgICAgICAgY29sb3I6ICNGRkZGRkY7XG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2Utb3V0LCBsZWZ0IDAuM3MgZWFzZS1vdXQ7XG5cbiAgICAgICAgICAgICYuaGlkZSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICYtbGVzcyB7XG4gICAgICAgICAgICAgICAgbGVmdDogMDtcblxuICAgICAgICAgICAgICAgICYuaGlkZSB7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IC0xMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJi1tb3JlIHtcbiAgICAgICAgICAgICAgICByaWdodDogMDtcblxuICAgICAgICAgICAgICAgICYuaGlkZSB7XG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtMTBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmLnZmbXMtY2FyZC10ZXJtaW5hbCB7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDhweCAyMHB4IDE2cHg7XG5cbiAgICAgICAgICAgICYuaGlkZXtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmLnNob3d7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJiAudmZtcy1jYXJkLWNvbmZpZ3VyYXRvcl9fY29sdW1uIHtcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuXG4gICAgICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC52ZmVzLWJ1dHRvbiB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDE2cHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLnZmbXMtY2FyZC1vbmV7XG5cbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAudmZlcy1jYXJkLXJhdGVfX2RhdGFpdGVtLXByaWNle1xuICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgICAgIH1cblxuICAgICAgICAudmZlcy1jYXJkLXJhdGVfX2RhdGFpdGVte1xuICAgICAgICAgICAgcGFkZGluZzogMTBweCA1cHggMCA4cHg7XG5cbiAgICAgICAgICAgIC52ZmVzLXRpdGxle1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzdmd7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDUwcHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLnZmZXMtYmVzdHByaWNle1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweCAwO1xuXG4gICAgICAgICAgICBpbWd7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDI0cHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAyNHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLnZmbXMtY2FyZC1yYXRlX190b29sdGlwe1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgcGFkZGluZzogMnB4IDAgMnB4IDA7XG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ViZWJlYjtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgXG4gICAgXG4gICAgICAgICAgICBwe1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDAgOHB4IDAgOHB4O1xuICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgYnV0dG9ue1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICBib3R0b206IGluaXRpYWw7XG4gICAgICAgICAgICAgICAgcmlnaHQ6IGluaXRpYWw7XG4gICAgICAgICAgICB9XG4gICAgXG4gICAgXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC52Zm1zLWNvbmZpZ3VyYXRvcl9fYnV0dG9ue1xuICAgICAgICAgICAgcGFkZGluZzogMTBweCAxMHB4IDIwcHggMThweDtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLnZmbXMtY2FyZC1vbmUtLW9mZmVye1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjOUMyQUEwO1xuICAgIH1cblxuXHQudmZtcy1jYXJkLW9uZS0tb2ZmZXItc3VwZXJ7XG5cdFx0Ym9yZGVyOiAxcHggc29saWQgIzVFMjc1MDtcblx0fVxuICAgIC52Zm1zLWNhcmQtb25lLS1vZmZlci1jb2xvcntcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzlDMkFBMDtcbiAgICB9XG5cbiAgICAudmZtcy1jYXJkLXBhY2t0diB7XG4gICAgICAgIHBhZGRpbmc6IDE2cHggMjBweDtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICBib3JkZXI6IG5vbmU7XG5cbiAgICAgICAgJi52Zm1zLWNhcmQtdHYtLW9mZmVye1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzlDMkFBMDtcbiAgICAgICAgfVxuXG5cdFx0Ji52Zm1zLWNhcmQtdHYtLW9mZmVyLWFsYmVyZ2luZXtcblx0XHRcdGJvcmRlcjogMXB4IHNvbGlkICM1RTI3NTA7XG5cdFx0fVxuXG4gICAgICAgICYudmZtcy1jYXJkLXR2LS1vZmZlcmNvbG91cntcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMEIwQ0E7XG4gICAgICAgIH1cblxuICAgICAgICAmX19ib3JkZXIge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMnB4O1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgLnZmZXMtYnV0dG9uIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG5cbiAgICB9XG5cbiAgICAudmZlcy1jYXJvdXNlbCB7XG5cbiAgICAgICAgJi0tYWN0aXZlIHtcbiAgICAgICAgICAgIG92ZXJmbG93OiBpbml0aWFsO1xuXG4gICAgICAgICAgICAudmZlcy1jYXJvdXNlbF9fbGlzdC1lbGVtZW50IHtcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlLW91dDtcbiAgICBcbiAgICAgICAgICAgICAgICAmLS1hY3RpdmUge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICZfX2Fycm93IHtcbiAgICAgICAgICAgIGxlZnQ6IC0xMnB4O1xuXG4gICAgICAgICAgICAmLS1yaWdodCB7XG4gICAgICAgICAgICAgICAgcmlnaHQ6IC0xMnB4O1xuICAgICAgICAgICAgICAgIGxlZnQ6IGF1dG87XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4gICAgLyoqKioqKioqKioqKioqKioqIFRJQ0tFVCBTVFlMRVMgKioqKioqKioqKioqKioqKioqL1xuICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAgICAudmZtcy10aWNrZXQge1xuICAgICAgICAmX19ib2R5LmhpZGUgKyAudmZlcy1jYXJkX19saXN0LWZvb3RlciB7XG4gICAgICAgICAgICBib3JkZXItdG9wOiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgJl9fZHJvcGRvd24tYnV0dG9uIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogM3B4O1xuICAgICAgICAgICAgcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICBjb2xvcjogI2U2MDAwMDtcbiAgICAgICAgfVxuXG4gICAgICAgICZfX2NvbnRlbnQge1xuICAgICAgICAgICAgbWF4LWhlaWdodDogMzAwcHg7XG4gICAgICAgICAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgICAgICB9XG5cbiAgICAgICAgJl9fb3ZlcmxheSB7XG4gICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuOCk7XG4gICAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcblxuICAgICAgICAgICAgJi5oaWRlIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJl9fZWxlbWVudCB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMnB4O1xuXG4gICAgICAgICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmX193cmFwcGVyLmZpeGVkIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICB6LWluZGV4OiA3O1xuICAgICAgICB9XG5cbiAgICAgICAgLnZmZXMtY2FyZF9fbGlzdC1oZWFkZXIgLnZmZXMtY2FyZF9fbGlzdC1wYXJhZ3JhcGhzIC52ZmVzLXBhcmFncmFwaCB7XG4gICAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC52ZmVzLWFsZXJ0IHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBoZWlnaHQ6IDM5cHg7XG4gICAgICAgIHRvcDogNXB4O1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICB0cmFuc2l0aW9uOiBoZWlnaHQgMC41cyBlYXNlLW91dDtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IG5vcm1hbDtcblxuICAgICAgICAmLmhpZGUge1xuICAgICAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgJi1ib2R5IHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAudmZlcy1jYXJkX19saXN0IHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgJi1jb250ZW50IHtcblxuICAgICAgICAgICAgLnZmZXMtcGFyYWdyYXBoIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNTBweDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLnZmZXMtY2FyZF9fbGlzdC1saXN0IHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNTBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICYtY29udGFpbmVyLmhpZGUge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgfVxuXG4gICAgICAgICYtZm9vdGVyIHtcbiAgICAgICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTYwMDAwO1xuICAgIFxuICAgICAgICAgICAgLnZmZXMtYnV0dG9uIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuXG5cdC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblx0LyoqKioqKioqKioqKioqKioqIENoYW5uZWwgTU9EQUwgKioqKioqKioqKioqKioqKioqL1xuXHQvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cblx0LnZmZXMtYnV0dG9uLmpzLW1vZGFsLWNvbmZpcm0tYWNjZXB0e1xuXHRcdG1hcmdpbjogMTBweDtcblx0fVxuXG4gICAgLnZmbXMtcGFkZGluZy1jaW50aWxsb3tcbiAgICAgICAgcGFkZGluZzogMnB4IDZweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuICAgICAgICAvKioqKioqKioqKioqKioqKioqIENPTkZJR1VSQVRPUiBTVFlMRVMgKioqKioqKioqKioqKioqKioqL1xuICAgICAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuICAgICAgICAudmZtcy1jYXJkLWNvbmZpZ3VyYXRvciB7XG4gICAgICAgICAgICBwYWRkaW5nOiAxOHB4IDQzcHggMThweCAxN3B4O1xuXG4gICAgICAgICAgICAmLnZmbXMtY2FyZC10ZXJtaW5hbCB7XG4gICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxOHB4IDQzcHggMThweCAxN3B4O1xuICAgIFxuICAgICAgICAgICAgICAgIC52Zm1zLWNhcmQtY29uZmlndXJhdG9yX19jb2x1bW4ge1xuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIFxuICAgICAgICAgICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDBweDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgICAgICAgICAudmZlcy1idXR0b24ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxNTBweDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4gICAgICAgIC8qKioqKioqKioqKioqKioqKiogQ09ORklHVVJBVE9SIFNUWUxFUyAqKioqKioqKioqKioqKioqKiovXG4gICAgICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4gICAgICAgIC52Zm1zLWNvbmZpZ3VyYXRvciB7XG4gICAgICAgICAgICAudmZlcy1sYXlvdXRfX2l0ZW06bm90KC52Zm1zLXRpY2tldF9fd3JhcHBlcikge1xuICAgICAgICAgICAgICAgIHotaW5kZXg6IDg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAudmZlcy10aXRsZSB7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC52Zm1zLWNhcmQtY29uZmlndXJhdG9yIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDE4cHggMzhweCAxOHB4IDZweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC52ZmVzLWNhcm91c2VsX19hcnJvdyB7XG4gICAgICAgICAgICB3aWR0aDogNDBweDtcbiAgICAgICAgICAgIGhlaWdodDogNDBweDtcblxuICAgICAgICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIGhlaWdodDogMTZweDtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTZweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAgICAgICAgLyoqKioqKioqKioqKioqKioqIFRJQ0tFVCBTVFlMRVMgKioqKioqKioqKioqKioqKioqL1xuICAgICAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4gICAgICAgIC52Zm1zLXRpY2tldCB7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDM4MHB4O1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICZfX3dyYXBwZXIge1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICBvdmVyZmxvdzogaW5pdGlhbDtcbiAgICAgICAgICAgICAgICB0b3A6IDYwcHg7XG5cbiAgICAgICAgICAgICAgICAmLmZpeGVkIHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTogYXV0bztcbiAgICAgICAgICAgICAgICAgICAgdG9wOiA4MHB4O1xuICAgICAgICAgICAgICAgICAgICBib3R0b206IGluaXRpYWw7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJl9fb3ZlcmxheSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJl9fY29udGVudCB7XG4gICAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzIwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gXG5cbiAgICAgICAgLnZmZXMtYWxlcnQge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cblxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0FBLEFBQUEsZ0JBQWdCLENBQUM7RUF5Q2IsMkRBQTJEO0VBQzNELDJEQUEyRDtFQUMzRCwyREFBMkQ7RUF5VTNELG9EQUFvRDtFQUNwRCxvREFBb0Q7RUFDcEQsb0RBQW9EO0VBZ0d2RCxvREFBb0Q7RUFDcEQsb0RBQW9EO0VBQ3BELG9EQUFvRDtDQXdHcEQ7O0FBaGtCRCxBQUVJLGdCQUZZLENBRVosTUFBTSxDQUFDO0VBQ0gsT0FBTyxFQUFFLGlCQUFpQjtDQUM3Qjs7QUFKTCxBQU1JLGdCQU5ZLENBTVosWUFBWSxBQUFBLElBQUssQ0FBQSxzQkFBc0IsRUFBRTtFQUNyQyxNQUFNLEVBQUUscUJBQXFCO0NBQ2hDOztBQVJMLEFBVUksZ0JBVlksQ0FVWixxQkFBcUIsQ0FBQztFQUNsQixRQUFRLEVBQUUsTUFBTTtDQUNuQjs7QUFaTCxBQWNJLGdCQWRZLENBY1osdUJBQXVCLENBQUEsQUFBQSxRQUFDLEFBQUEsRUFBVTtFQUM5QixnQkFBZ0IsRUFBRSxJQUFJO0VBQ3RCLEtBQUssRUFBRSxJQUFJO0VBQ1gsY0FBYyxFQUFFLElBQUk7Q0FDdkI7O0FBbEJMLEFBc0JRLGdCQXRCUSxDQXNCUCxtQkFBTyxDQUFBO0VBQ0osT0FBTyxFQUFFLE1BQU07Q0FDbEI7O0FBeEJULEFBeUJRLGdCQXpCUSxDQW9CWixZQUFZLENBS1IsY0FBYyxDQUFBO0VBQ1YsYUFBYSxFQUFFLElBQUk7Q0FDdEI7O0FBM0JULEFBNkJRLGdCQTdCUSxDQW9CWixZQUFZLENBU1IsY0FBYyxDQUFBO0VBQ1YsYUFBYSxFQUFFLENBQUM7Q0FDbkI7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 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
