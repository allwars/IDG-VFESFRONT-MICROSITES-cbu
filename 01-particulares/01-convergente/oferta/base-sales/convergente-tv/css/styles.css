/**
 * Vodafone Reboot Framework: Version 2.4.1. Generation Date: 2020-08-26T11:28:39.922Z
 */

.vfes-ms-content-bannertv .vfms-container {
  background-image: url("https://www.vodafone.es/c/statics/imagen/background_mmobile.jpg");
  background-size: cover;
  padding: 2.5rem 0;
}

.vfes-ms-content-bannertv .vfms-text {
  align-items: center;
}

.vfes-ms-content-bannertv .vfes-colours--vodafone-white {
  color: white;
}

.vfes-ms-content-bannertv .vfms-button {
  padding: .5625rem .875rem .6875rem;
  font-family: VodafoneRegular,Helvetica,Arial,sans-serif;
  text-align: center;
  text-decoration: none;
  cursor: pointer;
  display: inline-block;
  box-sizing: border-box;
  border-radius: .375rem;
  line-height: 1.25;
  width: 100%;
  margin-right: 0;
  margin-left: 0;
}

.vfes-ms-content-bannertv .vfms-button--tertiary {
  border: none;
  background-color: #fff;
  color: #666;
}

.vfes-ms-content-bannertv .vfms-title--4 {
  font-size: 1.25rem;
  line-height: 1.23;
}

.vfes-ms-content-bannertv .vfms-title--1 {
  font-size: 2rem;
  line-height: 1.1;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-bannertv .vfms-text {
    align-items: flex-end;
  }
  .vfes-ms-content-bannertv .vfms-container {
    background-image: url("https://www.vodafone.es/c/statics/imagen/background_taablet.jpg");
    background-size: cover;
    padding: 3.5rem 0;
  }
  .vfes-ms-content-bannertv .vfms-button {
    width: auto;
    font-size: 1.25rem;
  }
  .vfes-ms-content-bannertv .vfms-title--4 {
    font-size: 1.5rem;
  }
  .vfes-ms-content-bannertv .vfms-title--1 {
    font-size: 2.25rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-bannertv .vfms-container {
    background-image: url("https://www.vodafone.es/c/statics/imagen/background_deesktop.jpg");
    background-size: cover;
    padding: 3.75rem 0;
  }
  .vfes-ms-content-bannertv .vfms-title--4 {
    font-size: 1.625rem;
  }
  .vfes-ms-content-bannertv .vfms-title--1 {
    font-size: 2.75rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi52ZmVzLW1zLWNvbnRlbnQtYmFubmVydHYge1xuICAudmZtcy1jb250YWluZXJ7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iYWNrZ3JvdW5kX21tb2JpbGUuanBnXCIpO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgcGFkZGluZzogMi41cmVtIDA7XG4gIH1cbiAgLnZmbXMtdGV4dHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG4gIC52ZmVzLWNvbG91cnMtLXZvZGFmb25lLXdoaXRlIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH1cbiAgLnZmbXMtYnV0dG9uIHtcbiAgICBwYWRkaW5nOiAuNTYyNXJlbSAuODc1cmVtIC42ODc1cmVtO1xuICAgIGZvbnQtZmFtaWx5OiBWb2RhZm9uZVJlZ3VsYXIsSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWY7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgYm9yZGVyLXJhZGl1czogLjM3NXJlbTtcbiAgICBsaW5lLWhlaWdodDogMS4yNTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gIH1cbiAgLnZmbXMtYnV0dG9uLS10ZXJ0aWFyeXtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBjb2xvcjogIzY2NjtcbiAgfVxuICAudmZtcy10aXRsZS0tNCB7XG4gICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjIzO1xuICB9XG4gIC52Zm1zLXRpdGxlLS0xIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMTtcbiAgfVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgLnZmbXMtdGV4dHtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIH1cblxuICAudmZtcy1jb250YWluZXJ7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iYWNrZ3JvdW5kX3RhYWJsZXQuanBnXCIpO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgcGFkZGluZzogMy41cmVtIDA7XG4gIH1cbiAgLnZmbXMtYnV0dG9uICB7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICB9XG4gIC52Zm1zLXRpdGxlLS00IHtcbiAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgfVxuICAudmZtcy10aXRsZS0tMSB7XG4gICAgZm9udC1zaXplOiAyLjI1cmVtO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG5cbiAgLnZmbXMtY29udGFpbmVye1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmFja2dyb3VuZF9kZWVza3RvcC5qcGdcIik7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBwYWRkaW5nOiAzLjc1cmVtIDA7XG4gIH1cbiAgLnZmbXMtdGl0bGUtLTQge1xuICAgIGZvbnQtc2l6ZTogMS42MjVyZW07XG4gIH1cbiAgLnZmbXMtdGl0bGUtLTEge1xuICAgIGZvbnQtc2l6ZTogMi43NXJlbTtcbiAgfVxufVxuXG59Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0FBLEFBQ0UseUJBRHVCLENBQ3ZCLGVBQWUsQ0FBQTtFQUNiLGdCQUFnQixFQUFFLHNFQUFzRTtFQUN4RixlQUFlLEVBQUUsS0FBSztFQUN0QixPQUFPLEVBQUUsUUFBUTtDQUNsQjs7QUFMSCxBQU1FLHlCQU51QixDQU12QixVQUFVLENBQUE7RUFDUixXQUFXLEVBQUUsTUFBTTtDQUNwQjs7QUFSSCxBQVNFLHlCQVR1QixDQVN2Qiw2QkFBNkIsQ0FBQztFQUM1QixLQUFLLEVBQUUsS0FBSztDQUNiOztBQVhILEFBWUUseUJBWnVCLENBWXZCLFlBQVksQ0FBQztFQUNYLE9BQU8sRUFBRSx5QkFBeUI7RUFDbEMsV0FBVyxFQUFFLDBDQUEwQztFQUN2RCxVQUFVLEVBQUUsTUFBTTtFQUNsQixlQUFlLEVBQUUsSUFBSTtFQUNyQixNQUFNLEVBQUUsT0FBTztFQUNmLE9BQU8sRUFBRSxZQUFZO0VBQ3JCLFVBQVUsRUFBRSxVQUFVO0VBQ3RCLGFBQWEsRUFBRSxPQUFPO0VBQ3RCLFdBQVcsRUFBRSxJQUFJO0VBQ2pCLEtBQUssRUFBRSxJQUFJO0VBQ1gsWUFBWSxFQUFFLENBQUM7RUFDZixXQUFXLEVBQUUsQ0FBQztDQUNmOztBQXpCSCxBQTBCRSx5QkExQnVCLENBMEJ2QixzQkFBc0IsQ0FBQTtFQUNwQixNQUFNLEVBQUUsSUFBSTtFQUNaLGdCQUFnQixFQUFFLElBQUk7RUFDdEIsS0FBSyxFQUFFLElBQUk7Q0FDWjs7QUE5QkgsQUErQkUseUJBL0J1QixDQStCdkIsY0FBYyxDQUFDO0VBQ2IsU0FBUyxFQUFFLE9BQU87RUFDbEIsV0FBVyxFQUFFLElBQUk7Q0FDbEI7O0FBbENILEFBbUNFLHlCQW5DdUIsQ0FtQ3ZCLGNBQWMsQ0FBQztFQUNiLFNBQVMsRUFBRSxJQUFJO0VBQ2YsV0FBVyxFQUFFLEdBQUc7Q0FDakI7O0FBQ0gsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXZDbkMsQUF3Q0UseUJBeEN1QixDQXdDdkIsVUFBVSxDQUFBO0lBQ1IsV0FBVyxFQUFFLFFBQVE7R0FDdEI7RUExQ0gsQUE0Q0UseUJBNUN1QixDQTRDdkIsZUFBZSxDQUFBO0lBQ2IsZ0JBQWdCLEVBQUUsc0VBQXNFO0lBQ3hGLGVBQWUsRUFBRSxLQUFLO0lBQ3RCLE9BQU8sRUFBRSxRQUFRO0dBQ2xCO0VBaERILEFBaURFLHlCQWpEdUIsQ0FpRHZCLFlBQVksQ0FBRTtJQUNaLEtBQUssRUFBRSxJQUFJO0lBQ1gsU0FBUyxFQUFFLE9BQU87R0FDbkI7RUFwREgsQUFxREUseUJBckR1QixDQXFEdkIsY0FBYyxDQUFDO0lBQ2IsU0FBUyxFQUFFLE1BQU07R0FDbEI7RUF2REgsQUF3REUseUJBeER1QixDQXdEdkIsY0FBYyxDQUFDO0lBQ2IsU0FBUyxFQUFFLE9BQU87R0FDbkI7OztBQUdILE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUE3RG5DLEFBK0RFLHlCQS9EdUIsQ0ErRHZCLGVBQWUsQ0FBQTtJQUNiLGdCQUFnQixFQUFFLHVFQUF1RTtJQUN6RixlQUFlLEVBQUUsS0FBSztJQUN0QixPQUFPLEVBQUUsU0FBUztHQUNuQjtFQW5FSCxBQW9FRSx5QkFwRXVCLENBb0V2QixjQUFjLENBQUM7SUFDYixTQUFTLEVBQUUsUUFBUTtHQUNwQjtFQXRFSCxBQXVFRSx5QkF2RXVCLENBdUV2QixjQUFjLENBQUM7SUFDYixTQUFTLEVBQUUsT0FBTztHQUNuQiJ9 */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi52ZmVzLW1zLWNvbnRlbnQtYmFubmVydHYge1xuICAudmZtcy1jb250YWluZXJ7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iYWNrZ3JvdW5kX21tb2JpbGUuanBnXCIpO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgcGFkZGluZzogMi41cmVtIDA7XG4gIH1cbiAgLnZmbXMtdGV4dHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG4gIC52ZmVzLWNvbG91cnMtLXZvZGFmb25lLXdoaXRlIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH1cbiAgLnZmbXMtYnV0dG9uIHtcbiAgICBwYWRkaW5nOiAuNTYyNXJlbSAuODc1cmVtIC42ODc1cmVtO1xuICAgIGZvbnQtZmFtaWx5OiBWb2RhZm9uZVJlZ3VsYXIsSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWY7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgYm9yZGVyLXJhZGl1czogLjM3NXJlbTtcbiAgICBsaW5lLWhlaWdodDogMS4yNTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gIH1cbiAgLnZmbXMtYnV0dG9uLS10ZXJ0aWFyeXtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBjb2xvcjogIzY2NjtcbiAgfVxuICAudmZtcy10aXRsZS0tNCB7XG4gICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjIzO1xuICB9XG4gIC52Zm1zLXRpdGxlLS0xIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMTtcbiAgfVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgLnZmbXMtdGV4dHtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIH1cblxuICAudmZtcy1jb250YWluZXJ7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iYWNrZ3JvdW5kX3RhYWJsZXQuanBnXCIpO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgcGFkZGluZzogMy41cmVtIDA7XG4gIH1cbiAgLnZmbXMtYnV0dG9uICB7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICB9XG4gIC52Zm1zLXRpdGxlLS00IHtcbiAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgfVxuICAudmZtcy10aXRsZS0tMSB7XG4gICAgZm9udC1zaXplOiAyLjI1cmVtO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG5cbiAgLnZmbXMtY29udGFpbmVye1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmFja2dyb3VuZF9kZWVza3RvcC5qcGdcIik7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBwYWRkaW5nOiAzLjc1cmVtIDA7XG4gIH1cbiAgLnZmbXMtdGl0bGUtLTQge1xuICAgIGZvbnQtc2l6ZTogMS42MjVyZW07XG4gIH1cbiAgLnZmbXMtdGl0bGUtLTEge1xuICAgIGZvbnQtc2l6ZTogMi43NXJlbTtcbiAgfVxufVxuXG59Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0FBLEFBQ0UseUJBRHVCLENBQ3ZCLGVBQWUsQ0FBQTtFQUNiLGdCQUFnQixFQUFFLHNFQUFzRTtFQUN4RixlQUFlLEVBQUUsS0FBSztFQUN0QixPQUFPLEVBQUUsUUFBUTtDQUNsQjs7QUFMSCxBQU1FLHlCQU51QixDQU12QixVQUFVLENBQUE7RUFDUixXQUFXLEVBQUUsTUFBTTtDQUNwQjs7QUFSSCxBQVNFLHlCQVR1QixDQVN2Qiw2QkFBNkIsQ0FBQztFQUM1QixLQUFLLEVBQUUsS0FBSztDQUNiOztBQVhILEFBWUUseUJBWnVCLENBWXZCLFlBQVksQ0FBQztFQUNYLE9BQU8sRUFBRSx5QkFBeUI7RUFDbEMsV0FBVyxFQUFFLDBDQUEwQztFQUN2RCxVQUFVLEVBQUUsTUFBTTtFQUNsQixlQUFlLEVBQUUsSUFBSTtFQUNyQixNQUFNLEVBQUUsT0FBTztFQUNmLE9BQU8sRUFBRSxZQUFZO0VBQ3JCLFVBQVUsRUFBRSxVQUFVO0VBQ3RCLGFBQWEsRUFBRSxPQUFPO0VBQ3RCLFdBQVcsRUFBRSxJQUFJO0VBQ2pCLEtBQUssRUFBRSxJQUFJO0VBQ1gsWUFBWSxFQUFFLENBQUM7RUFDZixXQUFXLEVBQUUsQ0FBQztDQUNmOztBQXpCSCxBQTBCRSx5QkExQnVCLENBMEJ2QixzQkFBc0IsQ0FBQTtFQUNwQixNQUFNLEVBQUUsSUFBSTtFQUNaLGdCQUFnQixFQUFFLElBQUk7RUFDdEIsS0FBSyxFQUFFLElBQUk7Q0FDWjs7QUE5QkgsQUErQkUseUJBL0J1QixDQStCdkIsY0FBYyxDQUFDO0VBQ2IsU0FBUyxFQUFFLE9BQU87RUFDbEIsV0FBVyxFQUFFLElBQUk7Q0FDbEI7O0FBbENILEFBbUNFLHlCQW5DdUIsQ0FtQ3ZCLGNBQWMsQ0FBQztFQUNiLFNBQVMsRUFBRSxJQUFJO0VBQ2YsV0FBVyxFQUFFLEdBQUc7Q0FDakI7O0FBQ0gsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXZDbkMsQUF3Q0UseUJBeEN1QixDQXdDdkIsVUFBVSxDQUFBO0lBQ1IsV0FBVyxFQUFFLFFBQVE7R0FDdEI7RUExQ0gsQUE0Q0UseUJBNUN1QixDQTRDdkIsZUFBZSxDQUFBO0lBQ2IsZ0JBQWdCLEVBQUUsc0VBQXNFO0lBQ3hGLGVBQWUsRUFBRSxLQUFLO0lBQ3RCLE9BQU8sRUFBRSxRQUFRO0dBQ2xCO0VBaERILEFBaURFLHlCQWpEdUIsQ0FpRHZCLFlBQVksQ0FBRTtJQUNaLEtBQUssRUFBRSxJQUFJO0lBQ1gsU0FBUyxFQUFFLE9BQU87R0FDbkI7RUFwREgsQUFxREUseUJBckR1QixDQXFEdkIsY0FBYyxDQUFDO0lBQ2IsU0FBUyxFQUFFLE1BQU07R0FDbEI7RUF2REgsQUF3REUseUJBeER1QixDQXdEdkIsY0FBYyxDQUFDO0lBQ2IsU0FBUyxFQUFFLE9BQU87R0FDbkI7OztBQUdILE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUE3RG5DLEFBK0RFLHlCQS9EdUIsQ0ErRHZCLGVBQWUsQ0FBQTtJQUNiLGdCQUFnQixFQUFFLHVFQUF1RTtJQUN6RixlQUFlLEVBQUUsS0FBSztJQUN0QixPQUFPLEVBQUUsU0FBUztHQUNuQjtFQW5FSCxBQW9FRSx5QkFwRXVCLENBb0V2QixjQUFjLENBQUM7SUFDYixTQUFTLEVBQUUsUUFBUTtHQUNwQjtFQXRFSCxBQXVFRSx5QkF2RXVCLENBdUV2QixjQUFjLENBQUM7SUFDYixTQUFTLEVBQUUsT0FBTztHQUNuQiJ9 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
