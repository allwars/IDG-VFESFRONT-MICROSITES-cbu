/**
 * Vodafone Reboot Framework: Version 2.7.1. Generation Date: 2021-02-17T18:43:19.588Z
 */

.vfes-ms-content .vf-breadcrumbs li {
  list-style: none;
}

.vfes-ms-content .vf-breadcrumbs li:first-child {
  display: none;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs li:first-child {
    display: block;
  }
}

.vfes-ms-content .vf-breadcrumbs li:last-child {
  display: none;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs li:last-child {
    display: block;
  }
}

.vfes-ms-content .vf-breadcrumbs li:nth-child(2n) a:before {
  border-width: .0625rem;
  border-right: .0625rem solid #333;
  border-top: .0625rem solid #333;
  display: block;
  width: .75rem;
  height: .75rem;
  transform: rotate(-135deg);
  content: "";
  display: inline-block;
  vertical-align: baseline;
  position: relative;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs li:nth-child(2n) a:before {
    display: none;
  }
}

.vfes-ms-content .vf-breadcrumbs__link {
  display: flex;
  align-items: center;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-breadcrumbs__link:after {
    border-width: .0625rem;
    border-right: .0625rem solid #333;
    border-top: .0625rem solid #333;
    display: block;
    width: .75rem;
    height: .75rem;
    transform: rotate(45deg);
    content: "";
    display: inline-block;
    vertical-align: baseline;
    position: relative;
  }
}

.vfes-ms-content .ws10-c-form__radio:checked + .ws10-c-form__label::after {
  background-color: #007c92;
}

.vfes-ms-content .wfms__legal {
  font-size: 0.875rem;
}

.vfes-ms-content .vfms-link {
  color: #E60000;
}

.vfes-ms-content .vfms__banner-terminal {
  display: flex;
}

.vfes-ms-content .vf-banner {
  position: relative;
  background-image:  url('../img/banner/bg-banner-mv.jpg?v=27798610299b2b08e7337b28f7a10027');
  background-size: cover;
  background-repeat: no-repeat;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner {
    background-image:  url('../img/banner/bg-banner-desktop.jpg?v=e9812771cf2a3b02ecd7d53a5b3d3a27');
    background-attachment: fixed;
    background-position-y: -9.375rem;
  }
}

.vfes-ms-content .vf-banner__textcontainer {
  padding-top: 1.25rem;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-banner__textcontainer {
    padding-top: 3.125rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner__textcontainer {
    padding-top: 6.125rem;
    padding-bottom: 6.125rem;
  }
}

.vfes-ms-content .vf-terminales__container--text {
  font-size: 0.875rem;
}

.vfes-ms-content .vf-terminales__container .ws10-c-button {
  width: 100%;
}

.vfes-ms-content .vf-terminales__container .ws10-text--underline {
  text-decoration: underline;
}

.vfes-ms-content .vf-terminales img {
  max-width: 4.625rem;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .ws10-c-carousel__arrow.ws10-c-carousel__arrow--right {
    right: 5rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .ws10-c-carousel__arrow.ws10-c-carousel__arrow--right {
    right: 7rem;
  }
}

.vfes-ms-content .vf-mobile__animation {
  padding: 1.875rem 0;
  position: relative;
}

.vfes-ms-content .vf-mobile__animation--img {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
}

.vfes-ms-content .vf-mobile__apps {
  overflow: hidden;
  min-height: 18.125rem;
  position: relative;
  display: flex;
  align-items: center;
  box-sizing: border-box;
}

.vfes-ms-content .vf-mobile__apps:before {
  content: "";
  position: absolute;
  max-height: 17.5rem;
  top: 1.25rem;
  left: 0;
  right: -100%;
  bottom: 0;
  -webkit-animation: slide 20s linear infinite;
          animation: slide 20s linear infinite;
  background-size: cover;
  background:  url('../img/section-mobile/appilimitada.png?v=a03396e998c085bfd0bab6cab065aa84') 0 100%;
}

@-webkit-keyframes slide {
  100% {
    transform: translateX(-50%);
  }
}

.vfes-ms-content .vf-terminal {
  border-radius: 0.375rem;
  overflow: hidden;
  flex-direction: column;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-terminal {
    flex-direction: row;
  }
}

.vfes-ms-content .vf-terminal__content {
  order: 2;
  text-align: center;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-terminal__content {
    order: 1;
    text-align: left;
  }
}

.vfes-ms-content .vf-terminal__imgdesktop {
  display: none;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-terminal__imgdesktop {
    display: block;
    order: 2;
  }
}

.vfes-ms-content .vf-terminal__imgmobile {
  order: 1;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-terminal__imgmobile {
    display: none;
  }
}

.vfes-ms-content .vf-tv__flexdirection {
  flex-direction: column;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-tv__flexdirection {
    flex-direction: row;
  }
}

.vfes-ms-content .vf-fiber__flexdirection {
  flex-direction: column;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-fiber__flexdirection {
    flex-direction: row;
  }
}

.vfes-ms-content .vf-superWifi__flexdirection {
  flex-direction: column;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-superWifi__flexdirection {
    flex-direction: row-reverse;
  }
}

.vfes-ms-content .vf-superWifi__img {
  max-width: 18.75rem;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-superWifi__img {
    max-width: 28.125rem;
  }
}

.vfes-ms-content .vf-form {
  margin-top: 0.625rem;
  padding: 0 0 0 0;
}

.vfes-ms-content .vf-form__box {
  width: initial;
}

.vfes-ms-content .vf-form__box:first-child {
  padding-right: 1.25rem;
}

.vfes-ms-content .vf-timeline .ws10-c-timeline-steps__title {
  max-width: initial;
}

.vfes-ms-content .vf-timeline .ws10-c-timeline-steps__item {
  min-width: 20%;
}

.vfes-ms-content .vf-ticket {
  position: relative;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-ticket {
    position: absolute;
    right: 1rem;
    padding-top: 1rem;
  }
}

.vfes-ms-content .vf-ticket__floating {
  position: -webkit-sticky;
  position: sticky;
  width: inherit;
  width: 100%;
  max-width: 25rem;
  padding-top: 0.5rem;
}

.vfes-ms-content .vf-ticket__opacity0 {
  opacity: 0;
}

.vfes-ms-content .vf-sticky {
  position: fixed;
  z-index: 1;
  bottom: 0;
  width: 100%;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-sticky {
    display: none;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50e1xuXG4gIC8vIEJyZWFkY3J1bWJzXG4gIC52Zi1icmVhZGNydW1ic3tcbiAgICAmIGxpIHtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG5cbiAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJjpudGgtY2hpbGQoMm4pIHtcbiAgICAgICAgJiBhe1xuICAgICAgICAgICY6YmVmb3Jle1xuICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAuMDYyNXJlbTtcbiAgICAgICAgICAgIGJvcmRlci1yaWdodDogLjA2MjVyZW0gc29saWQgIzMzMztcbiAgICAgICAgICAgIGJvcmRlci10b3A6IC4wNjI1cmVtIHNvbGlkICMzMzM7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIHdpZHRoOiAuNzVyZW07XG4gICAgICAgICAgICBoZWlnaHQ6IC43NXJlbTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC0xMzVkZWcpO1xuICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH1cblxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fbGluayB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KXtcbiAgICAgICAgJjphZnRlcntcbiAgICAgICAgICBib3JkZXItd2lkdGg6IC4wNjI1cmVtO1xuICAgICAgICAgIGJvcmRlci1yaWdodDogLjA2MjVyZW0gc29saWQgIzMzMztcbiAgICAgICAgICBib3JkZXItdG9wOiAuMDYyNXJlbSBzb2xpZCAjMzMzO1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIHdpZHRoOiAuNzVyZW07XG4gICAgICAgICAgaGVpZ2h0OiAuNzVyZW07XG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgIH1cblxuICB9XG4gIC8vIGNsYXNlIGdlbsOpcmljYSBhcnJlZ2xvIHJhZGlvIGJ1dHRvbnNcblxuICAud3MxMC1jLWZvcm1fX3JhZGlvOmNoZWNrZWQrLndzMTAtYy1mb3JtX19sYWJlbDo6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdjOTI7XG4gIH1cbiAgLndmbXNfX2xlZ2Fse1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgfVxuICAudmZtcy1saW5re1xuICAgIGNvbG9yOiNFNjAwMDA7XG4gIH1cbiAgLy9iYW5uZXIgdGVybWluYWxcbiAgLnZmbXNfX2Jhbm5lci10ZXJtaW5hbHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG5cbiAgLy8gY2xhc2UgZ2Vuw6lyaWNhXG5cbiAgLnZmLWJhbm5lcntcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL2Jhbm5lci9iZy1iYW5uZXItbXYuanBnXCIpO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL2Jhbm5lci9iZy1iYW5uZXItZGVza3RvcC5qcGdcIik7XG4gICAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbi15OiAtMTUwcHg7XG4gICAgfVxuICAgICZfX3RleHRjb250YWluZXIge1xuICAgICAgcGFkZGluZy10b3A6IDIwcHg7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAgICAgcGFkZGluZy10b3A6IDUwcHg7XG4gICAgICAgIH1cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgcGFkZGluZy10b3A6IDk4cHg7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA5OHB4O1xuICAgICAgICB9XG4gICAgfVxuICB9XG5cbiAgLnZmLXRlcm1pbmFsZXN7XG4gICAgJl9fY29udGFpbmVye1xuICAgICAgJi0tdGV4dHtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgfVxuICAgICAgLndzMTAtYy1idXR0b257XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgfVxuICAgICAgLndzMTAtdGV4dC0tdW5kZXJsaW5le1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgIH1cbiAgICB9XG4gICAgaW1ne1xuICAgICAgbWF4LXdpZHRoOiA3NHB4O1xuICAgIH1cbiAgfVxuXG4gIC53czEwLWMtY2Fyb3VzZWxfX2Fycm93LndzMTAtYy1jYXJvdXNlbF9fYXJyb3ctLXJpZ2h0e1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICByaWdodDogNXJlbTtcbiAgICB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgIHJpZ2h0OiA3cmVtO1xuICAgIH1cbiAgfVxuICAudmYtbW9iaWxle1xuICAgICZfX2FuaW1hdGlvbntcbiAgICAgIHBhZGRpbmc6IDMwcHggMDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICYtLWltZ3tcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgIH1cbiAgICB9XG4gICAgJl9fYXBwc3tcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBtaW4taGVpZ2h0OiAyOTBweDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBtYXgtaGVpZ2h0OiAyODBweDtcbiAgICAgICAgdG9wOiAyMHB4O1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICByaWdodDogLTEwMCU7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgYW5pbWF0aW9uOiBzbGlkZSAyMHMgbGluZWFyIGluZmluaXRlO1xuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWcvc2VjdGlvbi1tb2JpbGUvYXBwaWxpbWl0YWRhLnBuZ1wiKSAwIDEwMCU7XG4gICAgICB9XG5cbiAgICAgIEAtd2Via2l0LWtleWZyYW1lcyBzbGlkZSB7XG4gICAgICAgIDEwMCUge1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgfVxuICB9XG4gIC52Zi10ZXJtaW5hbCB7XG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICB9XG4gICAgJl9fY29udGVudCB7XG4gICAgICBvcmRlcjogMjtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIG9yZGVyOiAxO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgfVxuICAgIH1cbiAgICAmX19pbWdkZXNrdG9wIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgb3JkZXI6IDI7XG4gICAgICB9XG4gICAgfVxuICAgICZfX2ltZ21vYmlsZSB7XG4gICAgICBvcmRlcjogMTtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIC52Zi10dntcbiAgICAmX19mbGV4ZGlyZWN0aW9ue1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KXtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgIH1cblxuICAgIH1cbiAgfVxuICAudmYtZmliZXJ7XG4gICAgJl9fZmxleGRpcmVjdGlvbntcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCl7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICB9XG5cbiAgICB9XG4gIH1cbiAgLnZmLXN1cGVyV2lmaXtcbiAgICAmX19mbGV4ZGlyZWN0aW9ue1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KXtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xuICAgICAgfVxuICAgIH1cbiAgICAmX19pbWd7XG4gICAgICBtYXgtd2lkdGg6IDMwMHB4O1xuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgbWF4LXdpZHRoOiA0NTBweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLnZmLWZvcm17XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICBwYWRkaW5nOjAgMCAwIDA7XG4gICAgJl9fYm94e1xuICAgICAgd2lkdGg6IGluaXRpYWw7XG4gICAgICAmOmZpcnN0LWNoaWxke1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAudmYtdGltZWxpbmV7XG4gICAgLndzMTAtYy10aW1lbGluZS1zdGVwc19fdGl0bGV7XG4gICAgICBtYXgtd2lkdGg6IGluaXRpYWw7XG4gICAgfVxuICAgIC53czEwLWMtdGltZWxpbmUtc3RlcHNfX2l0ZW17XG4gICAgICBtaW4td2lkdGg6IDIwJTtcbiAgICB9XG4gIH1cbiAgLnZmLXRpY2tldHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCl7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogMXJlbTtcbiAgICAgIHBhZGRpbmctdG9wOiAxNnB4O1xuICAgIH1cblxuICAgICZfX2Zsb2F0aW5ne1xuICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgIHdpZHRoOiBpbmhlcml0O1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXgtd2lkdGg6IDQwMHB4O1xuICAgICAgcGFkZGluZy10b3A6IDhweDtcbiAgICB9XG5cbiAgICAmX19vcGFjaXR5MHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuXG4gIH1cbiAgLnZmLXN0aWNreSB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHotaW5kZXg6IDE7XG4gICAgYm90dG9tOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxufSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNDQSxBQUlJLGdCQUpZLENBR2QsZUFBZSxDQUNYLEVBQUUsQ0FBQztFQUNILFVBQVUsRUFBRSxJQUFJO0NBdUNqQjs7QUE1Q0wsQUFPTSxnQkFQVSxDQUdkLGVBQWUsQ0FDWCxFQUFFLEFBR0QsWUFBWSxDQUFDO0VBQ1osT0FBTyxFQUFFLElBQUk7Q0FJZDs7QUFIQyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBVDNDLEFBT00sZ0JBUFUsQ0FHZCxlQUFlLENBQ1gsRUFBRSxBQUdELFlBQVksQ0FBQztJQUdWLE9BQU8sRUFBRSxLQUFLO0dBRWpCOzs7QUFaUCxBQWNNLGdCQWRVLENBR2QsZUFBZSxDQUNYLEVBQUUsQUFVRCxXQUFXLENBQUM7RUFDWCxPQUFPLEVBQUUsSUFBSTtDQUlkOztBQUhDLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFoQjNDLEFBY00sZ0JBZFUsQ0FHZCxlQUFlLENBQ1gsRUFBRSxBQVVELFdBQVcsQ0FBQztJQUdULE9BQU8sRUFBRSxLQUFLO0dBRWpCOzs7QUFuQlAsQUF1QlUsZ0JBdkJNLENBR2QsZUFBZSxDQUNYLEVBQUUsQUFpQkQsVUFBVyxDQUFBLEVBQUUsRUFDVixDQUFDLEFBQ0EsT0FBTyxDQUFBO0VBQ04sWUFBWSxFQUFFLFFBQVE7RUFDdEIsWUFBWSxFQUFFLG1CQUFtQjtFQUNqQyxVQUFVLEVBQUUsbUJBQW1CO0VBQy9CLE9BQU8sRUFBRSxLQUFLO0VBQ2QsS0FBSyxFQUFFLE1BQU07RUFDYixNQUFNLEVBQUUsTUFBTTtFQUNkLFNBQVMsRUFBRSxlQUFlO0VBQzFCLE9BQU8sRUFBRSxFQUFFO0VBQ1gsT0FBTyxFQUFFLFlBQVk7RUFDckIsY0FBYyxFQUFFLFFBQVE7RUFDeEIsUUFBUSxFQUFFLFFBQVE7Q0FNbkI7O0FBSkMsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXBDL0MsQUF1QlUsZ0JBdkJNLENBR2QsZUFBZSxDQUNYLEVBQUUsQUFpQkQsVUFBVyxDQUFBLEVBQUUsRUFDVixDQUFDLEFBQ0EsT0FBTyxDQUFBO0lBY0osT0FBTyxFQUFFLElBQUk7R0FHaEI7OztBQXhDWCxBQThDSSxnQkE5Q1ksQ0E4Q1gscUJBQU0sQ0FBQztFQUNOLE9BQU8sRUFBRSxJQUFJO0VBQ2IsV0FBVyxFQUFFLE1BQU07Q0FpQnBCOztBQWhCQyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBakR6QyxBQWtEUSxnQkFsRFEsQ0E4Q1gscUJBQU0sQUFJRixNQUFNLENBQUE7SUFDTCxZQUFZLEVBQUUsUUFBUTtJQUN0QixZQUFZLEVBQUUsbUJBQW1CO0lBQ2pDLFVBQVUsRUFBRSxtQkFBbUI7SUFDL0IsT0FBTyxFQUFFLEtBQUs7SUFDZCxLQUFLLEVBQUUsTUFBTTtJQUNiLE1BQU0sRUFBRSxNQUFNO0lBQ2QsU0FBUyxFQUFFLGFBQWE7SUFDeEIsT0FBTyxFQUFFLEVBQUU7SUFDWCxPQUFPLEVBQUUsWUFBWTtJQUNyQixjQUFjLEVBQUUsUUFBUTtJQUN4QixRQUFRLEVBQUUsUUFBUTtHQUNuQjs7O0FBOURULEFBc0VFLGdCQXRFYyxDQXNFZCxtQkFBbUIsQUFBQSxRQUFRLEdBQUMsbUJBQW1CLEFBQUEsT0FBTyxDQUFDO0VBQ3JELGdCQUFnQixFQUFFLE9BQU87Q0FDMUI7O0FBeEVILEFBeUVFLGdCQXpFYyxDQXlFZCxZQUFZLENBQUE7RUFDVixTQUFTLEVBQUUsSUFBSTtDQUNoQjs7QUEzRUgsQUE0RUUsZ0JBNUVjLENBNEVkLFVBQVUsQ0FBQTtFQUNSLEtBQUssRUFBQyxPQUFPO0NBQ2Q7O0FBOUVILEFBZ0ZFLGdCQWhGYyxDQWdGZCxzQkFBc0IsQ0FBQTtFQUNwQixPQUFPLEVBQUUsSUFBSTtDQUNkOztBQWxGSCxBQXNGRSxnQkF0RmMsQ0FzRmQsVUFBVSxDQUFBO0VBQ1IsUUFBUSxFQUFFLFFBQVE7RUFDbEIsZ0JBQWdCLEVBQUUscUNBQXFDO0VBQ3ZELGVBQWUsRUFBRSxLQUFLO0VBQ3RCLGlCQUFpQixFQUFFLFNBQVM7Q0FnQjdCOztBQWZDLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUEzRnZDLEFBc0ZFLGdCQXRGYyxDQXNGZCxVQUFVLENBQUE7SUFNTixnQkFBZ0IsRUFBRSwwQ0FBMEM7SUFDNUQscUJBQXFCLEVBQUUsS0FBSztJQUM1QixxQkFBcUIsRUFBRSxNQUFNO0dBWWhDOzs7QUExR0gsQUFnR0ksZ0JBaEdZLENBZ0dYLHlCQUFlLENBQUM7RUFDZixXQUFXLEVBQUUsSUFBSTtDQVFsQjs7QUFQRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBbEczQyxBQWdHSSxnQkFoR1ksQ0FnR1gseUJBQWUsQ0FBQztJQUdYLFdBQVcsRUFBRSxJQUFJO0dBTXRCOzs7QUFKRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBckczQyxBQWdHSSxnQkFoR1ksQ0FnR1gseUJBQWUsQ0FBQztJQU1iLFdBQVcsRUFBRSxJQUFJO0lBQ2pCLGNBQWMsRUFBRSxJQUFJO0dBRXZCOzs7QUF6R0wsQUE4R00sZ0JBOUdVLENBOEdULCtCQUFNLENBQUE7RUFDTCxTQUFTLEVBQUUsSUFBSTtDQUNoQjs7QUFoSFAsQUFpSE0sZ0JBakhVLENBNkdYLHlCQUFXLENBSVYsY0FBYyxDQUFBO0VBQ1osS0FBSyxFQUFFLElBQUk7Q0FDWjs7QUFuSFAsQUFvSE0sZ0JBcEhVLENBNkdYLHlCQUFXLENBT1YscUJBQXFCLENBQUE7RUFDbkIsZUFBZSxFQUFFLFNBQVM7Q0FDM0I7O0FBdEhQLEFBd0hJLGdCQXhIWSxDQTRHZCxjQUFjLENBWVosR0FBRyxDQUFBO0VBQ0QsU0FBUyxFQUFFLElBQUk7Q0FDaEI7O0FBSUQsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQTlIdkMsQUE2SEUsZ0JBN0hjLENBNkhkLHVCQUF1QixBQUFBLDhCQUE4QixDQUFBO0lBRWpELEtBQUssRUFBRSxJQUFJO0dBS2Q7OztBQUhDLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFqSXZDLEFBNkhFLGdCQTdIYyxDQTZIZCx1QkFBdUIsQUFBQSw4QkFBOEIsQ0FBQTtJQUtqRCxLQUFLLEVBQUUsSUFBSTtHQUVkOzs7QUFwSUgsQUFzSUksZ0JBdElZLENBc0lYLHFCQUFXLENBQUE7RUFDVixPQUFPLEVBQUUsTUFBTTtFQUNmLFFBQVEsRUFBRSxRQUFRO0NBU25COztBQWpKTCxBQXlJTSxnQkF6SVUsQ0F5SVQsMEJBQUssQ0FBQTtFQUNKLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLEdBQUcsRUFBRSxDQUFDO0VBQ04sSUFBSSxFQUFFLENBQUM7RUFDUCxLQUFLLEVBQUUsQ0FBQztFQUNSLE1BQU0sRUFBRSxDQUFDO0VBQ1QsTUFBTSxFQUFFLElBQUk7Q0FDYjs7QUFoSlAsQUFrSkksZ0JBbEpZLENBa0pYLGdCQUFNLENBQUE7RUFDTCxRQUFRLEVBQUUsTUFBTTtFQUNoQixVQUFVLEVBQUUsS0FBSztFQUNqQixRQUFRLEVBQUUsUUFBUTtFQUNsQixPQUFPLEVBQUUsSUFBSTtFQUNiLFdBQVcsRUFBRSxNQUFNO0VBQ25CLFVBQVUsRUFBRSxVQUFVO0NBb0J2Qjs7QUE1S0wsQUF5Sk0sZ0JBekpVLENBa0pYLGdCQUFNLEFBT0osT0FBTyxDQUFDO0VBQ1AsT0FBTyxFQUFFLEVBQUU7RUFDWCxRQUFRLEVBQUUsUUFBUTtFQUNsQixVQUFVLEVBQUUsS0FBSztFQUNqQixHQUFHLEVBQUUsSUFBSTtFQUNULElBQUksRUFBRSxDQUFDO0VBQ1AsS0FBSyxFQUFFLEtBQUs7RUFDWixNQUFNLEVBQUUsQ0FBQztFQUNULFNBQVMsRUFBRSx5QkFBeUI7RUFDcEMsZUFBZSxFQUFFLEtBQUs7RUFDdEIsVUFBVSxFQUFFLDZDQUE2QyxDQUFDLENBQUMsQ0FBQyxJQUFJO0NBQ2pFOztBQUVELGtCQUFrQixDQUFsQixLQUFrQjtFQUNoQixJQUFJO0lBQ0YsU0FBUyxFQUFFLGdCQUFnQjs7OztBQXhLckMsQUE4S0UsZ0JBOUtjLENBOEtkLFlBQVksQ0FBQztFQUNYLGFBQWEsRUFBRSxHQUFHO0VBQ2xCLFFBQVEsRUFBRSxNQUFNO0VBQ2hCLGNBQWMsRUFBRSxNQUFNO0NBeUJ2Qjs7QUF4QkMsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWxMdkMsQUE4S0UsZ0JBOUtjLENBOEtkLFlBQVksQ0FBQztJQUtULGNBQWMsRUFBRSxHQUFHO0dBdUJ0Qjs7O0FBMU1ILEFBcUxJLGdCQXJMWSxDQXFMWCxxQkFBUyxDQUFDO0VBQ1QsS0FBSyxFQUFFLENBQUM7RUFDUixVQUFVLEVBQUUsTUFBTTtDQUtuQjs7QUFKQyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBeEx6QyxBQXFMSSxnQkFyTFksQ0FxTFgscUJBQVMsQ0FBQztJQUlQLEtBQUssRUFBRSxDQUFDO0lBQ1IsVUFBVSxFQUFFLElBQUk7R0FFbkI7OztBQTVMTCxBQTZMSSxnQkE3TFksQ0E2TFgsd0JBQVksQ0FBQztFQUNaLE9BQU8sRUFBRSxJQUFJO0NBS2Q7O0FBSkMsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQS9MekMsQUE2TEksZ0JBN0xZLENBNkxYLHdCQUFZLENBQUM7SUFHVixPQUFPLEVBQUUsS0FBSztJQUNkLEtBQUssRUFBRSxDQUFDO0dBRVg7OztBQW5NTCxBQW9NSSxnQkFwTVksQ0FvTVgsdUJBQVcsQ0FBQztFQUNYLEtBQUssRUFBRSxDQUFDO0NBSVQ7O0FBSEMsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXRNekMsQUFvTUksZ0JBcE1ZLENBb01YLHVCQUFXLENBQUM7SUFHVCxPQUFPLEVBQUUsSUFBSTtHQUVoQjs7O0FBek1MLEFBNE1JLGdCQTVNWSxDQTRNWCxxQkFBZSxDQUFBO0VBQ2QsY0FBYyxFQUFFLE1BQU07Q0FLdkI7O0FBSkMsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQTlNekMsQUE0TUksZ0JBNU1ZLENBNE1YLHFCQUFlLENBQUE7SUFHWixjQUFjLEVBQUUsR0FBRztHQUd0Qjs7O0FBbE5MLEFBcU5JLGdCQXJOWSxDQXFOWCx3QkFBZSxDQUFBO0VBQ2QsY0FBYyxFQUFFLE1BQU07Q0FLdkI7O0FBSkMsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXZOekMsQUFxTkksZ0JBck5ZLENBcU5YLHdCQUFlLENBQUE7SUFHWixjQUFjLEVBQUUsR0FBRztHQUd0Qjs7O0FBM05MLEFBOE5JLGdCQTlOWSxDQThOWCw0QkFBZSxDQUFBO0VBQ2QsY0FBYyxFQUFFLE1BQU07Q0FJdkI7O0FBSEMsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWhPekMsQUE4TkksZ0JBOU5ZLENBOE5YLDRCQUFlLENBQUE7SUFHWixjQUFjLEVBQUUsV0FBVztHQUU5Qjs7O0FBbk9MLEFBb09JLGdCQXBPWSxDQW9PWCxrQkFBSyxDQUFBO0VBQ0osU0FBUyxFQUFFLEtBQUs7Q0FJakI7O0FBSEMsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXRPekMsQUFvT0ksZ0JBcE9ZLENBb09YLGtCQUFLLENBQUE7SUFHRixTQUFTLEVBQUUsS0FBSztHQUVuQjs7O0FBek9MLEFBMk9FLGdCQTNPYyxDQTJPZCxRQUFRLENBQUE7RUFDTixVQUFVLEVBQUUsSUFBSTtFQUNoQixPQUFPLEVBQUMsT0FBTztDQU9oQjs7QUFwUEgsQUE4T0ksZ0JBOU9ZLENBOE9YLGFBQUssQ0FBQTtFQUNKLEtBQUssRUFBRSxPQUFPO0NBSWY7O0FBblBMLEFBZ1BNLGdCQWhQVSxDQThPWCxhQUFLLEFBRUgsWUFBWSxDQUFBO0VBQ1gsYUFBYSxFQUFFLElBQUk7Q0FDcEI7O0FBbFBQLEFBc1BJLGdCQXRQWSxDQXFQZCxZQUFZLENBQ1YsNkJBQTZCLENBQUE7RUFDM0IsU0FBUyxFQUFFLE9BQU87Q0FDbkI7O0FBeFBMLEFBeVBJLGdCQXpQWSxDQXFQZCxZQUFZLENBSVYsNEJBQTRCLENBQUE7RUFDMUIsU0FBUyxFQUFFLEdBQUc7Q0FDZjs7QUEzUEwsQUE2UEUsZ0JBN1BjLENBNlBkLFVBQVUsQ0FBQTtFQUNSLFFBQVEsRUFBRSxRQUFRO0NBb0JuQjs7QUFsQkMsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWhRdkMsQUE2UEUsZ0JBN1BjLENBNlBkLFVBQVUsQ0FBQTtJQUlOLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLEtBQUssRUFBRSxJQUFJO0lBQ1gsV0FBVyxFQUFFLElBQUk7R0FlcEI7OztBQWxSSCxBQXNRSSxnQkF0UVksQ0FzUVgsb0JBQVUsQ0FBQTtFQUNULFFBQVEsRUFBRSxNQUFNO0VBQ2hCLEtBQUssRUFBRSxPQUFPO0VBQ2QsS0FBSyxFQUFFLElBQUk7RUFDWCxTQUFTLEVBQUUsS0FBSztFQUNoQixXQUFXLEVBQUUsR0FBRztDQUNqQjs7QUE1UUwsQUE4UUksZ0JBOVFZLENBOFFYLG9CQUFVLENBQUE7RUFDVCxPQUFPLEVBQUUsQ0FBQztDQUNYOztBQWhSTCxBQW1SRSxnQkFuUmMsQ0FtUmQsVUFBVSxDQUFDO0VBQ1QsUUFBUSxFQUFFLEtBQUs7RUFDZixPQUFPLEVBQUUsQ0FBQztFQUNWLE1BQU0sRUFBRSxDQUFDO0VBQ1QsS0FBSyxFQUFFLElBQUk7Q0FJWjs7QUFIQyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBeFJ2QyxBQW1SRSxnQkFuUmMsQ0FtUmQsVUFBVSxDQUFDO0lBTVAsT0FBTyxFQUFFLElBQUk7R0FFaEIifQ== */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
