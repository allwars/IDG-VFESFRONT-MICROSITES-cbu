/**
 * Vodafone Reboot Framework: Version 2.4.1. Generation Date: 2020-08-18T08:45:45.683Z
 */

.vfes-ms-content .vfms-content-container {
  margin-top: -0.625rem;
}

.vfes-ms-content .vfms-icon-rate {
  min-width: 2.5rem;
}

.vfes-ms-content .vfms-rate {
  min-height: 18.5625rem;
}

.vfes-ms-content .vfms-last-rate {
  padding-bottom: 2.875rem;
}

.vfes-ms-content .vfms-why {
  background-image:  url('../img/bg-why-vodafone.jpg?v=55300ae609534d3ce14d5e94f4058208');
  width: 100%;
  background-repeat: no-repeat;
  background-size: cover;
}

.vfes-ms-content .vfms-banner-text {
  order: 2;
}

.vfes-ms-content .vfms-banner-img {
  order: 1;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-banner-text {
    order: 1;
  }
  .vfes-ms-content .vfms-banner-img {
    order: 2;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiO1xuXG4udmZlcy1tcy1jb250ZW50IHtcblxuICAudmZtcy1yYXRlIHtcbiAgICBtaW4taGVpZ2h0OiAyOTdweDtcbiAgfVxuXG4gIC52Zm1zLWxhc3QtcmF0ZSB7XG4gICAgcGFkZGluZy1ib3R0b206IDQ2cHg7XG4gIH1cblxuICAudmZtcy13aHkge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9iZy13aHktdm9kYWZvbmUuanBnXCIpO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgfVxuXG4gIC52Zm1zLWJhbm5lciB7XG4gICAgJi10ZXh0IHtcbiAgICAgIG9yZGVyOiAyO1xuICAgIH1cblxuICAgICYtaW1nIHtcbiAgICAgIG9yZGVyOiAxO1xuICAgIH1cbiAgfVxuXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgLnZmbXMtYmFubmVyIHtcbiAgICAgICYtdGV4dCB7XG4gICAgICAgIG9yZGVyOiAxO1xuICAgICAgfVxuXG4gICAgICAmLWltZyB7XG4gICAgICAgIG9yZGVyOiAyO1xuICAgICAgfVxuICAgIH1cblxuICB9XG5cbn0iLCIvLyBDU1MgZGVsIG1pY3Jvc2l0ZVxuLnZmZXMtbXMtY29udGVudCB7XG5cbiAgLnZmbXMtY29udGVudC1jb250YWluZXJ7XG4gICAgbWFyZ2luLXRvcDogLTEwcHg7XG4gIH1cblxuICAudmZtcy1pY29uLXJhdGUge1xuICAgIG1pbi13aWR0aDogNDBweDtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0NBLEFBRUUsZ0JBRmMsQ0FFZCx1QkFBdUIsQ0FBQTtFQUNyQixVQUFVLEVBQUUsS0FBSztDQUNsQjs7QUFKSCxBQU1FLGdCQU5jLENBTWQsZUFBZSxDQUFDO0VBQ2QsU0FBUyxFQUFFLElBQUk7Q0FDaEI7O0FESkgsQUFFRSxnQkFGYyxDQUVkLFVBQVUsQ0FBQztFQUNULFVBQVUsRUFBRSxLQUFLO0NBQ2xCOztBQUpILEFBTUUsZ0JBTmMsQ0FNZCxlQUFlLENBQUM7RUFDZCxjQUFjLEVBQUUsSUFBSTtDQUNyQjs7QUFSSCxBQVVFLGdCQVZjLENBVWQsU0FBUyxDQUFDO0VBQ1IsZ0JBQWdCLEVBQUUsaUNBQWlDO0VBQ25ELEtBQUssRUFBRSxJQUFJO0VBQ1gsaUJBQWlCLEVBQUUsU0FBUztFQUM1QixlQUFlLEVBQUUsS0FBSztDQUN2Qjs7QUFmSCxBQWtCSSxnQkFsQlksQ0FrQlgsaUJBQUssQ0FBQztFQUNMLEtBQUssRUFBRSxDQUFDO0NBQ1Q7O0FBcEJMLEFBc0JJLGdCQXRCWSxDQXNCWCxnQkFBSSxDQUFDO0VBQ0osS0FBSyxFQUFFLENBQUM7Q0FDVDs7QUFHSCxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBM0JyQyxBQTZCTSxnQkE3QlUsQ0E2QlQsaUJBQUssQ0FBQztJQUNMLEtBQUssRUFBRSxDQUFDO0dBQ1Q7RUEvQlAsQUFpQ00sZ0JBakNVLENBaUNULGdCQUFJLENBQUM7SUFDSixLQUFLLEVBQUUsQ0FBQztHQUNUIn0= */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiO1xuXG4udmZlcy1tcy1jb250ZW50IHtcblxuICAudmZtcy1yYXRlIHtcbiAgICBtaW4taGVpZ2h0OiAyOTdweDtcbiAgfVxuXG4gIC52Zm1zLWxhc3QtcmF0ZSB7XG4gICAgcGFkZGluZy1ib3R0b206IDQ2cHg7XG4gIH1cblxuICAudmZtcy13aHkge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9iZy13aHktdm9kYWZvbmUuanBnXCIpO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgfVxuXG4gIC52Zm1zLWJhbm5lciB7XG4gICAgJi10ZXh0IHtcbiAgICAgIG9yZGVyOiAyO1xuICAgIH1cblxuICAgICYtaW1nIHtcbiAgICAgIG9yZGVyOiAxO1xuICAgIH1cbiAgfVxuXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgLnZmbXMtYmFubmVyIHtcbiAgICAgICYtdGV4dCB7XG4gICAgICAgIG9yZGVyOiAxO1xuICAgICAgfVxuXG4gICAgICAmLWltZyB7XG4gICAgICAgIG9yZGVyOiAyO1xuICAgICAgfVxuICAgIH1cblxuICB9XG5cbn0iLCIvLyBDU1MgZGVsIG1pY3Jvc2l0ZVxuLnZmZXMtbXMtY29udGVudCB7XG5cbiAgLnZmbXMtY29udGVudC1jb250YWluZXJ7XG4gICAgbWFyZ2luLXRvcDogLTEwcHg7XG4gIH1cblxuICAudmZtcy1pY29uLXJhdGUge1xuICAgIG1pbi13aWR0aDogNDBweDtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0NBLEFBRUUsZ0JBRmMsQ0FFZCx1QkFBdUIsQ0FBQTtFQUNyQixVQUFVLEVBQUUsS0FBSztDQUNsQjs7QUFKSCxBQU1FLGdCQU5jLENBTWQsZUFBZSxDQUFDO0VBQ2QsU0FBUyxFQUFFLElBQUk7Q0FDaEI7O0FESkgsQUFFRSxnQkFGYyxDQUVkLFVBQVUsQ0FBQztFQUNULFVBQVUsRUFBRSxLQUFLO0NBQ2xCOztBQUpILEFBTUUsZ0JBTmMsQ0FNZCxlQUFlLENBQUM7RUFDZCxjQUFjLEVBQUUsSUFBSTtDQUNyQjs7QUFSSCxBQVVFLGdCQVZjLENBVWQsU0FBUyxDQUFDO0VBQ1IsZ0JBQWdCLEVBQUUsaUNBQWlDO0VBQ25ELEtBQUssRUFBRSxJQUFJO0VBQ1gsaUJBQWlCLEVBQUUsU0FBUztFQUM1QixlQUFlLEVBQUUsS0FBSztDQUN2Qjs7QUFmSCxBQWtCSSxnQkFsQlksQ0FrQlgsaUJBQUssQ0FBQztFQUNMLEtBQUssRUFBRSxDQUFDO0NBQ1Q7O0FBcEJMLEFBc0JJLGdCQXRCWSxDQXNCWCxnQkFBSSxDQUFDO0VBQ0osS0FBSyxFQUFFLENBQUM7Q0FDVDs7QUFHSCxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBM0JyQyxBQTZCTSxnQkE3QlUsQ0E2QlQsaUJBQUssQ0FBQztJQUNMLEtBQUssRUFBRSxDQUFDO0dBQ1Q7RUEvQlAsQUFpQ00sZ0JBakNVLENBaUNULGdCQUFJLENBQUM7SUFDSixLQUFLLEVBQUUsQ0FBQztHQUNUIn0= */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
