/**
 * Vodafone Reboot Framework: Version 15.7.0. Generation Date: 2020-03-12T11:57:29.049Z
 */

.vfes-ms-content .vfms-banner-container {
  background-image:  url('../img/fondo-cabecera.jpg?v=e2c624301db2a7e0fd0ce87ff72b36a1');
}

.vfes-ms-content .vfms-content-container {
  margin-top: -0.625rem;
}

.vfes-ms-content .vfms-icon-rate {
  min-width: 2.5rem;
}

.vfes-ms-content .vfms-rate {
  min-height: 18.5625rem;
}

.vfes-ms-content .vfms-last-rate {
  padding-bottom: 2.875rem;
}

.vfes-ms-content .vfms-why {
  background-image:  url('../img/bg-why-vodafone.jpg?v=55300ae609534d3ce14d5e94f4058208');
  width: 100%;
  background-repeat: no-repeat;
  background-size: cover;
}

.vfes-ms-content .vfms-banner-text {
  -webkit-box-ordinal-group: 3;
          order: 2;
}

.vfes-ms-content .vfms-banner-img {
  -webkit-box-ordinal-group: 2;
          order: 1;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-banner-text {
    -webkit-box-ordinal-group: 2;
            order: 1;
  }
  .vfes-ms-content .vfms-banner-img {
    -webkit-box-ordinal-group: 3;
            order: 2;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiO1xuXG4udmZlcy1tcy1jb250ZW50IHtcblxuICAudmZtcy1yYXRlIHtcbiAgICBtaW4taGVpZ2h0OiAyOTdweDtcbiAgfVxuXG4gIC52Zm1zLWxhc3QtcmF0ZSB7XG4gICAgcGFkZGluZy1ib3R0b206IDQ2cHg7XG4gIH1cblxuICAudmZtcy13aHkge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9iZy13aHktdm9kYWZvbmUuanBnXCIpO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgfVxuXG4gIC52Zm1zLWJhbm5lciB7XG4gICAgJi10ZXh0IHtcbiAgICAgIG9yZGVyOiAyO1xuICAgIH1cblxuICAgICYtaW1nIHtcbiAgICAgIG9yZGVyOiAxO1xuICAgIH1cbiAgfVxuXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgLnZmbXMtYmFubmVyIHtcbiAgICAgICYtdGV4dCB7XG4gICAgICAgIG9yZGVyOiAxO1xuICAgICAgfVxuXG4gICAgICAmLWltZyB7XG4gICAgICAgIG9yZGVyOiAyO1xuICAgICAgfVxuICAgIH1cblxuICB9XG5cbn0iLCIvLyBDU1MgZGVsIG1pY3Jvc2l0ZVxuLnZmZXMtbXMtY29udGVudCB7XG5cbiAgLnZmbXMtYmFubmVyLWNvbnRhaW5lcntcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvZm9uZG8tY2FiZWNlcmEuanBnXCIpO1xuICB9XG4gIC52Zm1zLWNvbnRlbnQtY29udGFpbmVye1xuICAgIG1hcmdpbi10b3A6IC0xMHB4O1xuICB9XG5cbiAgLnZmbXMtaWNvbi1yYXRlIHtcbiAgICBtaW4td2lkdGg6IDQwcHg7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNDQSxBQUVFLGdCQUZjLENBRWQsc0JBQXNCLENBQUE7RUFDcEIsZ0JBQWdCLEVBQUUsZ0NBQWdDO0NBQ25EOztBQUpILEFBS0UsZ0JBTGMsQ0FLZCx1QkFBdUIsQ0FBQTtFQUNyQixVQUFVLEVBQUUsS0FBSztDQUNsQjs7QUFQSCxBQVNFLGdCQVRjLENBU2QsZUFBZSxDQUFDO0VBQ2QsU0FBUyxFQUFFLElBQUk7Q0FDaEI7O0FEUEgsQUFFRSxnQkFGYyxDQUVkLFVBQVUsQ0FBQztFQUNULFVBQVUsRUFBRSxLQUFLO0NBQ2xCOztBQUpILEFBTUUsZ0JBTmMsQ0FNZCxlQUFlLENBQUM7RUFDZCxjQUFjLEVBQUUsSUFBSTtDQUNyQjs7QUFSSCxBQVVFLGdCQVZjLENBVWQsU0FBUyxDQUFDO0VBQ1IsZ0JBQWdCLEVBQUUsaUNBQWlDO0VBQ25ELEtBQUssRUFBRSxJQUFJO0VBQ1gsaUJBQWlCLEVBQUUsU0FBUztFQUM1QixlQUFlLEVBQUUsS0FBSztDQUN2Qjs7QUFmSCxBQWtCSSxnQkFsQlksQ0FrQlgsaUJBQUssQ0FBQztFQUNMLEtBQUssRUFBRSxDQUFDO0NBQ1Q7O0FBcEJMLEFBc0JJLGdCQXRCWSxDQXNCWCxnQkFBSSxDQUFDO0VBQ0osS0FBSyxFQUFFLENBQUM7Q0FDVDs7QUFHSCxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBM0JyQyxBQTZCTSxnQkE3QlUsQ0E2QlQsaUJBQUssQ0FBQztJQUNMLEtBQUssRUFBRSxDQUFDO0dBQ1Q7RUEvQlAsQUFpQ00sZ0JBakNVLENBaUNULGdCQUFJLENBQUM7SUFDSixLQUFLLEVBQUUsQ0FBQztHQUNUIn0= */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiO1xuXG4udmZlcy1tcy1jb250ZW50IHtcblxuICAudmZtcy1yYXRlIHtcbiAgICBtaW4taGVpZ2h0OiAyOTdweDtcbiAgfVxuXG4gIC52Zm1zLWxhc3QtcmF0ZSB7XG4gICAgcGFkZGluZy1ib3R0b206IDQ2cHg7XG4gIH1cblxuICAudmZtcy13aHkge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9iZy13aHktdm9kYWZvbmUuanBnXCIpO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgfVxuXG4gIC52Zm1zLWJhbm5lciB7XG4gICAgJi10ZXh0IHtcbiAgICAgIG9yZGVyOiAyO1xuICAgIH1cblxuICAgICYtaW1nIHtcbiAgICAgIG9yZGVyOiAxO1xuICAgIH1cbiAgfVxuXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgLnZmbXMtYmFubmVyIHtcbiAgICAgICYtdGV4dCB7XG4gICAgICAgIG9yZGVyOiAxO1xuICAgICAgfVxuXG4gICAgICAmLWltZyB7XG4gICAgICAgIG9yZGVyOiAyO1xuICAgICAgfVxuICAgIH1cblxuICB9XG5cbn0iLCIvLyBDU1MgZGVsIG1pY3Jvc2l0ZVxuLnZmZXMtbXMtY29udGVudCB7XG5cbiAgLnZmbXMtYmFubmVyLWNvbnRhaW5lcntcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvZm9uZG8tY2FiZWNlcmEuanBnXCIpO1xuICB9XG4gIC52Zm1zLWNvbnRlbnQtY29udGFpbmVye1xuICAgIG1hcmdpbi10b3A6IC0xMHB4O1xuICB9XG5cbiAgLnZmbXMtaWNvbi1yYXRlIHtcbiAgICBtaW4td2lkdGg6IDQwcHg7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNDQSxBQUVFLGdCQUZjLENBRWQsc0JBQXNCLENBQUE7RUFDcEIsZ0JBQWdCLEVBQUUsZ0NBQWdDO0NBQ25EOztBQUpILEFBS0UsZ0JBTGMsQ0FLZCx1QkFBdUIsQ0FBQTtFQUNyQixVQUFVLEVBQUUsS0FBSztDQUNsQjs7QUFQSCxBQVNFLGdCQVRjLENBU2QsZUFBZSxDQUFDO0VBQ2QsU0FBUyxFQUFFLElBQUk7Q0FDaEI7O0FEUEgsQUFFRSxnQkFGYyxDQUVkLFVBQVUsQ0FBQztFQUNULFVBQVUsRUFBRSxLQUFLO0NBQ2xCOztBQUpILEFBTUUsZ0JBTmMsQ0FNZCxlQUFlLENBQUM7RUFDZCxjQUFjLEVBQUUsSUFBSTtDQUNyQjs7QUFSSCxBQVVFLGdCQVZjLENBVWQsU0FBUyxDQUFDO0VBQ1IsZ0JBQWdCLEVBQUUsaUNBQWlDO0VBQ25ELEtBQUssRUFBRSxJQUFJO0VBQ1gsaUJBQWlCLEVBQUUsU0FBUztFQUM1QixlQUFlLEVBQUUsS0FBSztDQUN2Qjs7QUFmSCxBQWtCSSxnQkFsQlksQ0FrQlgsaUJBQUssQ0FBQztFQUNMLEtBQUssRUFBRSxDQUFDO0NBQ1Q7O0FBcEJMLEFBc0JJLGdCQXRCWSxDQXNCWCxnQkFBSSxDQUFDO0VBQ0osS0FBSyxFQUFFLENBQUM7Q0FDVDs7QUFHSCxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBM0JyQyxBQTZCTSxnQkE3QlUsQ0E2QlQsaUJBQUssQ0FBQztJQUNMLEtBQUssRUFBRSxDQUFDO0dBQ1Q7RUEvQlAsQUFpQ00sZ0JBakNVLENBaUNULGdCQUFJLENBQUM7SUFDSixLQUFLLEVBQUUsQ0FBQztHQUNUIn0= */

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9taWNyby5zY3NzIiwic3R5bGVzLmNzcyIsInN0eWxlcy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBR0ksc0ZBQWtEO0FDRnREOztBRERBO0VBTUkscUJBQWlCO0FDRHJCOztBRExBO0VBVUksaUJBQWU7QUNEbkI7O0FDTEE7RUFHSSxzQkFBaUI7QURNckI7O0FDVEE7RUFPSSx3QkFBb0I7QURNeEI7O0FDYkE7RUFXSSx1RkFBbUQ7RUFDbkQsV0FBVztFQUNYLDRCQUE0QjtFQUM1QixzQkFBc0I7QURNMUI7O0FDcEJBO0VBbUJNLDRCQUFRO1VBQVIsUUFBUTtBREtkOztBQ3hCQTtFQXVCTSw0QkFBUTtVQUFSLFFBQVE7QURLZDs7QUNERTtFQTNCRjtJQThCUSw0QkFBUTtZQUFSLFFBQVE7RURHZDtFQ2pDRjtJQWtDUSw0QkFBUTtZQUFSLFFBQVE7RURFZDtBQUNGOztBQUVBLHkxRUFBeTFFO0FBQ3oxRSwwMUVBQTAxRSIsImZpbGUiOiJzdHlsZXMuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ1NTIGRlbCBtaWNyb3NpdGVcbi52ZmVzLW1zLWNvbnRlbnQge1xuXG4gIC52Zm1zLWJhbm5lci1jb250YWluZXJ7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL2ZvbmRvLWNhYmVjZXJhLmpwZ1wiKTtcbiAgfVxuICAudmZtcy1jb250ZW50LWNvbnRhaW5lcntcbiAgICBtYXJnaW4tdG9wOiAtMTBweDtcbiAgfVxuXG4gIC52Zm1zLWljb24tcmF0ZSB7XG4gICAgbWluLXdpZHRoOiA0MHB4O1xuICB9XG59XG4iLCIudmZlcy1tcy1jb250ZW50IC52Zm1zLWJhbm5lci1jb250YWluZXIge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvZm9uZG8tY2FiZWNlcmEuanBnXCIpO1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zm1zLWNvbnRlbnQtY29udGFpbmVyIHtcbiAgbWFyZ2luLXRvcDogLTEwcHg7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtaWNvbi1yYXRlIHtcbiAgbWluLXdpZHRoOiA0MHB4O1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zm1zLXJhdGUge1xuICBtaW4taGVpZ2h0OiAyOTdweDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmZtcy1sYXN0LXJhdGUge1xuICBwYWRkaW5nLWJvdHRvbTogNDZweDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmZtcy13aHkge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvYmctd2h5LXZvZGFmb25lLmpwZ1wiKTtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtYmFubmVyLXRleHQge1xuICBvcmRlcjogMjtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmZtcy1iYW5uZXItaW1nIHtcbiAgb3JkZXI6IDE7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtYmFubmVyLXRleHQge1xuICAgIG9yZGVyOiAxO1xuICB9XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtYmFubmVyLWltZyB7XG4gICAgb3JkZXI6IDI7XG4gIH1cbn1cblxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWMzUjViR1Z6TG1OemN5SXNJbk52ZFhKalpYTWlPbHNpYzNSNWJHVnpMbk5qYzNNaUxDSmZiV2xqY204dWMyTnpjeUpkTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJdkx5QkJjWFZwSUhObElIQjFaV1JsYmlCcGJYQnZjblJoY2lCc2FXSnlaWExEcldGeklHVjRkR1Z5Ym1GelhHNHZMeUJsYWpvZ1FHbHRjRzl5ZENBbkwzUnZiMnh6TDJaMWJtTjBhVzl1Y3ljN1hHNWNia0JwYlhCdmNuUWdYQ0p0YVdOeWIxd2lPMXh1WEc0dWRtWmxjeTF0Y3kxamIyNTBaVzUwSUh0Y2JseHVJQ0F1ZG1adGN5MXlZWFJsSUh0Y2JpQWdJQ0J0YVc0dGFHVnBaMmgwT2lBeU9UZHdlRHRjYmlBZ2ZWeHVYRzRnSUM1MlptMXpMV3hoYzNRdGNtRjBaU0I3WEc0Z0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklEUTJjSGc3WEc0Z0lIMWNibHh1SUNBdWRtWnRjeTEzYUhrZ2UxeHVJQ0FnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDaGNJaTR1TDJsdFp5OWlaeTEzYUhrdGRtOWtZV1p2Ym1VdWFuQm5YQ0lwTzF4dUlDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0Y21Wd1pXRjBPaUJ1YnkxeVpYQmxZWFE3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzF6YVhwbE9pQmpiM1psY2p0Y2JpQWdmVnh1WEc0Z0lDNTJabTF6TFdKaGJtNWxjaUI3WEc0Z0lDQWdKaTEwWlhoMElIdGNiaUFnSUNBZ0lHOXlaR1Z5T2lBeU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUNZdGFXMW5JSHRjYmlBZ0lDQWdJRzl5WkdWeU9pQXhPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURrM01IQjRLU0I3WEc0Z0lDQWdMblptYlhNdFltRnVibVZ5SUh0Y2JpQWdJQ0FnSUNZdGRHVjRkQ0I3WEc0Z0lDQWdJQ0FnSUc5eVpHVnlPaUF4TzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBbUxXbHRaeUI3WEc0Z0lDQWdJQ0FnSUc5eVpHVnlPaUF5TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQjlYRzVjYm4waUxDSXZMeUJEVTFNZ1pHVnNJRzFwWTNKdmMybDBaVnh1TG5abVpYTXRiWE10WTI5dWRHVnVkQ0I3WEc1Y2JpQWdMblptYlhNdFltRnVibVZ5TFdOdmJuUmhhVzVsY250Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b1hDSXVMaTlwYldjdlptOXVaRzh0WTJGaVpXTmxjbUV1YW5CblhDSXBPMXh1SUNCOVhHNGdJQzUyWm0xekxXTnZiblJsYm5RdFkyOXVkR0ZwYm1WeWUxeHVJQ0FnSUcxaGNtZHBiaTEwYjNBNklDMHhNSEI0TzF4dUlDQjlYRzVjYmlBZ0xuWm1iWE10YVdOdmJpMXlZWFJsSUh0Y2JpQWdJQ0J0YVc0dGQybGtkR2c2SURRd2NIZzdYRzRnSUgxY2JuMWNiaUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVU5EUVN4QlFVVkZMR2RDUVVaakxFTkJSV1FzYzBKQlFYTkNMRU5CUVVFN1JVRkRjRUlzWjBKQlFXZENMRVZCUVVVc1owTkJRV2RETzBOQlEyNUVPenRCUVVwSUxFRkJTMFVzWjBKQlRHTXNRMEZMWkN4MVFrRkJkVUlzUTBGQlFUdEZRVU55UWl4VlFVRlZMRVZCUVVVc1MwRkJTenREUVVOc1FqczdRVUZRU0N4QlFWTkZMR2RDUVZSakxFTkJVMlFzWlVGQlpTeERRVUZETzBWQlEyUXNVMEZCVXl4RlFVRkZMRWxCUVVrN1EwRkRhRUk3TzBGRVVFZ3NRVUZGUlN4blFrRkdZeXhEUVVWa0xGVkJRVlVzUTBGQlF6dEZRVU5VTEZWQlFWVXNSVUZCUlN4TFFVRkxPME5CUTJ4Q096dEJRVXBJTEVGQlRVVXNaMEpCVG1Nc1EwRk5aQ3hsUVVGbExFTkJRVU03UlVGRFpDeGpRVUZqTEVWQlFVVXNTVUZCU1R0RFFVTnlRanM3UVVGU1NDeEJRVlZGTEdkQ1FWWmpMRU5CVldRc1UwRkJVeXhEUVVGRE8wVkJRMUlzWjBKQlFXZENMRVZCUVVVc2FVTkJRV2xETzBWQlEyNUVMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzYVVKQlFXbENMRVZCUVVVc1UwRkJVenRGUVVNMVFpeGxRVUZsTEVWQlFVVXNTMEZCU3p0RFFVTjJRanM3UVVGbVNDeEJRV3RDU1N4blFrRnNRbGtzUTBGclFsZ3NhVUpCUVVzc1EwRkJRenRGUVVOTUxFdEJRVXNzUlVGQlJTeERRVUZETzBOQlExUTdPMEZCY0VKTUxFRkJjMEpKTEdkQ1FYUkNXU3hEUVhOQ1dDeG5Ra0ZCU1N4RFFVRkRPMFZCUTBvc1MwRkJTeXhGUVVGRkxFTkJRVU03UTBGRFZEczdRVUZIU0N4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQk0wSnlReXhCUVRaQ1RTeG5Ra0UzUWxVc1EwRTJRbFFzYVVKQlFVc3NRMEZCUXp0SlFVTk1MRXRCUVVzc1JVRkJSU3hEUVVGRE8wZEJRMVE3UlVFdlFsQXNRVUZwUTAwc1owSkJha05WTEVOQmFVTlVMR2RDUVVGSkxFTkJRVU03U1VGRFNpeExRVUZMTEVWQlFVVXNRMEZCUXp0SFFVTlVJbjA9ICovXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaWMzUjViR1Z6TG1OemN5SXNJbk52ZFhKalpYTWlPbHNpYzNSNWJHVnpMbk5qYzNNaUxDSmZiV2xqY204dWMyTnpjeUpkTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJdkx5QkJjWFZwSUhObElIQjFaV1JsYmlCcGJYQnZjblJoY2lCc2FXSnlaWExEcldGeklHVjRkR1Z5Ym1GelhHNHZMeUJsYWpvZ1FHbHRjRzl5ZENBbkwzUnZiMnh6TDJaMWJtTjBhVzl1Y3ljN1hHNWNia0JwYlhCdmNuUWdYQ0p0YVdOeWIxd2lPMXh1WEc0dWRtWmxjeTF0Y3kxamIyNTBaVzUwSUh0Y2JseHVJQ0F1ZG1adGN5MXlZWFJsSUh0Y2JpQWdJQ0J0YVc0dGFHVnBaMmgwT2lBeU9UZHdlRHRjYmlBZ2ZWeHVYRzRnSUM1MlptMXpMV3hoYzNRdGNtRjBaU0I3WEc0Z0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklEUTJjSGc3WEc0Z0lIMWNibHh1SUNBdWRtWnRjeTEzYUhrZ2UxeHVJQ0FnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDaGNJaTR1TDJsdFp5OWlaeTEzYUhrdGRtOWtZV1p2Ym1VdWFuQm5YQ0lwTzF4dUlDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0Y21Wd1pXRjBPaUJ1YnkxeVpYQmxZWFE3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzF6YVhwbE9pQmpiM1psY2p0Y2JpQWdmVnh1WEc0Z0lDNTJabTF6TFdKaGJtNWxjaUI3WEc0Z0lDQWdKaTEwWlhoMElIdGNiaUFnSUNBZ0lHOXlaR1Z5T2lBeU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUNZdGFXMW5JSHRjYmlBZ0lDQWdJRzl5WkdWeU9pQXhPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURrM01IQjRLU0I3WEc0Z0lDQWdMblptYlhNdFltRnVibVZ5SUh0Y2JpQWdJQ0FnSUNZdGRHVjRkQ0I3WEc0Z0lDQWdJQ0FnSUc5eVpHVnlPaUF4TzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBbUxXbHRaeUI3WEc0Z0lDQWdJQ0FnSUc5eVpHVnlPaUF5TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQjlYRzVjYm4waUxDSXZMeUJEVTFNZ1pHVnNJRzFwWTNKdmMybDBaVnh1TG5abVpYTXRiWE10WTI5dWRHVnVkQ0I3WEc1Y2JpQWdMblptYlhNdFltRnVibVZ5TFdOdmJuUmhhVzVsY250Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b1hDSXVMaTlwYldjdlptOXVaRzh0WTJGaVpXTmxjbUV1YW5CblhDSXBPMXh1SUNCOVhHNGdJQzUyWm0xekxXTnZiblJsYm5RdFkyOXVkR0ZwYm1WeWUxeHVJQ0FnSUcxaGNtZHBiaTEwYjNBNklDMHhNSEI0TzF4dUlDQjlYRzVjYmlBZ0xuWm1iWE10YVdOdmJpMXlZWFJsSUh0Y2JpQWdJQ0J0YVc0dGQybGtkR2c2SURRd2NIZzdYRzRnSUgxY2JuMWNiaUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVU5EUVN4QlFVVkZMR2RDUVVaakxFTkJSV1FzYzBKQlFYTkNMRU5CUVVFN1JVRkRjRUlzWjBKQlFXZENMRVZCUVVVc1owTkJRV2RETzBOQlEyNUVPenRCUVVwSUxFRkJTMFVzWjBKQlRHTXNRMEZMWkN4MVFrRkJkVUlzUTBGQlFUdEZRVU55UWl4VlFVRlZMRVZCUVVVc1MwRkJTenREUVVOc1FqczdRVUZRU0N4QlFWTkZMR2RDUVZSakxFTkJVMlFzWlVGQlpTeERRVUZETzBWQlEyUXNVMEZCVXl4RlFVRkZMRWxCUVVrN1EwRkRhRUk3TzBGRVVFZ3NRVUZGUlN4blFrRkdZeXhEUVVWa0xGVkJRVlVzUTBGQlF6dEZRVU5VTEZWQlFWVXNSVUZCUlN4TFFVRkxPME5CUTJ4Q096dEJRVXBJTEVGQlRVVXNaMEpCVG1Nc1EwRk5aQ3hsUVVGbExFTkJRVU03UlVGRFpDeGpRVUZqTEVWQlFVVXNTVUZCU1R0RFFVTnlRanM3UVVGU1NDeEJRVlZGTEdkQ1FWWmpMRU5CVldRc1UwRkJVeXhEUVVGRE8wVkJRMUlzWjBKQlFXZENMRVZCUVVVc2FVTkJRV2xETzBWQlEyNUVMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzYVVKQlFXbENMRVZCUVVVc1UwRkJVenRGUVVNMVFpeGxRVUZsTEVWQlFVVXNTMEZCU3p0RFFVTjJRanM3UVVGbVNDeEJRV3RDU1N4blFrRnNRbGtzUTBGclFsZ3NhVUpCUVVzc1EwRkJRenRGUVVOTUxFdEJRVXNzUlVGQlJTeERRVUZETzBOQlExUTdPMEZCY0VKTUxFRkJjMEpKTEdkQ1FYUkNXU3hEUVhOQ1dDeG5Ra0ZCU1N4RFFVRkRPMFZCUTBvc1MwRkJTeXhGUVVGRkxFTkJRVU03UTBGRFZEczdRVUZIU0N4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQk0wSnlReXhCUVRaQ1RTeG5Ra0UzUWxVc1EwRTJRbFFzYVVKQlFVc3NRMEZCUXp0SlFVTk1MRXRCUVVzc1JVRkJSU3hEUVVGRE8wZEJRMVE3UlVFdlFsQXNRVUZwUTAwc1owSkJha05WTEVOQmFVTlVMR2RDUVVGSkxFTkJRVU03U1VGRFNpeExRVUZMTEVWQlFVVXNRMEZCUXp0SFFVTlVJbjA9ICovXG4iLCIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiO1xuXG4udmZlcy1tcy1jb250ZW50IHtcblxuICAudmZtcy1yYXRlIHtcbiAgICBtaW4taGVpZ2h0OiAyOTdweDtcbiAgfVxuXG4gIC52Zm1zLWxhc3QtcmF0ZSB7XG4gICAgcGFkZGluZy1ib3R0b206IDQ2cHg7XG4gIH1cblxuICAudmZtcy13aHkge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9iZy13aHktdm9kYWZvbmUuanBnXCIpO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgfVxuXG4gIC52Zm1zLWJhbm5lciB7XG4gICAgJi10ZXh0IHtcbiAgICAgIG9yZGVyOiAyO1xuICAgIH1cblxuICAgICYtaW1nIHtcbiAgICAgIG9yZGVyOiAxO1xuICAgIH1cbiAgfVxuXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgLnZmbXMtYmFubmVyIHtcbiAgICAgICYtdGV4dCB7XG4gICAgICAgIG9yZGVyOiAxO1xuICAgICAgfVxuXG4gICAgICAmLWltZyB7XG4gICAgICAgIG9yZGVyOiAyO1xuICAgICAgfVxuICAgIH1cblxuICB9XG5cbn0iXX0= */
