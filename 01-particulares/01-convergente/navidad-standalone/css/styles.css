/**
 * Vodafone Reboot Framework: Version 2.7.1. Generation Date: 2020-12-18T10:58:55.300Z
 */

.vfes-ms-content {
  background-color: #333333;
}

.vfes-ms-content .ws10-c-call-to-action-app {
  width: 100%;
  background-image: linear-gradient(45deg, #333333 0%, #333333 55%, #333333 100%);
  padding: 2rem 0;
}

.vfes-ms-content .ws10-c-card-discovery-standard-full-width--right-img {
  align-items: center;
}

.vfes-ms-content .vfms-title {
  margin-bottom: .5rem;
}

.vfes-ms-content .device {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

.vfes-ms-content .vfms-badge {
  width: 5.4375rem;
}

.vfes-ms-content .vfms-badge2 {
  width: 4.0625rem;
}

.vfes-ms-content .device:hover {
  color: #222222;
}

.vfes-ms-content .vf-block {
  display: block;
}

.vfes-ms-content .vf-field {
  max-width: 28.125rem;
}

.vfes-ms-content .vf-esCliente {
  margin: 0 auto;
}

.vfes-ms-content .vf-device--img {
  width: auto;
}

.vfes-ms-content .vf-device--icon {
  width: auto;
}

.vfes-ms-content .vf-device--item {
  border-bottom: 0.125rem solid #f4f4f4;
}

.vfes-ms-content .vf-input__shadow {
  box-shadow: none;
}

.vfes-ms-content .vf-input__shadow:focus {
  box-shadow: none;
}

.vfes-ms-content .vfms-minicard2 {
  min-height: 25rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-minicard2 {
    min-height: 40.625rem;
  }
}

.vfes-ms-content .vfms-minicard {
  min-height: 25rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-minicard {
    min-height: 30.25rem;
  }
}

.vfes-ms-content .vfms-img-minicard {
  margin-top: 1.25rem;
}

.vfes-ms-content .ws10-c-card-discovery-product__image {
  width: 100%;
  height: auto;
  -o-object-fit: cover;
  object-fit: cover;
}

.vfes-ms-content .ws10-c-card-discovery-standard-full-width__content-inner {
  padding-right: 0;
  padding-left: 0;
}

.vfes-ms-content .vfms-sticky-app {
  position: -webkit-sticky;
  position: sticky;
  bottom: 0;
  background-color: #333333 !important;
}

.vfes-ms-content .vf-banner {
  background: #f4f4f4;
  background: linear-gradient(180deg, #f4f4f4 0%, #c7d6e8 100%);
  background-size: cover;
  position: relative;
  color: #000000;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vf-banner {
    background: #f4f4f4;
    background: linear-gradient(180deg, #f4f4f4 0%, #c7d6e8 100%);
    background-size: cover;
  }
}

.vfes-ms-content .vf-banner__title {
  max-width: 50rem;
}

.vfes-ms-content .vf-banner__subtitle {
  font-size: 2rem;
}

.vfes-ms-content .ws10-c-link-chevron__icon {
  width: 3rem;
  height: 1.5rem;
  margin-left: 0.25rem;
  color: #e60000;
  flex-shrink: 0;
}

.vfes-ms-content .ws10-c-filter--active .ws10-c-filter__label svg .path {
  fill: #fff;
}

.vfes-ms-content .vfms-svg {
  fill: #fff;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50e1xuICAgIC53czEwLWMtY2FsbC10by1hY3Rpb24tYXBwIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgIzMzMzMzMyAwJSwgIzMzMzMzMyA1NSUsICMzMzMzMzMgMTAwJSk7XG4gICAgICAgIHBhZGRpbmc6IDJyZW0gMDtcbiAgICB9XG4gICAgLndzMTAtYy1jYXJkLWRpc2NvdmVyeS1zdGFuZGFyZC1mdWxsLXdpZHRoLS1yaWdodC1pbWcge1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbiAgICBcblxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzMzMzM7XG4gICAgLnZmbXMtdGl0bGV7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IC41cmVtXG4gICAgfVxuICAgIC5kZXZpY2V7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIH1cbiAgICAudmZtcy1iYWRnZXtcbiAgICAgICAgd2lkdGg6ODdweDtcbiAgICB9XG4gICAgLnZmbXMtYmFkZ2Uye1xuICAgICAgICB3aWR0aDo2NXB4O1xuICAgIH1cbiAgICAuZGV2aWNlOmhvdmVye1xuICAgICAgICBjb2xvcjojMjIyMjIyO1xuICAgIH1cbiAgICAudmYtYmxvY2sge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gICAgLnZmLWZpZWxkIHtcbiAgICAgICAgbWF4LXdpZHRoOiA0NTBweDtcbiAgICB9XG4gICAgLnZmLWVzQ2xpZW50ZSB7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIH1cbiAgICAudmYtZGV2aWNle1xuICAgICAgICAmLS1pbWcge1xuICAgICAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgIH1cbiAgICAgICAgJi0taWNvbiB7XG4gICAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgfVxuICAgICAgICAmLS1pdGVtIHtcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZjRmNGY0O1xuICAgICAgICB9XG4gICAgfSBcbiAgICAudmYtaW5wdXRfX3NoYWRvdyB7XG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgfVxuICAgIC52Zi1pbnB1dF9fc2hhZG93OmZvY3VzIHtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICB9XG4gICAgLnZmbXMtbWluaWNhcmQye1xuICAgICAgICBtaW4taGVpZ2h0OiA0MDBweDtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDY1MHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLW1pbmljYXJke1xuICAgICAgICBtaW4taGVpZ2h0OiA0MDBweDtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDQ4NHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLWltZy1taW5pY2FyZHtcbiAgICAgICAgbWFyZ2luLXRvcDoyMHB4O1xuICAgIH1cbiAgICAud3MxMC1jLWNhcmQtZGlzY292ZXJ5LXByb2R1Y3RfX2ltYWdlIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgIH1cbiAgICAud3MxMC1jLWNhcmQtZGlzY292ZXJ5LXN0YW5kYXJkLWZ1bGwtd2lkdGhfX2NvbnRlbnQtaW5uZXIge1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgfVxuICAgIC53czEwLWMtY2FyZC1kaXNjb3ZlcnktcHJvZHVjdF9faW1hZ2UtdmZtcyB7XG4gICAgXG4gICAgfVxuICAgIC52Zm1zLXN0aWNreS1hcHB7XG4gICAgICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMzMzMyFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIC52Zi1iYW5uZXJ7XG4gICAgICAgIGJhY2tncm91bmQ6IHJnYigyNDQsMjQ0LDI0NCk7XG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsIHJnYmEoMjQ0LDI0NCwyNDQsMSkgMCUsIHJnYmEoMTk5LDIxNCwyMzIsMSkgMTAwJSk7XG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgY29sb3I6ICMwMDAwMDA7XG5cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYigyNDQsMjQ0LDI0NCk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCByZ2JhKDI0NCwyNDQsMjQ0LDEpIDAlLCByZ2JhKDE5OSwyMTQsMjMyLDEpIDEwMCUpO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgICAgICAgICAgIFxuICAgICAgICAgIH1cbiAgICAgICZfX3RpdGxle1xuICAgICAgICBtYXgtd2lkdGg6IDgwMHB4O1xuICAgICAgfVxuICAgICAgJl9fc3VidGl0bGV7XG4gICAgICAgICAgZm9udC1zaXplOjMycHg7XG4gICAgICB9XG4gICAgIFxuICAgIH1cbiAgICAud3MxMC1jLWxpbmstY2hldnJvbl9faWNvbiB7XG4gICAgICAgIHdpZHRoOiAzcmVtO1xuICAgICAgICBoZWlnaHQ6IDEuNXJlbTtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDAuMjVyZW07XG4gICAgICAgIGNvbG9yOiAjZTYwMDAwO1xuICAgICAgICBmbGV4LXNocmluazogMDtcbiAgICB9XG4gICAgLndzMTAtYy1maWx0ZXItLWFjdGl2ZSAud3MxMC1jLWZpbHRlcl9fbGFiZWwgc3ZnIC5wYXRoe1xuICAgICAgICBmaWxsOiAjZmZmO1xuICAgIH1cbiAgICAudmZtcy1zdmcge1xuXG4gICAgICAgIGZpbGw6ICNmZmY7XG5cbiAgICB9XG5cblxuICAgXG5cblxuXG59Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0NBLEFBQUEsZ0JBQWdCLENBQUE7RUFXWixnQkFBZ0IsRUFBRSxPQUFPO0NBc0g1Qjs7QUFqSUQsQUFDSSxnQkFEWSxDQUNaLDBCQUEwQixDQUFDO0VBQ3ZCLEtBQUssRUFBRSxJQUFJO0VBQ1gsZ0JBQWdCLEVBQUUsNkRBQTZEO0VBQy9FLE9BQU8sRUFBRSxNQUFNO0NBQ2xCOztBQUxMLEFBTUksZ0JBTlksQ0FNWixxREFBcUQsQ0FBQztFQUNsRCxXQUFXLEVBQUUsTUFBTTtDQUN0Qjs7QUFSTCxBQVlJLGdCQVpZLENBWVosV0FBVyxDQUFBO0VBQ1AsYUFBYSxFQUFFLEtBQ25CO0NBQUM7O0FBZEwsQUFlSSxnQkFmWSxDQWVaLE9BQU8sQ0FBQTtFQUNILGdCQUFnQixFQUFFLFdBQVc7RUFDN0IsTUFBTSxFQUFFLElBQUk7RUFDWixlQUFlLEVBQUUsU0FBUztDQUM3Qjs7QUFuQkwsQUFvQkksZ0JBcEJZLENBb0JaLFdBQVcsQ0FBQTtFQUNQLEtBQUssRUFBQyxJQUFJO0NBQ2I7O0FBdEJMLEFB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 */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50e1xuICAgIC53czEwLWMtY2FsbC10by1hY3Rpb24tYXBwIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgIzMzMzMzMyAwJSwgIzMzMzMzMyA1NSUsICMzMzMzMzMgMTAwJSk7XG4gICAgICAgIHBhZGRpbmc6IDJyZW0gMDtcbiAgICB9XG4gICAgLndzMTAtYy1jYXJkLWRpc2NvdmVyeS1zdGFuZGFyZC1mdWxsLXdpZHRoLS1yaWdodC1pbWcge1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbiAgICBcblxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzMzMzM7XG4gICAgLnZmbXMtdGl0bGV7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IC41cmVtXG4gICAgfVxuICAgIC5kZXZpY2V7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIH1cbiAgICAudmZtcy1iYWRnZXtcbiAgICAgICAgd2lkdGg6ODdweDtcbiAgICB9XG4gICAgLnZmbXMtYmFkZ2Uye1xuICAgICAgICB3aWR0aDo2NXB4O1xuICAgIH1cbiAgICAuZGV2aWNlOmhvdmVye1xuICAgICAgICBjb2xvcjojMjIyMjIyO1xuICAgIH1cbiAgICAudmYtYmxvY2sge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gICAgLnZmLWZpZWxkIHtcbiAgICAgICAgbWF4LXdpZHRoOiA0NTBweDtcbiAgICB9XG4gICAgLnZmLWVzQ2xpZW50ZSB7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIH1cbiAgICAudmYtZGV2aWNle1xuICAgICAgICAmLS1pbWcge1xuICAgICAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgIH1cbiAgICAgICAgJi0taWNvbiB7XG4gICAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgfVxuICAgICAgICAmLS1pdGVtIHtcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZjRmNGY0O1xuICAgICAgICB9XG4gICAgfSBcbiAgICAudmYtaW5wdXRfX3NoYWRvdyB7XG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgfVxuICAgIC52Zi1pbnB1dF9fc2hhZG93OmZvY3VzIHtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICB9XG4gICAgLnZmbXMtbWluaWNhcmQye1xuICAgICAgICBtaW4taGVpZ2h0OiA0MDBweDtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDY1MHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLW1pbmljYXJke1xuICAgICAgICBtaW4taGVpZ2h0OiA0MDBweDtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDQ4NHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLWltZy1taW5pY2FyZHtcbiAgICAgICAgbWFyZ2luLXRvcDoyMHB4O1xuICAgIH1cbiAgICAud3MxMC1jLWNhcmQtZGlzY292ZXJ5LXByb2R1Y3RfX2ltYWdlIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgIH1cbiAgICAud3MxMC1jLWNhcmQtZGlzY292ZXJ5LXN0YW5kYXJkLWZ1bGwtd2lkdGhfX2NvbnRlbnQtaW5uZXIge1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgfVxuICAgIC53czEwLWMtY2FyZC1kaXNjb3ZlcnktcHJvZHVjdF9faW1hZ2UtdmZtcyB7XG4gICAgXG4gICAgfVxuICAgIC52Zm1zLXN0aWNreS1hcHB7XG4gICAgICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMzMzMyFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIC52Zi1iYW5uZXJ7XG4gICAgICAgIGJhY2tncm91bmQ6IHJnYigyNDQsMjQ0LDI0NCk7XG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsIHJnYmEoMjQ0LDI0NCwyNDQsMSkgMCUsIHJnYmEoMTk5LDIxNCwyMzIsMSkgMTAwJSk7XG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgY29sb3I6ICMwMDAwMDA7XG5cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYigyNDQsMjQ0LDI0NCk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCByZ2JhKDI0NCwyNDQsMjQ0LDEpIDAlLCByZ2JhKDE5OSwyMTQsMjMyLDEpIDEwMCUpO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgICAgICAgICAgIFxuICAgICAgICAgIH1cbiAgICAgICZfX3RpdGxle1xuICAgICAgICBtYXgtd2lkdGg6IDgwMHB4O1xuICAgICAgfVxuICAgICAgJl9fc3VidGl0bGV7XG4gICAgICAgICAgZm9udC1zaXplOjMycHg7XG4gICAgICB9XG4gICAgIFxuICAgIH1cbiAgICAud3MxMC1jLWxpbmstY2hldnJvbl9faWNvbiB7XG4gICAgICAgIHdpZHRoOiAzcmVtO1xuICAgICAgICBoZWlnaHQ6IDEuNXJlbTtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDAuMjVyZW07XG4gICAgICAgIGNvbG9yOiAjZTYwMDAwO1xuICAgICAgICBmbGV4LXNocmluazogMDtcbiAgICB9XG4gICAgLndzMTAtYy1maWx0ZXItLWFjdGl2ZSAud3MxMC1jLWZpbHRlcl9fbGFiZWwgc3ZnIC5wYXRoe1xuICAgICAgICBmaWxsOiAjZmZmO1xuICAgIH1cbiAgICAudmZtcy1zdmcge1xuXG4gICAgICAgIGZpbGw6ICNmZmY7XG5cbiAgICB9XG5cblxuICAgXG5cblxuXG59Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0NBLEFBQUEsZ0JBQWdCLENBQUE7RUFXWixnQkFBZ0IsRUFBRSxPQUFPO0NBc0g1Qjs7QUFqSUQsQUFDSSxnQkFEWSxDQUNaLDBCQUEwQixDQUFDO0VBQ3ZCLEtBQUssRUFBRSxJQUFJO0VBQ1gsZ0JBQWdCLEVBQUUsNkRBQTZEO0VBQy9FLE9BQU8sRUFBRSxNQUFNO0NBQ2xCOztBQUxMLEFBTUksZ0JBTlksQ0FNWixxREFBcUQsQ0FBQztFQUNsRCxXQUFXLEVBQUUsTUFBTTtDQUN0Qjs7QUFSTCxBQVlJLGdCQVpZLENBWVosV0FBVyxDQUFBO0VBQ1AsYUFBYSxFQUFFLEtBQ25CO0NBQUM7O0FBZEwsQUFlSSxnQkFmWSxDQWVaLE9BQU8sQ0FBQTtFQUNILGdCQUFnQixFQUFFLFdBQVc7RUFDN0IsTUFBTSxFQUFFLElBQUk7RUFDWixlQUFlLEVBQUUsU0FBUztDQUM3Qjs7QUFuQkwsQUFvQkksZ0JBcEJZLENBb0JaLFdBQVcsQ0FBQTtFQUNQLEtBQUssRUFBQyxJQUFJO0NBQ2I7O0FBdEJMLEFB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 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
