/**
 * Vodafone Reboot Framework: Version 2.11.4. Generation Date: 2021-03-17T09:34:23.275Z
 */

html {
  scroll-behavior: smooth;
}

.vfes-ms-content .vfes-tab-group {
  font-family: 'VodafoneRegular';
  text-align: left;
}

.vfes-ms-content .vfes-tab-group__container {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

.vfes-ms-content .vfes-tab-group__container-item:first-of-type .vfes-tab-group__tab {
  border-radius: 0.375rem 0 0 0.375rem;
}

.vfes-ms-content .vfes-tab-group__container-item:last-of-type .vfes-tab-group__tab {
  border-radius: 0 0.375rem 0.375rem 0;
}

.vfes-ms-content .vfes-tab-group__container-item--active .vfes-tab-group__tab {
  background-color: #e60000;
  color: #fff;
}

.vfes-ms-content .vfes-tab-group__tab {
  font-size: 1rem;
  width: 100%;
  padding: 0.625rem 2.5rem 0.75rem;
  background-color: #ccc;
  color: #333333;
  border: 0.0625rem solid transparent;
}

.vfes-ms-content .vfes-tab-group__content {
  display: none;
}

.vfes-ms-content .vfes-tab-group__content[aria-expanded='true'] {
  display: block;
}

.vfes-ms-content .vfes-tab-group--grey .vfes-tab-group__container-item--active .vfes-tab-group__tab {
  background-color: #e60000;
  color: #fff;
}

.vfes-ms-content .vfes-tab-group--grey .vfes-tab-group__tab {
  background-color: #fff;
}

.vfes-ms-content .vfes-tab-group--dark .vfes-tab-group__container-item--active .vfes-tab-group__tab {
  background-color: #fff;
  color: #333333;
}

.vfes-ms-content .vfes-tab-group--dark .vfes-tab-group__tab {
  background-color: #333333;
  border-color: #fff;
  color: #fff;
}

@media only screen and (max-width: 40rem) {
  .vfes-ms-content .vfes-tab-group--dropdown {
    position: relative;
    padding-top: 2.6875rem;
  }
  .vfes-ms-content .vfes-tab-group--dropdown .vfes-tab-group__container {
    flex-direction: column;
    position: absolute;
    justify-content: flex-start;
    top: 0;
    height: 2.6875rem;
    z-index: 1;
    overflow: hidden;
    width: 100%;
    border-radius: 0.375rem;
  }
  .vfes-ms-content .vfes-tab-group--dropdown .vfes-tab-group__container::after {
    content: '';
    right: 1rem;
    position: absolute;
    top: 0.75rem;
    transform: translate(-50%, 0) rotate(135deg);
  }
  .vfes-ms-content .vfes-tab-group--dropdown .vfes-tab-group__container-item {
    width: 100%;
    order: 1;
    background-color: #F4F4F4;
  }
  .vfes-ms-content .vfes-tab-group--dropdown .vfes-tab-group__container-item--active {
    order: 0;
    background-color: #ccc;
  }
  .vfes-ms-content .vfes-tab-group--dropdown .vfes-tab-group__container-item--active .vfes-tab-group__tab {
    background-color: #F4F4F4;
    color: #333333;
  }
  .vfes-ms-content .vfes-tab-group--dropdown .vfes-tab-group__container-item:hover {
    background-color: #ccc;
  }
  .vfes-ms-content .vfes-tab-group--dropdown .vfes-tab-group__container[aria-expanded="true"] {
    height: auto;
  }
  .vfes-ms-content .vfes-tab-group--dropdown .vfes-tab-group__container[aria-expanded="true"]::after {
    transform: translate(-50%, 50%) rotate(-45deg);
  }
  .vfes-ms-content .vfes-tab-group--dropdown .vfes-tab-group__container[aria-expanded="true"] .vfes-c-tabs-group__container-item {
    border-radius: 0;
  }
  .vfes-ms-content .vfes-tab-group--dropdown .vfes-tab-group__tab {
    width: 100%;
    color: #333333;
    background-color: transparent;
    border-color: transparent;
  }
  .vfes-ms-content .vfes-tab-group--dropdown.vfes-tab-group--grey .vfes-tab-group__container-item {
    background-color: #fff;
  }
  .vfes-ms-content .vfes-tab-group--dropdown.vfes-tab-group--grey .vfes-tab-group__container-item:hover {
    background-color: #F4F4F4;
  }
  .vfes-ms-content .vfes-tab-group--dropdown.vfes-tab-group--grey .vfes-tab-group__container-item--active {
    background-color: #fff;
  }
  .vfes-ms-content .vfes-tab-group--dropdown.vfes-tab-group--grey .vfes-tab-group__container-item--active .vfes-tab-group__tab {
    background-color: transparent;
  }
  .vfes-ms-content .vfes-tab-group--dropdown.vfes-tab-group--dark .vfes-tab-group__container:after {
    border-color: #fff;
  }
  .vfes-ms-content .vfes-tab-group--dropdown.vfes-tab-group--dark .vfes-tab-group__container-item:hover {
    background-color: #666;
  }
  .vfes-ms-content .vfes-tab-group--dropdown.vfes-tab-group--dark .vfes-tab-group__container-item--active .vfes-tab-group__tab {
    border-color: transparent;
    background-color: transparent;
  }
  .vfes-ms-content .vfes-tab-group--dropdown.vfes-tab-group--dark .vfes-tab-group__container-item .vfes-tab-group__tab {
    color: #fff;
  }
}

.vfes-ms-content .vfms-colormix {
  background-image: linear-gradient(to right, #9c2aa0, #912795, #87248a, #7c2180, #721e75);
}

.vfes-ms-content .vfms-colormix__seriefans {
  background-image: linear-gradient(to right, #9c2aa0, #a43ca7, #ab4daf, #b35cb6, #ba6abd);
}

.vfes-ms-content .vfms-hide {
  display: none;
}

.vfes-ms-content .vfms-icon-banner {
  position: relative;
  z-index: 2;
}

.vfes-ms-content .vfms-banner {
  background-image:  url('../img/bg-masseries-mobile.jpg?v=7f15c646a0453251897b760fd1e52c5a');
  background-size: cover;
  background-repeat: no-repeat;
  position: relative;
  position: relative;
}

.vfes-ms-content .vfms-banner-prices {
  margin-bottom: 0.625rem;
}

.vfes-ms-content .vfms-banner .vfms-blur {
  width: 100%;
  background-image: linear-gradient(180deg, rgba(74, 74, 74, 0), rgba(64, 64, 64, 0.4) 56%, #333);
  height: 18.75rem;
  position: absolute;
  bottom: 0;
}

.vfes-ms-content .vfms-banner .vfms-card {
  padding-top: 1.25rem;
  border-radius: 0.375rem;
  position: relative;
  overflow: hidden;
  z-index: 1;
}

.vfes-ms-content .vfms-banner .vfms-card-flex {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 0.625rem;
}

.vfes-ms-content .vfms-banner .vfms-card-logos {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.vfes-ms-content .vfms-banner .vfms-card-logos .vfms-img {
  width: 5.3125rem;
}

.vfes-ms-content .vfms-banner .vfms-card .vfms-line-decorative {
  position: absolute;
  top: 0;
  width: 100%;
  padding: 0.5rem;
}

.vfes-ms-content .vfms-banner__title span {
  display: block;
}

.vfes-ms-content .vfms-banner .vfms-decorative-line {
  height: 0.0625rem;
  width: 7.5rem;
  background-color: #333;
}

.vfes-ms-content .vfms-banner .vfms-plus {
  width: 100%;
}

.vfes-ms-content .vfes-breadcrumbs {
  border: none;
}

.vfes-ms-content .vfms-info .vfms-icon-flex {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
}

.vfes-ms-content .vfms-info .vfms-icon-flex li {
  text-align: center;
}

.vfes-ms-content .vfms-info .vfms-icon-flex li img {
  max-width: 5rem;
}

.vfes-ms-content .vfms-info .vfms-icon-flex li:nth-child(8) {
  text-align: right;
  padding-right: 0.625rem;
}

.vfes-ms-content .vfms-info .vfms-icon-flex li:last-child {
  text-align: left;
  padding-left: 0.625rem;
}

.vfes-ms-content .vfms-info__text {
  font-size: 1.125rem;
}

.vfes-ms-content .vfms-choose-rate {
  display: flex;
  flex-direction: column;
  align-items: center;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-choose-rate {
    flex-direction: row;
  }
}

.vfes-ms-content .vfms-choose-rate__module {
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 1.25rem;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-choose-rate__module {
    flex-direction: row;
    align-items: center;
  }
}

.vfes-ms-content .vfms-choose-rate__module-img-mobile {
  width: 100%;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-choose-rate__module-img-mobile {
    display: none;
  }
}

.vfes-ms-content .vfms-choose-rate__module-img-desktop {
  display: none;
  width: 100%;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-choose-rate__module-img-desktop {
    display: block;
  }
}

.vfes-ms-content .vfms-choose-rate__module--text {
  padding: 1.25rem;
}

.vfes-ms-content .vfms-client {
  margin-bottom: 1.0625rem;
}

.vfes-ms-content .vfms-client p {
  margin-bottom: 0;
}

.vfes-ms-content .vfms-client-box {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  border-top: 0.0625rem solid #fff;
  border-bottom: 0.0625rem solid #fff;
  align-items: center;
  justify-content: space-around;
  padding: 1.125rem 0;
}

.vfes-ms-content .vfms-client-box-svg {
  background: white;
  width: 2.25rem;
  height: 2.25rem;
  border-radius: 50%;
}

.vfes-ms-content .vfms-client-box-svg .icon-v3 {
  color: #E60000;
}

.vfes-ms-content .vfms-carousel {
  padding: 1.875rem 0;
}

.vfes-ms-content .carousel {
  overflow: hidden;
  position: relative;
  width: 100%;
  height: 28.9375rem;
  perspective: 31.25rem;
  transform-style: preserve-3d;
  transform-origin: 0% 50%;
}

.vfes-ms-content .carousel.carousel-slider {
  top: 0;
  left: 0;
}

.vfes-ms-content .carousel.carousel-slider .carousel-fixed-item {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 1.25rem;
  z-index: 1;
}

.vfes-ms-content .carousel.carousel-slider .carousel-fixed-item.with-indicators {
  bottom: 4.25rem;
}

.vfes-ms-content .carousel.carousel-slider .carousel-item {
  width: 100%;
  height: 100%;
  min-height: 28.9375rem;
  position: absolute;
  top: 0;
  left: 0;
}

.vfes-ms-content .carousel.carousel-slider .carousel-item p {
  font-size: 0.9375rem;
}

.vfes-ms-content .carousel .carousel-item {
  visibility: hidden;
  width: 17.125rem;
  height: 26.4375rem;
  position: absolute;
  top: 0;
  left: 0;
  opacity: 1 !important;
}

.vfes-ms-content .carousel .carousel-item > img {
  width: 100%;
}

.vfes-ms-content .carousel .indicators {
  position: absolute;
  text-align: center;
  left: 0;
  right: 0;
  bottom: 0;
  margin: 0;
}

.vfes-ms-content .carousel .indicators .indicator-item {
  display: inline-block;
  position: relative;
  cursor: pointer;
  height: 0.5rem;
  width: 0.5rem;
  margin: 1.5rem 0.25rem;
  background-color: rgba(255, 255, 255, 0.5);
  transition: background-color .3s;
  border-radius: 50%;
}

.vfes-ms-content .carousel .indicators .indicator-item.active {
  background-color: #fff;
}

.vfes-ms-content .carousel.scrolling .carousel-item .materialboxed,
.vfes-ms-content .carousel .carousel-item:not(.active) .materialboxed {
  pointer-events: none;
}

.vfes-ms-content .vfms-logos {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-around;
}

.vfes-ms-content .vfms-logos .line-decorative {
  display: none;
}

.vfes-ms-content .vfms-logos-channel {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-around;
  align-items: center;
  width: 100%;
}

.vfes-ms-content .vfms-logos-channel img {
  width: 4.375rem;
}

.vfes-ms-content .vfms-cardone-icons {
  display: flex;
  flex-direction: row;
  flex-flow: wrap;
  justify-content: space-around;
  align-items: center;
}

.vfes-ms-content .vfms-cardone-icons .vfms-icon {
  width: 6.25rem;
}

.vfes-ms-content .vfms-cardone-content {
  position: relative;
  width: 100%;
  padding: 0.625rem 0.625rem 0.625rem 0.625rem;
  z-index: 2;
}

.vfes-ms-content .vfms-cardone-items {
  background-size: cover;
  background-repeat: no-repeat;
  position: relative;
  border-radius: 0.375rem;
  overflow: hidden;
}

.vfes-ms-content .vfms-cardone-items:hover .vfms-cardone-items-bg-animation {
  width: 140%;
  filter: blur(0);
  transition: 0.5s;
}

.vfes-ms-content .vfms-cardone-items-bg {
  position: absolute;
  z-index: 0;
  width: 100%;
  left: 0;
}

.vfes-ms-content .vfms-cardone-items-bg .vfms-icon-channel {
  position: absolute;
  top: 0;
  right: 0;
}

.vfes-ms-content .vfms-cardone-items-icon {
  position: absolute;
  right: 0.625rem;
  width: 5.9375rem;
}

.vfes-ms-content .vfms-cardone-pack {
  padding: 0 0.9375rem 0 0.9375rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.vfes-ms-content .vfms-cardone-pack .vfms-title-card {
  margin: 0;
  padding: 0.9375rem 0;
}

.vfes-ms-content .vfms-cardone-pack-flex {
  display: flex;
  flex-direction: row;
  border-top: 0.0625rem solid #fff;
  padding-top: 0.625rem;
}

.vfes-ms-content .vfms-cardone-pack .vfes-form__box {
  flex-direction: column;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 0.9375rem;
}

.vfes-ms-content .vfms-cardone-pack .vfes-form__checkbox + .vfes-form__label, .vfes-ms-content .vfms-cardone-pack .vfes-form__radio + .vfes-form__label {
  flex-direction: column;
  padding-left: initial;
}

.vfes-ms-content .vfms-cardone-pack .vfes-form__checkbox + .vfes-form__label::before, .vfes-ms-content .vfms-cardone-pack .vfes-form__radio + .vfes-form__label::before {
  position: relative;
  flex-direction: column;
  display: flex;
  top: 0.125rem;
  border: 0.0625rem solid #fff;
  background-color: transparent;
  left: 0;
  box-sizing: border-box;
  box-shadow: none;
}

.vfes-ms-content .vfms-cardone-pack .vfes-form__radio:checked + .vfes-form__label::after {
  left: 50%;
  transform: translateX(-100%);
  background-color: #fff;
}

.vfes-ms-content .vfms-cardone-icon {
  display: block;
  position: relative;
  margin: 0 auto;
}

.vfes-ms-content .vfms-cardone-box {
  border: 0.0625rem solid #fff;
}

.vfes-ms-content .vfms-cardone-box-ajust {
  padding: 0.5rem 0.625rem 0 0.625rem;
  border-radius: 0.375rem;
}

.vfes-ms-content .vfms-cardone-box-content {
  display: flex;
  flex-flow: wrap;
  justify-content: flex-start;
}

.vfes-ms-content .vfms-cardone-box .vfes-title {
  margin: 0 0 0.625rem 0;
}

.vfes-ms-content .vfms-cardone-box-dates {
  display: flex;
  align-items: center;
}

.vfes-ms-content .vfms-cardone-box-dates .one-icon {
  width: 1.5rem;
}

.vfes-ms-content .vfms-cardone-box-quantity {
  display: flex;
  flex-direction: column;
}

.vfes-ms-content .vfms-cardone-price {
  display: flex;
  justify-content: center;
  align-items: flex-end;
  margin-top: 0;
  align-items: flex-end;
}

.vfes-ms-content .vfms-cardone-price-cost {
  font-size: 2.625rem;
  line-height: normal;
}

.vfes-ms-content .vfms-cardone-price-coin {
  font-size: 1.75rem;
}

.vfes-ms-content .vfms-cardone-price-end {
  justify-content: flex-end;
  align-items: center;
}

.vfes-ms-content .vfms-cardone-price-end .vfms-cardone-price-big {
  margin-right: 0.625rem;
}

.vfes-ms-content .vfms-cardone-price .vfms-text-litle {
  font-size: 0.875rem;
  padding: 0;
  margin: 0;
}

.vfes-ms-content .vfms-cardone .vfms-button {
  width: 100%;
}

.vfes-ms-content .vfms-cardone .vfms-link {
  display: block;
  margin: 0 auto;
  position: relative;
  text-align: center;
  padding-top: 0.3125rem;
  text-decoration: underline;
}

.vfes-ms-content .vfms-cardone .vfms-title-discount {
  margin-bottom: 0;
}

.vfes-ms-content .vfms-cardone .vfms-dates-card {
  display: flex;
  align-items: center;
}

.vfes-ms-content .vfms-legal .vfes-link:hover {
  color: #fff;
}

.vfes-ms-content .vfms-flex {
  flex-direction: column;
}

.vfes-ms-content .vfms-nodeco-text {
  order: 2;
}

.vfes-ms-content .vfms-nodeco-img {
  order: 1;
}

.vfes-ms-content .vfes-modal-channel {
  background-color: rgba(0, 0, 0, 0.7);
}

.vfes-ms-content .vfes-modal-channel .vfes-modal__head {
  padding-top: 0.875rem;
}

.vfes-ms-content .vfes-modal-channel .vfes-modal__close {
  padding-top: 0.875rem;
}

.vfes-ms-content .vfes-modal-channel .vfes-modal__item {
  margin-top: 3.75rem;
}

.vfes-ms-content .vfes-modal-channel .vfes-modal__content {
  margin-top: -0.125rem;
  height: 100%;
}

.vfes-ms-content .vfes-modal-channel .vfes-modal__content .vfes-title {
  text-align: center;
  font-size: 1.75rem;
  line-height: 2.25rem;
  margin-bottom: 1.25rem;
}

.vfes-ms-content .vfes-modal-channel .vfes-modal__content .vfes-list {
  display: flex;
  flex-flow: row wrap;
  justify-content: flex-start;
  padding: 0 0.625rem 0 0.625rem;
}

.vfes-ms-content .vfes-modal-channel .vfes-modal__content .channels__channel {
  display: inline-block;
  text-align: center;
  vertical-align: top;
  width: 4.25rem;
}

.vfes-ms-content .vfes-modal-channel .vfes-modal__content .channels__channel .img {
  width: 4.25rem;
}

.vfes-ms-content .vfes-modal-channel .vfes-modal__content .channels__channel .vfes-paragraph {
  text-align: center;
}

.vfes-ms-content .vfes-modal-channel .vfes-modal__content .channels__channel:last-of-type .vfes-paragraph {
  margin-bottom: 2.5rem;
}

.vfes-ms-content .vfes-modal-channel .vfes-modal__content .channels__common .channels__channel:last-of-type .vfes-paragraph {
  margin-bottom: 0rem;
}

.vfes-ms-content .vfms-card {
  transition: all .2s ease-in-out;
}

.vfes-ms-content .vfms-card:hover {
  transform: scale(1.02);
}

.vfes-ms-content .vfms-decoration-live {
  position: relative;
  display: block;
}

.vfes-ms-content .vfms-decoration-live::after {
  content: '';
  background: #fbfbfb;
  background: linear-gradient(90deg, rgba(251, 251, 251, 0) 0%, rgba(236, 236, 236, 0.434611) 48%, rgba(255, 255, 255, 0) 100%);
  position: absolute;
  width: 18.75rem;
  height: 100%;
  left: -18.75rem;
  top: 0;
}

.vfes-ms-content:hover .vfms-decoration-live:after {
  -webkit-animation: 1s moveDecoration infinite;
          animation: 1s moveDecoration infinite;
}

@-webkit-keyframes moveDecoration {
  0% {
    left: 0;
  }
  100% {
    left: 100%;
  }
}

@keyframes moveDecoration {
  0% {
    left: 0;
  }
  100% {
    left: 100%;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-icon-banner {
    position: absolute;
    z-index: 2;
    text-align: left;
  }
  .vfes-ms-content .vfms-banner {
    background-image:  url('../img/bg-masseries-desktop.jpg?v=032542b5c1d4837be8e2a289e8685cef');
    background-size: cover;
  }
  .vfes-ms-content .vfms-banner__container {
    display: flex;
    justify-content: space-evenly;
    align-items: center;
  }
  .vfes-ms-content .vfms-flex {
    flex-direction: row;
  }
  .vfes-ms-content .vfms-cardone-box-ajust {
    padding: 0.5rem 0.3125rem 0 0.3125rem;
  }
  .vfes-ms-content .vfms-cardone .vfms-title-discount {
    font-size: 1.875rem;
  }
  .vfes-ms-content .vfms-cardone .vfms-minidates-card {
    font-size: 0.8125rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-banner__container {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .vfes-ms-content .vfms-banner .vfms-card {
    width: 23.75rem;
  }
  .vfes-ms-content .vfms-banner .vfms-card-logos .vfms-img {
    width: 6.875rem;
  }
  .vfes-ms-content .vfms-carousel-maxwidth {
    max-width: 24.375rem;
  }
  .vfes-ms-content .vfms-flex {
    flex-direction: row;
  }
  .vfes-ms-content .vfms-info__container {
    display: flex;
    align-items: baseline;
  }
  .vfes-ms-content .vfms-info__text {
    text-align: left;
  }
  .vfes-ms-content .vfms-info .vfms-icon-flex {
    padding: 0 5rem 1.875rem 5rem;
  }
  .vfes-ms-content .vfms-info .vfms-icon-flex li {
    padding-bottom: 1.25rem;
  }
  .vfes-ms-content .vfms-info .vfms-icon-flex li img {
    max-width: 6.25rem;
  }
  .vfes-ms-content .vfms-info .vfms-icon-flex li:nth-child(8) {
    text-align: center;
    padding-right: initial;
  }
  .vfes-ms-content .vfms-info .vfms-icon-flex li:last-child {
    text-align: center;
    padding-right: initial;
  }
  .vfes-ms-content .vfms-info .vfms-canales-column {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  .vfes-ms-content .vfms-logos {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
  }
  .vfes-ms-content .vfms-logos .line-decorative {
    display: block;
    height: 0.125rem;
    background: #fff;
    width: 30%;
  }
  .vfes-ms-content .vfms-logos-channel {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-around;
    align-items: center;
    width: 30%;
  }
  .vfes-ms-content .vfms-logos-channel img {
    width: 5.9375rem;
  }
  .vfes-ms-content .vfms-cardone-box-ajust {
    padding: 0.5rem 0.625rem 0 0.625rem;
  }
  .vfes-ms-content .vfms-cardone-box-dates .one-icon {
    width: 2.25rem;
  }
  .vfes-ms-content .vfms-nodeco-text {
    order: 1;
  }
  .vfes-ms-content .vfms-nodeco-img {
    order: 2;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
