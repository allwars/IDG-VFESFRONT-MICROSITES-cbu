/**
 * Vodafone Reboot Framework: Version 2.7.1. Generation Date: 2021-02-02T09:08:08.437Z
 */

.vfes-ms-content .vfms-title__min {
  text-align: center;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-title__min {
    text-align: left;
  }
}

.vfes-ms-content .vfms-icon__background {
  background-color: #fff;
  border-radius: 50%;
  height: 4.375rem;
  width: 4.375rem;
}

.vfes-ms-content .vfms-why__icon {
  width: 3.375rem;
  height: 3.375rem;
}

.vfes-ms-content .vfms-video__container {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

.vfes-ms-content .vfms-video__img {
  width: 100%;
}

.vfes-ms-content .vfms-video__play {
  position: absolute;
}

.vfes-ms-content .vfms-video__play--light {
  background-color: #fff;
  color: #e60000;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-video__text {
    padding-right: 1.25rem;
  }
}

.vfes-ms-content .vfms-video-responsive {
  padding-bottom: 56.25%;
  padding-top: 1.875rem;
  height: 0;
  overflow: hidden;
}

.vfes-ms-content .vfms-video-responsive iframe,
.vfes-ms-content .vfms-video-responsive object,
.vfes-ms-content .vfms-video-responsive embed {
  position: absolute;
  top: 0;
  left: 0.625rem;
  width: 100%;
  height: 100%;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-video-responsive iframe,
  .vfes-ms-content .vfms-video-responsive object,
  .vfes-ms-content .vfms-video-responsive embed {
    left: 0;
  }
}

.vfes-ms-content .vfms-checkmark {
  display: inline-block;
  width: 1.375rem;
  height: 1.375rem;
  /* IE 9 */
  /* Chrome, Safari, Opera */
  transform: rotate(45deg);
}

.vfes-ms-content .vfms-checkmark:before {
  content: "";
  position: absolute;
  width: 0.125rem;
  height: 0.9375rem;
  background-color: #333;
  left: 0.6875rem;
  top: 0.625rem;
}

.vfes-ms-content .vfms-checkmark:after {
  content: "";
  position: absolute;
  width: 0.5625rem;
  height: 0.125rem;
  background-color: #333;
  left: 0.1875rem;
  top: 1.4375rem;
}

.vfes-ms-content .vfms-list {
  list-style: none;
  margin-left: 0;
}

.vfes-ms-content .vfms-list__item {
  margin-left: 0.625rem;
  margin-bottom: 0.3125rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-list__item {
    margin-bottom: 0.625rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-list__item {
    margin-bottom: 0.9375rem;
  }
}

.vfes-ms-content .vfms-list__item--text {
  display: inline;
}

.vfes-ms-content .vfms-list__element {
  vertical-align: bottom;
}

.vfes-ms-content .vfms-promo-banner__flex {
  display: block;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-promo-banner__flex {
    display: flex;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-promo-banner__height {
    min-height: 15.375rem;
  }
}

.vfes-ms-content .vfms-bestrong__icon {
  display: flex;
  align-items: center;
  justify-content: center;
}

.vfes-ms-content .vf-img--width {
  width: 100%;
}

.vfes-ms-content .vfms-block {
  display: block;
}

.vfes-ms-content .ws10-c-cards-discovery-standard {
  overflow: hidden;
}

.vfes-ms-content .ws10-c-hero-element-1__inner {
  height: auto;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .ws10-u--pt16x-desktop {
    padding-top: 4rem;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .ws10-u--p8x-tablet {
    padding-left: 2rem;
  }
}

.vfes-ms-content .ws10-u--footnote {
  font-size: 0.875rem;
}

.vfes-ms-content .vf-tv-mobile {
  width: 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50e1xuICAgIC8vIEhFUk9cbiAgICAudmZtcy10aXRsZV9fbWluIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjk3MHB4KSB7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIFdIWSBTRUNUSU9OXG4gICAgLnZmbXMtaWNvbntcbiAgICAgICAgJl9fYmFja2dyb3VuZCB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgICAgaGVpZ2h0OiA3MHB4O1xuICAgICAgICAgICAgd2lkdGg6IDcwcHg7XG4gICAgICAgIH1cbiAgICB9IFxuICAgIC52Zm1zLXdoeV9faWNvbiB7XG4gICAgICAgIHdpZHRoOiA1NHB4O1xuICAgICAgICBoZWlnaHQ6IDU0cHg7XG4gICAgfVxuICAgIC8vIFZJREVPIFNFQ1RJT05cbiAgICAudmZtcy12aWRlb3tcbiAgICAgICAgJl9fY29udGFpbmVyIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICAgICAgJl9faW1nIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG4gICAgICAgICZfX3BsYXkge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgJi0tbGlnaHQge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICAgICAgICAgICAgY29sb3I6ICNlNjAwMDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJl9fdGV4dCB7XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9IFxuICAgIC52Zm1zLXZpZGVvLXJlc3BvbnNpdmUge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNTYuMjUlO1xuICAgICAgICBwYWRkaW5nLXRvcDogMzBweDtcbiAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgIC52Zm1zLXZpZGVvLXJlc3BvbnNpdmUgaWZyYW1lLFxuICAgIC52Zm1zLXZpZGVvLXJlc3BvbnNpdmUgb2JqZWN0LFxuICAgIC52Zm1zLXZpZGVvLXJlc3BvbnNpdmUgZW1iZWQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMTBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpe1xuICAgICAgICBsZWZ0OiAwO1xuICAgIH1cbiAgICB9XG4gICAgLy8gQ09NUEFSRSBDQVJEU1xuICAgIC52Zm1zLWNoZWNrbWFyayB7XG4gICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgICB3aWR0aDogMjJweDtcbiAgICAgICAgaGVpZ2h0OjIycHg7XG4gICAgICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7IC8qIElFIDkgKi9cbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7IC8qIENocm9tZSwgU2FmYXJpLCBPcGVyYSAqL1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgfVxuICAgIFxuICAgIC52Zm1zLWNoZWNrbWFyazpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHdpZHRoOiAycHg7XG4gICAgICAgIGhlaWdodDogMTVweDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgICAgICAgbGVmdDogMC42ODc1cmVtO1xuICAgICAgICB0b3A6IDEwcHg7XG4gICAgfVxuICAgIFxuICAgIC52Zm1zLWNoZWNrbWFyazphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgd2lkdGg6IDlweDtcbiAgICAgICAgaGVpZ2h0OiAycHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gICAgICAgIGxlZnQ6IDNweDtcbiAgICAgICAgdG9wOiAyM3B4O1xuICAgIH1cbiAgICAudmZtcy1saXN0IHtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICAgICZfX2l0ZW0ge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmLS10ZXh0IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy1saXN0X19lbGVtZW50e1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuICAgIH0gXG4gICAgLy8gQkFOTkVSU1xuICAgIC52Zm1zLXByb21vLWJhbm5lcntcbiAgICAgICAgJl9fZmxleCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmX19oZWlnaHQge1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDI0NnB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSBcbiAgICAudmZtcy1iZXN0cm9uZyB7XG4gICAgICAgJl9faWNvbiB7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgIH1cbiAgICB9XG4gICAgLnZmLWltZ3tcbiAgICAgICAgJi0td2lkdGgge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIH1cbiAgICB9IFxuICAgIC8vIEdFTkVSQUxFU1xuICAgIC52Zm1zLWJsb2NrIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICAgIC53czEwLWMtY2FyZHMtZGlzY292ZXJ5LXN0YW5kYXJkIHtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB9XG4gICAgLndzMTAtYy1oZXJvLWVsZW1lbnQtMV9faW5uZXIge1xuICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgfVxuICAgIC53czEwLXUtLXB0MTZ4LWRlc2t0b3Age1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCl7XG4gICAgICAgICAgICBwYWRkaW5nLXRvcDogNjRweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAud3MxMC11LS1wOHgtdGFibGV0IHtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpe1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAzMnB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC53czEwLXUtLWZvb3Rub3RlIHtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cbiAgICAudmYtdHYtbW9iaWxlIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxufSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNDQSxBQUVJLGdCQUZZLENBRVosZ0JBQWdCLENBQUM7RUFDYixVQUFVLEVBQUUsTUFBTTtDQUlyQjs7QUFIRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBSjNDLEFBRUksZ0JBRlksQ0FFWixnQkFBZ0IsQ0FBQztJQUdULFVBQVUsRUFBRSxJQUFJO0dBRXZCOzs7QUFQTCxBQVVRLGdCQVZRLENBVVAsc0JBQVksQ0FBQztFQUNWLGdCQUFnQixFQUFFLElBQUk7RUFDdEIsYUFBYSxFQUFFLEdBQUc7RUFDbEIsTUFBTSxFQUFFLElBQUk7RUFDWixLQUFLLEVBQUUsSUFBSTtDQUNkOztBQWZULEFBaUJJLGdCQWpCWSxDQWlCWixlQUFlLENBQUM7RUFDWixLQUFLLEVBQUUsSUFBSTtFQUNYLE1BQU0sRUFBRSxJQUFJO0NBQ2Y7O0FBcEJMLEFBdUJRLGdCQXZCUSxDQXVCUCxzQkFBVyxDQUFDO0VB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 */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
