/**
 * Vodafone Reboot Framework: Version 2.4.1. Generation Date: 2020-09-22T14:59:01.482Z
 */

.vfes-ms-content {
  /*.ws10-c-card-discovery-product__image {   
        width: auto; 
    }*/
}

.vfes-ms-content .vfms__hero-btn {
  font-family: "Vodafone",Helvetica,Arial,sans-serif;
  color: #333;
  font-size: 1.125rem;
  font-weight: normal;
}

.vfes-ms-content .slide__content {
  display: flex;
  justify-content: center;
}

.vfes-ms-content .ws10-c-hero-carousel__w-slides {
  height: 26.25rem;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .ws10-c-hero-carousel__w-slides {
    height: 40.625rem;
  }
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .ws10-c-hero-carousel__w-slides {
    height: 25rem;
  }
}

.vfes-ms-content .ws10-c-quick-links__text {
  width: 9.375rem !important;
}

.vfes-ms-content .ws10-c-quick-links__icon {
  border: solid 0.125rem #fff;
  background-color: transparent;
  color: #fff;
  flex-shrink: 0;
  transform: scale(1);
  transition-property: transform;
  transition-duration: .2s;
  transition-timing-function: linear,ease-in;
  transition-delay: 0s;
  margin: 0 auto;
  margin-bottom: 0.3125rem;
}

.vfes-ms-content .ws10-c-quick-links {
  font-size: 1rem;
  padding: 0;
  background: linear-gradient(to right, #820000 0%, #E60000 50%, #ff0000 100%);
}

.vfes-ms-content .ws10-c-quick-links .ws10-o-wrapper {
  padding-right: 0;
  padding-left: 0;
}

.vfes-ms-content .ws10-c-quick-links .ws10-c-quick-links__list-item {
  flex: 0;
  padding: 1rem 0;
}

.vfes-ms-content .vfms-outstandings__container {
  background-color: #F4F4F4;
}

.vfes-ms-content .ws10-c-cards-discovery-standard picture {
  display: block;
}

.vfes-ms-content .vfms-outstanding__item {
  justify-content: stretch;
}

.vfes-ms-content .ws10-c-cards-discovery-standard--large {
  height: 100%;
}

.vfes-ms-content .vfms-why__container {
  background-color: #F4F4F4;
}

.vfes-ms-content .vfms-why__container-tabs {
  background-color: #ffffff;
}

.vfes-ms-content .vfms__card-height {
  height: 100%;
}

.vfes-ms-content .vfms__card-width {
  width: 15.625rem;
}

@media (min-width: 48rem) and (max-width: 64rem) {
  .vfes-ms-content .vfms__card-width {
    width: 17.5rem;
    margin: 0 auto;
  }
}

@media screen and (min-width: 64.0625rem) {
  .vfes-ms-content .vfms__card-width {
    width: 100%;
    margin: 0 auto;
  }
}

.vfes-ms-content .vfms__card-container {
  width: 100%;
  -webkit-overflow-scrolling: "touch";
  overflow: none;
  overflow-x: auto;
  display: block;
}

@media screen and (min-width: 64.0625rem) {
  .vfes-ms-content .vfms__card-container {
    overflow: none;
    overflow-x: auto;
    display: block;
  }
}

@media screen and (min-width: 87.5rem) {
  .vfes-ms-content .vfms__card-container {
    overflow-x: hidden;
    overflow-y: hidden;
  }
}

.vfes-ms-content .vfms__card-container-content {
  width: 50rem;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-rows: auto;
  grid-gap: 1rem;
  overflow: hidden;
  position: relative;
}

@media (min-width: 48rem) and (max-width: 64rem) {
  .vfes-ms-content .vfms__card-container-content {
    width: 59.375rem;
  }
}

@media screen and (min-width: 64.0625rem) {
  .vfes-ms-content .vfms__card-container-content {
    width: 100%;
  }
}

.vfes-ms-content .vfms__card-container-content .vfms__card-item {
  padding: .5rem;
  justify-content: stretch;
}

.vfes-ms-content .ws10-c-card-discovery-product--large {
  height: 100%;
}

.vfes-ms-content .vfms-wanted__container {
  background-color: #F4F4F4;
}

.vfes-ms-content .vfms-discovery-product-search {
  padding: 0.75rem 1.25rem;
}

.vfes-ms-content .ws10-c-card-discovery-product-search__title {
  min-height: 6.25rem;
}

.vfes-ms-content .ws10-c-tabs-filter__tablist {
  padding: 1.25rem;
}

.vfes-ms-content .vfms__wanted-btn {
  text-align: center !important;
  font-size: 1.125rem !important;
}

.vfes-ms-content .vfms-benefits__container {
  background-color: #F4F4F4;
}

/*------------------------------
	01 IMPORTS OF SETTINGS FILES
--------------------------------*/
/*--------------------------------------------
	Don't use for production [START]
---------------------------------------------*/
/*
// Include stylesheet of components for accessibility test.
// Default value "false"
$include-scss-accessibility: false !default;

// Include stylesheet for accessibility test
// Default Value "false"
$include-scss-debug: false !default;

//Include stylesheet of tools color-contrast
// Default Value "false"
$include-scss-color-contrast: false !default;
*/
/*--------------------------------------------
	Don't use for production [END]
---------------------------------------------*/
/*
$font-weight-thin: 100;
$font-weight-light: 300;
$font-weight-normal: 400;
$font-weight-regular: 500;
$font-weight-bold: 700;
*/
/**
 * RESPOSIVE SPACINGS ( see _utils.mva10.spacing-responsive )
 */
/*------------------------------
	2 TOOLS
--------------------------------*/

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
