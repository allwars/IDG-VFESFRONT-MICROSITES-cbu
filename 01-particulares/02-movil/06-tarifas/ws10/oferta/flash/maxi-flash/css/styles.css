/**
 * Vodafone Reboot Framework: Version 2.6.2. Generation Date: 2020-11-06T13:53:14.510Z
 */

.vfes-ms-content .ws10-c-form__radio:checked + .ws10-c-form__label::after {
  background-color: #007c92;
}

.vfes-ms-content .wfms__legal {
  font-size: 0.875rem;
}

.vfes-ms-content .vfms-link {
  color: #E60000;
}

.vfes-ms-content .vfms__banner-terminal {
  display: flex;
}

.vfes-ms-content .vf-banner {
  position: relative;
  background-image:  url('../img/banner/maxi-tablet.png?v=8fa3ef0d133c9b576225dc3eba72c76e');
  background-size: cover;
  background-repeat: no-repeat;
  background-position: left;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vf-banner {
    background-position: center;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner {
    background-image:  url('../img/banner/maxi-deskop.png?v=f16ef3a3ce390d08d82a3bed17ff61b0');
    background-attachment: fixed;
    background-position-y: -9.375rem;
  }
}

.vfes-ms-content .vf-banner__textcontainer {
  padding-top: 1.25rem;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-banner__textcontainer {
    padding-top: 3.125rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner__textcontainer {
    padding-top: 6.125rem;
    padding-bottom: 6.125rem;
  }
}

.vfes-ms-content .vf-mobile__animation {
  padding: 1.875rem 0;
  position: relative;
}

.vfes-ms-content .vf-mobile__animation--img {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
}

.vfes-ms-content .vf-mobile__apps {
  overflow: hidden;
  min-height: 18.125rem;
  position: relative;
  display: flex;
  align-items: center;
  box-sizing: border-box;
}

.vfes-ms-content .vf-mobile__apps:before {
  content: "";
  position: absolute;
  max-height: 17.5rem;
  top: 1.25rem;
  left: 0;
  right: -100%;
  bottom: 0;
  -webkit-animation: slide 20s linear infinite;
          animation: slide 20s linear infinite;
  background-size: cover;
  background:  url('../img/section-mobile/appilimitada.png?v=22ce521d4269c39a7e224ece1bbdf98a') 0 100%;
}

@-webkit-keyframes slide {
  100% {
    transform: translateX(-50%);
  }
}

.vfes-ms-content .vf-terminal {
  border-radius: 0.375rem;
  overflow: hidden;
  flex-direction: column;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-terminal {
    flex-direction: row;
  }
}

.vfes-ms-content .vf-terminal__content {
  order: 2;
  text-align: center;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-terminal__content {
    order: 1;
    text-align: left;
  }
}

.vfes-ms-content .vf-terminal__imgdesktop {
  display: none;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-terminal__imgdesktop {
    display: block;
    order: 2;
  }
}

.vfes-ms-content .vf-terminal__imgmobile {
  order: 1;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-terminal__imgmobile {
    display: none;
  }
}

.vfes-ms-content .vf-tv__flexdirection {
  flex-direction: column;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-tv__flexdirection {
    flex-direction: row;
  }
}

.vfes-ms-content .vf-fiber__flexdirection {
  flex-direction: column;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-fiber__flexdirection {
    flex-direction: row;
  }
}

.vfes-ms-content .vf-superwifi__flexdirection {
  flex-direction: column;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-superwifi__flexdirection {
    flex-direction: row-reverse;
  }
}

.vfes-ms-content .vf-superwifi__img {
  max-width: 18.75rem;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-superwifi__img {
    max-width: 28.125rem;
  }
}

.vfes-ms-content .vf-form {
  margin-top: 0.625rem;
  padding: 0 0 0 0;
}

.vfes-ms-content .vf-form__box {
  width: initial;
}

.vfes-ms-content .vf-form__box:first-child {
  padding-right: 1.25rem;
}

.vfes-ms-content .vf-timeline .ws10-c-timeline-steps__title {
  max-width: initial;
}

.vfes-ms-content .vf-timeline .ws10-c-timeline-steps__item {
  min-width: 20%;
}

.vfes-ms-content .vf-ticket {
  position: relative;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vf-ticket {
    position: absolute;
    right: 1rem;
    padding-top: 4.375rem;
  }
}

.vfes-ms-content .vf-ticket__floating {
  position: -webkit-sticky;
  position: sticky;
  width: inherit;
  width: 100%;
  max-width: 25rem;
  padding-top: 0.625rem;
}

.vfes-ms-content .vf-ticket__opacity0 {
  opacity: 0;
}

.vfes-ms-content .vf-sticky {
  position: fixed;
  z-index: 1;
  bottom: 0;
  width: 100%;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-sticky {
    display: none;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-block {
    display: block;
  }
}

.vfes-ms-content .ws10-c-card-addons {
  min-height: 15.875rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .ws10-c-card-addons {
    min-height: 14.375rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .ws10-c-card-addons {
    min-height: 13rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9taWNyby5zY3NzIiwic3R5bGVzLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQU1JLHlCQUF5QjtBQ0w3Qjs7QUREQTtFQVNJLG1CQUFlO0FDSm5COztBRExBO0VBWUksY0FBYTtBQ0hqQjs7QURUQTtFQWlCSSxhQUFhO0FDSmpCOztBRGJBO0VBdUJJLGtCQUFrQjtFQUNsQiwwRkFBc0Q7RUFDdEQsc0JBQXNCO0VBQ3RCLDRCQUE0QjtFQUM1Qix5QkFBeUI7QUNON0I7O0FET0k7RUE1Qko7SUE2Qk0sMkJBQTJCO0VDSC9CO0FBQ0Y7O0FESUk7RUEvQko7SUFnQ00sMEZBQXNEO0lBQ3RELDRCQUE0QjtJQUM1QixnQ0FBNkI7RUNBakM7QUFDRjs7QURuQ0E7RUFxQ00sb0JBQWlCO0FDRXZCOztBRERRO0VBdENSO0lBdUNVLHFCQUFpQjtFQ0t6QjtBQUNGOztBREpRO0VBekNSO0lBMENRLHFCQUFpQjtJQUNqQix3QkFBb0I7RUNRMUI7QUFDRjs7QURwREE7RUFpRE0sbUJBQWU7RUFDZixrQkFBa0I7QUNPeEI7O0FEekRBO0VBb0RRLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sT0FBTztFQUNQLFFBQVE7RUFDUixTQUFTO0VBQ1QsWUFBWTtBQ1NwQjs7QURsRUE7RUE2RE0sZ0JBQWdCO0VBQ2hCLHFCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixzQkFBc0I7QUNTNUI7O0FEM0VBO0VBb0VRLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsbUJBQWlCO0VBQ2pCLFlBQVM7RUFDVCxPQUFPO0VBQ1AsWUFBWTtFQUNaLFNBQVM7RUFDVCw0Q0FBb0M7VUFBcEMsb0NBQW9DO0VBQ3BDLHNCQUFzQjtFQUN0QixvR0FBZ0U7QUNXeEU7O0FEUk07RUFDRTtJQUNFLDJCQUEyQjtFQ1duQztBQUNGOztBRDlGQTtFQXlGSSx1QkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLHNCQUFzQjtBQ1MxQjs7QURSSTtFQTVGSjtJQTZGTSxtQkFBbUI7RUNZdkI7QUFDRjs7QUQxR0E7RUFnR00sUUFBUTtFQUNSLGtCQUFrQjtBQ2N4Qjs7QURiTTtFQWxHTjtJQW1HUSxRQUFRO0lBQ1IsZ0JBQWdCO0VDaUJ0QjtBQUNGOztBRHRIQTtFQXdHTSxhQUFhO0FDa0JuQjs7QURqQk07RUF6R047SUEwR1EsY0FBYztJQUNkLFFBQVE7RUNxQmQ7QUFDRjs7QURqSUE7RUErR00sUUFBUTtBQ3NCZDs7QURyQk07RUFoSE47SUFpSFEsYUFBYTtFQ3lCbkI7QUFDRjs7QUQzSUE7RUF1SE0sc0JBQXNCO0FDd0I1Qjs7QUR2Qk07RUF4SE47SUF5SFEsbUJBQW1CO0VDMkJ6QjtBQUNGOztBRHJKQTtFQWdJTSxzQkFBc0I7QUN5QjVCOztBRHhCTTtFQWpJTjtJQWtJUSxtQkFBbUI7RUM0QnpCO0FBQ0Y7O0FEL0pBO0VBeUlNLHNCQUFzQjtBQzBCNUI7O0FEekJNO0VBMUlOO0lBMklRLDJCQUEyQjtFQzZCakM7QUFDRjs7QUR6S0E7RUErSU0sbUJBQWdCO0FDOEJ0Qjs7QUQ3Qk07RUFoSk47SUFpSlEsb0JBQWdCO0VDaUN0QjtBQUNGOztBRG5MQTtFQXNKSSxvQkFBZ0I7RUFDaEIsZ0JBQWU7QUNpQ25COztBRHhMQTtFQXlKTSxjQUFjO0FDbUNwQjs7QUQ1TEE7RUEySlEsc0JBQW1CO0FDcUMzQjs7QURoTUE7RUFpS00sa0JBQWtCO0FDbUN4Qjs7QURwTUE7RUFvS00sY0FBYztBQ29DcEI7O0FEeE1BO0VBd0tJLGtCQUFrQjtBQ29DdEI7O0FEbENJO0VBMUtKO0lBMktNLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gscUJBQWlCO0VDc0NyQjtBQUNGOztBRHBOQTtFQWlMTSx3QkFBZ0I7RUFBaEIsZ0JBQWdCO0VBQ2hCLGNBQWM7RUFDZCxXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLHFCQUFpQjtBQ3VDdkI7O0FENU5BO0VBeUxNLFVBQVU7QUN1Q2hCOztBRGhPQTtFQThMSSxlQUFlO0VBQ2YsVUFBVTtFQUNWLFNBQVM7RUFDVCxXQUFXO0FDc0NmOztBRHJDSTtFQWxNSjtJQW1NTSxhQUFhO0VDeUNqQjtBQUNGOztBRHRDSTtFQXZNSjtJQXdNTSxjQUFjO0VDMENsQjtBQUNGOztBRG5QQTtFQTRNSSxxQkFBaUI7QUMyQ3JCOztBRDFDSTtFQTdNSjtJQThNTSxxQkFBaUI7RUM4Q3JCO0FBQ0Y7O0FEN0NJO0VBaE5KO0lBaU5NLGlCQUFpQjtFQ2lEckI7QUFDRjs7QUFFQSxpa1lBQWlrWTtBQUNqa1ksa2tZQUFra1kiLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50e1xuXG5cbiAgLy8gY2xhc2UgZ2Vuw6lyaWNhIGFycmVnbG8gcmFkaW8gYnV0dG9uc1xuXG4gIC53czEwLWMtZm9ybV9fcmFkaW86Y2hlY2tlZCsud3MxMC1jLWZvcm1fX2xhYmVsOjphZnRlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2M5MjtcbiAgfVxuICAud2Ztc19fbGVnYWx7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICB9XG4gIC52Zm1zLWxpbmt7XG4gICAgY29sb3I6I0U2MDAwMDtcbiAgfVxuICAvL2Jhbm5lciB0ZXJtaW5hbFxuXG4gIC52Zm1zX19iYW5uZXItdGVybWluYWx7XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxuXG4gIC8vIGNsYXNlIGdlbsOpcmljYVxuXG4gIC52Zi1iYW5uZXJ7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9iYW5uZXIvbWF4aS10YWJsZXQucG5nXCIpO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBsZWZ0O1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvYmFubmVyL21heGktZGVza29wLnBuZ1wiKTtcbiAgICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uLXk6IC0xNTBweDtcbiAgICB9XG4gICAgJl9fdGV4dGNvbnRhaW5lciB7XG4gICAgICBwYWRkaW5nLXRvcDogMjBweDtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgICBwYWRkaW5nLXRvcDogNTBweDtcbiAgICAgICAgfVxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICBwYWRkaW5nLXRvcDogOThweDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDk4cHg7XG4gICAgICAgIH1cbiAgICB9XG4gIH1cbiAgLnZmLW1vYmlsZXtcbiAgICAmX19hbmltYXRpb257XG4gICAgICBwYWRkaW5nOiAzMHB4IDA7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAmLS1pbWd7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBtYXJnaW46IGF1dG87XG4gICAgICB9XG4gICAgfVxuICAgICZfX2FwcHN7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgbWluLWhlaWdodDogMjkwcHg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAmOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbWF4LWhlaWdodDogMjgwcHg7XG4gICAgICAgIHRvcDogMjBweDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgcmlnaHQ6IC0xMDAlO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGFuaW1hdGlvbjogc2xpZGUgMjBzIGxpbmVhciBpbmZpbml0ZTtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL3NlY3Rpb24tbW9iaWxlL2FwcGlsaW1pdGFkYS5wbmdcIikgMCAxMDAlO1xuICAgICAgfVxuXG4gICAgICBALXdlYmtpdC1rZXlmcmFtZXMgc2xpZGUge1xuICAgICAgICAxMDAlIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgIH1cbiAgfVxuICAudmYtdGVybWluYWwge1xuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgfVxuICAgICZfX2NvbnRlbnQge1xuICAgICAgb3JkZXI6IDI7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgICBvcmRlcjogMTtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIH1cbiAgICB9XG4gICAgJl9faW1nZGVza3RvcCB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG9yZGVyOiAyO1xuICAgICAgfVxuICAgIH1cbiAgICAmX19pbWdtb2JpbGUge1xuICAgICAgb3JkZXI6IDE7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAudmYtdHZ7XG4gICAgJl9fZmxleGRpcmVjdGlvbntcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCl7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICB9XG5cbiAgICB9XG4gIH1cbiAgLnZmLWZpYmVye1xuICAgICZfX2ZsZXhkaXJlY3Rpb257XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpe1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgfVxuXG4gICAgfVxuICB9XG4gIC52Zi1zdXBlcndpZml7XG4gICAgJl9fZmxleGRpcmVjdGlvbntcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCl7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbiAgICAgIH1cbiAgICB9XG4gICAgJl9faW1ne1xuICAgICAgbWF4LXdpZHRoOiAzMDBweDtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgIG1heC13aWR0aDogNDUwcHg7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIC52Zi1mb3Jte1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgcGFkZGluZzowIDAgMCAwO1xuICAgICZfX2JveHtcbiAgICAgIHdpZHRoOiBpbml0aWFsO1xuICAgICAgJjpmaXJzdC1jaGlsZHtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMjBweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLnZmLXRpbWVsaW5le1xuICAgIC53czEwLWMtdGltZWxpbmUtc3RlcHNfX3RpdGxle1xuICAgICAgbWF4LXdpZHRoOiBpbml0aWFsO1xuICAgIH1cbiAgICAud3MxMC1jLXRpbWVsaW5lLXN0ZXBzX19pdGVte1xuICAgICAgbWluLXdpZHRoOiAyMCU7XG4gICAgfVxuICB9XG4gIC52Zi10aWNrZXR7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpe1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IDFyZW07XG4gICAgICBwYWRkaW5nLXRvcDogNzBweDtcbiAgICB9XG5cbiAgICAmX19mbG9hdGluZ3tcbiAgICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgICB3aWR0aDogaW5oZXJpdDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgIH1cblxuICAgICZfX29wYWNpdHkwe1xuICAgICAgb3BhY2l0eTogMDtcbiAgICB9XG5cbiAgfVxuICAudmYtc3RpY2t5IHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgei1pbmRleDogMTtcbiAgICBib3R0b206IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG4gIC52Zi1ibG9jayB7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbiAgfVxuICAud3MxMC1jLWNhcmQtYWRkb25zIHtcbiAgICBtaW4taGVpZ2h0OiAyNTRweDtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgbWluLWhlaWdodDogMjMwcHg7XG4gICAgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICBtaW4taGVpZ2h0OiAyMDhweDtcbiAgICB9XG4gIH1cbn0iLCIudmZlcy1tcy1jb250ZW50IC53czEwLWMtZm9ybV9fcmFkaW86Y2hlY2tlZCArIC53czEwLWMtZm9ybV9fbGFiZWw6OmFmdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2M5Mjtcbn1cblxuLnZmZXMtbXMtY29udGVudCAud2Ztc19fbGVnYWwge1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmbXMtbGluayB7XG4gIGNvbG9yOiAjRTYwMDAwO1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zm1zX19iYW5uZXItdGVybWluYWwge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1iYW5uZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9iYW5uZXIvbWF4aS10YWJsZXQucG5nXCIpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBsZWZ0O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi1iYW5uZXIge1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi1iYW5uZXIge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9iYW5uZXIvbWF4aS1kZXNrb3AucG5nXCIpO1xuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbi15OiAtMTUwcHg7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtYmFubmVyX190ZXh0Y29udGFpbmVyIHtcbiAgcGFkZGluZy10b3A6IDIwcHg7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLWJhbm5lcl9fdGV4dGNvbnRhaW5lciB7XG4gICAgcGFkZGluZy10b3A6IDUwcHg7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmYtYmFubmVyX190ZXh0Y29udGFpbmVyIHtcbiAgICBwYWRkaW5nLXRvcDogOThweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogOThweDtcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1tb2JpbGVfX2FuaW1hdGlvbiB7XG4gIHBhZGRpbmc6IDMwcHggMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1tb2JpbGVfX2FuaW1hdGlvbi0taW1nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIG1hcmdpbjogYXV0bztcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtbW9iaWxlX19hcHBzIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWluLWhlaWdodDogMjkwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtbW9iaWxlX19hcHBzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbWF4LWhlaWdodDogMjgwcHg7XG4gIHRvcDogMjBweDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IC0xMDAlO1xuICBib3R0b206IDA7XG4gIGFuaW1hdGlvbjogc2xpZGUgMjBzIGxpbmVhciBpbmZpbml0ZTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL3NlY3Rpb24tbW9iaWxlL2FwcGlsaW1pdGFkYS5wbmdcIikgMCAxMDAlO1xufVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgc2xpZGUge1xuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtdGVybWluYWwge1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLXRlcm1pbmFsIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLXRlcm1pbmFsX19jb250ZW50IHtcbiAgb3JkZXI6IDI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmYtdGVybWluYWxfX2NvbnRlbnQge1xuICAgIG9yZGVyOiAxO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtdGVybWluYWxfX2ltZ2Rlc2t0b3Age1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi10ZXJtaW5hbF9faW1nZGVza3RvcCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgb3JkZXI6IDI7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtdGVybWluYWxfX2ltZ21vYmlsZSB7XG4gIG9yZGVyOiAxO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi10ZXJtaW5hbF9faW1nbW9iaWxlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLXR2X19mbGV4ZGlyZWN0aW9uIHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmYtdHZfX2ZsZXhkaXJlY3Rpb24ge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIH1cbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtZmliZXJfX2ZsZXhkaXJlY3Rpb24ge1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi1maWJlcl9fZmxleGRpcmVjdGlvbiB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1zdXBlcndpZmlfX2ZsZXhkaXJlY3Rpb24ge1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi1zdXBlcndpZmlfX2ZsZXhkaXJlY3Rpb24ge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1zdXBlcndpZmlfX2ltZyB7XG4gIG1heC13aWR0aDogMzAwcHg7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLXN1cGVyd2lmaV9faW1nIHtcbiAgICBtYXgtd2lkdGg6IDQ1MHB4O1xuICB9XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLWZvcm0ge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBwYWRkaW5nOiAwIDAgMCAwO1xufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi1mb3JtX19ib3gge1xuICB3aWR0aDogaW5pdGlhbDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtZm9ybV9fYm94OmZpcnN0LWNoaWxkIHtcbiAgcGFkZGluZy1yaWdodDogMjBweDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtdGltZWxpbmUgLndzMTAtYy10aW1lbGluZS1zdGVwc19fdGl0bGUge1xuICBtYXgtd2lkdGg6IGluaXRpYWw7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLXRpbWVsaW5lIC53czEwLWMtdGltZWxpbmUtc3RlcHNfX2l0ZW0ge1xuICBtaW4td2lkdGg6IDIwJTtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtdGlja2V0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAudmZlcy1tcy1jb250ZW50IC52Zi10aWNrZXQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMXJlbTtcbiAgICBwYWRkaW5nLXRvcDogNzBweDtcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC52Zi10aWNrZXRfX2Zsb2F0aW5nIHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgd2lkdGg6IGluaGVyaXQ7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDQwMHB4O1xuICBwYWRkaW5nLXRvcDogMTBweDtcbn1cblxuLnZmZXMtbXMtY29udGVudCAudmYtdGlja2V0X19vcGFjaXR5MCB7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQgLnZmLXN0aWNreSB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgei1pbmRleDogMTtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAudmYtc3RpY2t5IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gIC52ZmVzLW1zLWNvbnRlbnQgLnZmLWJsb2NrIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuXG4udmZlcy1tcy1jb250ZW50IC53czEwLWMtY2FyZC1hZGRvbnMge1xuICBtaW4taGVpZ2h0OiAyNTRweDtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgLnZmZXMtbXMtY29udGVudCAud3MxMC1jLWNhcmQtYWRkb25zIHtcbiAgICBtaW4taGVpZ2h0OiAyMzBweDtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAudmZlcy1tcy1jb250ZW50IC53czEwLWMtY2FyZC1hZGRvbnMge1xuICAgIG1pbi1oZWlnaHQ6IDIwOHB4O1xuICB9XG59XG5cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljM1I1YkdWekxtTnpjeUlzSW5OdmRYSmpaWE1pT2xzaWMzUjViR1Z6TG5OamMzTWlMQ0pmYldsamNtOHVjMk56Y3lKZExDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZMeUJCY1hWcElITmxJSEIxWldSbGJpQnBiWEJ2Y25SaGNpQnNhV0p5WlhMRHJXRnpJR1Y0ZEdWeWJtRnpYRzR2THlCbGFqb2dRR2x0Y0c5eWRDQW5MM1J2YjJ4ekwyWjFibU4wYVc5dWN5YzdYRzVjYmtCcGJYQnZjblFnWENKdGFXTnliMXdpT3lJc0lpOHZJRU5UVXlCa1pXd2diV2xqY205emFYUmxYRzR1ZG1abGN5MXRjeTFqYjI1MFpXNTBlMXh1WEc1Y2JpQWdMeThnWTJ4aGMyVWdaMlZ1dzZseWFXTmhJR0Z5Y21WbmJHOGdjbUZrYVc4Z1luVjBkRzl1YzF4dVhHNGdJQzUzY3pFd0xXTXRabTl5YlY5ZmNtRmthVzg2WTJobFkydGxaQ3N1ZDNNeE1DMWpMV1p2Y20xZlgyeGhZbVZzT2pwaFpuUmxjaUI3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJekF3TjJNNU1qdGNiaUFnZlZ4dUlDQXVkMlp0YzE5ZmJHVm5ZV3g3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF4TkhCNE8xeHVJQ0I5WEc0Z0lDNTJabTF6TFd4cGJtdDdYRzRnSUNBZ1kyOXNiM0k2STBVMk1EQXdNRHRjYmlBZ2ZWeHVJQ0F2TDJKaGJtNWxjaUIwWlhKdGFXNWhiRnh1WEc0Z0lDNTJabTF6WDE5aVlXNXVaWEl0ZEdWeWJXbHVZV3g3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdmVnh1WEc0Z0lDOHZJR05zWVhObElHZGxic09wY21sallWeHVYRzRnSUM1MlppMWlZVzV1WlhKN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJSFZ5YkNoY0lpNHVMMmx0Wnk5aVlXNXVaWEl2YldGNGFTMTBZV0pzWlhRdWNHNW5YQ0lwTzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dZMjkyWlhJN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkMxeVpYQmxZWFE2SUc1dkxYSmxjR1ZoZER0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFhCdmMybDBhVzl1T2lCc1pXWjBPMXh1SUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJRFkwTUhCNEtTQjdYRzRnSUNBZ0lDQmlZV05yWjNKdmRXNWtMWEJ2YzJsMGFXOXVPaUJqWlc1MFpYSTdYRzRnSUNBZ2ZWeHVJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklEazNNSEI0S1NCN1hHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29YQ0l1TGk5cGJXY3ZZbUZ1Ym1WeUwyMWhlR2t0WkdWemEyOXdMbkJ1WjF3aUtUdGNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUXRZWFIwWVdOb2JXVnVkRG9nWm1sNFpXUTdYRzRnSUNBZ0lDQmlZV05yWjNKdmRXNWtMWEJ2YzJsMGFXOXVMWGs2SUMweE5UQndlRHRjYmlBZ0lDQjlYRzRnSUNBZ0psOWZkR1Y0ZEdOdmJuUmhhVzVsY2lCN1hHNGdJQ0FnSUNCd1lXUmthVzVuTFhSdmNEb2dNakJ3ZUR0Y2JpQWdJQ0FnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dOelk0Y0hncElIdGNiaUFnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ05UQndlRHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTVOekJ3ZUNrZ2UxeHVJQ0FnSUNBZ0lDQndZV1JrYVc1bkxYUnZjRG9nT1Rod2VEdGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklEazRjSGc3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNiaUFnTG5abUxXMXZZbWxzWlh0Y2JpQWdJQ0FtWDE5aGJtbHRZWFJwYjI1N1hHNGdJQ0FnSUNCd1lXUmthVzVuT2lBek1IQjRJREE3WEc0Z0lDQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lDQWdJQ0FtTFMxcGJXZDdYRzRnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQWdJQ0FnZEc5d09pQXdPMXh1SUNBZ0lDQWdJQ0JzWldaME9pQXdPMXh1SUNBZ0lDQWdJQ0J5YVdkb2REb2dNRHRjYmlBZ0lDQWdJQ0FnWW05MGRHOXRPaUF3TzF4dUlDQWdJQ0FnSUNCdFlYSm5hVzQ2SUdGMWRHODdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0FnSUNaZlgyRndjSE43WEc0Z0lDQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1SUNBZ0lDQWdiV2x1TFdobGFXZG9kRG9nTWprd2NIZzdYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JpQWdJQ0FnSUdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdYRzRnSUNBZ0lDQW1PbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lDQWdiV0Y0TFdobGFXZG9kRG9nTWpnd2NIZzdYRzRnSUNBZ0lDQWdJSFJ2Y0RvZ01qQndlRHRjYmlBZ0lDQWdJQ0FnYkdWbWREb2dNRHRjYmlBZ0lDQWdJQ0FnY21sbmFIUTZJQzB4TURBbE8xeHVJQ0FnSUNBZ0lDQmliM1IwYjIwNklEQTdYRzRnSUNBZ0lDQWdJR0Z1YVcxaGRHbHZiam9nYzJ4cFpHVWdNakJ6SUd4cGJtVmhjaUJwYm1acGJtbDBaVHRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkMxemFYcGxPaUJqYjNabGNqdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nZFhKc0tGd2lMaTR2YVcxbkwzTmxZM1JwYjI0dGJXOWlhV3hsTDJGd2NHbHNhVzFwZEdGa1lTNXdibWRjSWlrZ01DQXhNREFsTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCQUxYZGxZbXRwZEMxclpYbG1jbUZ0WlhNZ2MyeHBaR1VnZTF4dUlDQWdJQ0FnSUNBeE1EQWxJSHRjYmlBZ0lDQWdJQ0FnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWZ29MVFV3SlNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lIMWNiaUFnZlZ4dUlDQXVkbVl0ZEdWeWJXbHVZV3dnZTF4dUlDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklEWndlRHRjYmlBZ0lDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHVJQ0FnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYRzRnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dOelk0Y0hncElIdGNiaUFnSUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCeWIzYzdYRzRnSUNBZ2ZWeHVJQ0FnSUNaZlgyTnZiblJsYm5RZ2UxeHVJQ0FnSUNBZ2IzSmtaWEk2SURJN1hHNGdJQ0FnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTNOamh3ZUNrZ2UxeHVJQ0FnSUNBZ0lDQnZjbVJsY2pvZ01UdGNiaUFnSUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nYkdWbWREdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnSmw5ZmFXMW5aR1Z6YTNSdmNDQjdYRzRnSUNBZ0lDQmthWE53YkdGNU9pQnViMjVsTzF4dUlDQWdJQ0FnUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxcGJpMTNhV1IwYURvZ056WTRjSGdwSUh0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdJQ0FnSUc5eVpHVnlPaUF5TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQW1YMTlwYldkdGIySnBiR1VnZTF4dUlDQWdJQ0FnYjNKa1pYSTZJREU3WEc0Z0lDQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBM05qaHdlQ2tnZTF4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dUlDQXVkbVl0ZEhaN1hHNGdJQ0FnSmw5ZlpteGxlR1JwY21WamRHbHZibnRjYmlBZ0lDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0N1hHNGdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTNOamh3ZUNsN1hHNGdJQ0FnSUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCeWIzYzdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQjlYRzRnSUgxY2JpQWdMblptTFdacFltVnllMXh1SUNBZ0lDWmZYMlpzWlhoa2FYSmxZM1JwYjI1N1hHNGdJQ0FnSUNCbWJHVjRMV1JwY21WamRHbHZiam9nWTI5c2RXMXVPMXh1SUNBZ0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nT1Rjd2NIZ3BlMXh1SUNBZ0lDQWdJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2djbTkzTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnZlZ4dUlDQjlYRzRnSUM1MlppMXpkWEJsY25kcFptbDdYRzRnSUNBZ0psOWZabXhsZUdScGNtVmpkR2x2Ym50Y2JpQWdJQ0FnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYRzRnSUNBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUE1TnpCd2VDbDdYRzRnSUNBZ0lDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQnliM2N0Y21WMlpYSnpaVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUNBZ0psOWZhVzFuZTF4dUlDQWdJQ0FnYldGNExYZHBaSFJvT2lBek1EQndlRHRjYmlBZ0lDQWdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURrM01IQjRLU0I3WEc0Z0lDQWdJQ0FnSUcxaGVDMTNhV1IwYURvZ05EVXdjSGc3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNGdJQzUyWmkxbWIzSnRlMXh1SUNBZ0lHMWhjbWRwYmkxMGIzQTZJREV3Y0hnN1hHNGdJQ0FnY0dGa1pHbHVaem93SURBZ01DQXdPMXh1SUNBZ0lDWmZYMkp2ZUh0Y2JpQWdJQ0FnSUhkcFpIUm9PaUJwYm1sMGFXRnNPMXh1SUNBZ0lDQWdKanBtYVhKemRDMWphR2xzWkh0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nTWpCd2VEdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYmlBZ0xuWm1MWFJwYldWc2FXNWxlMXh1SUNBZ0lDNTNjekV3TFdNdGRHbHRaV3hwYm1VdGMzUmxjSE5mWDNScGRHeGxlMXh1SUNBZ0lDQWdiV0Y0TFhkcFpIUm9PaUJwYm1sMGFXRnNPMXh1SUNBZ0lIMWNiaUFnSUNBdWQzTXhNQzFqTFhScGJXVnNhVzVsTFhOMFpYQnpYMTlwZEdWdGUxeHVJQ0FnSUNBZ2JXbHVMWGRwWkhSb09pQXlNQ1U3WEc0Z0lDQWdmVnh1SUNCOVhHNGdJQzUyWmkxMGFXTnJaWFI3WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1WEc0Z0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nTnpZNGNIZ3BlMXh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lDQWdjbWxuYUhRNklERnlaVzA3WEc0Z0lDQWdJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ056QndlRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQW1YMTltYkc5aGRHbHVaM3RjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ6ZEdsamEzazdYRzRnSUNBZ0lDQjNhV1IwYURvZ2FXNW9aWEpwZER0Y2JpQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUNBZ2JXRjRMWGRwWkhSb09pQTBNREJ3ZUR0Y2JpQWdJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQXhNSEI0TzF4dUlDQWdJSDFjYmx4dUlDQWdJQ1pmWDI5d1lXTnBkSGt3ZTF4dUlDQWdJQ0FnYjNCaFkybDBlVG9nTUR0Y2JpQWdJQ0I5WEc1Y2JpQWdmVnh1SUNBdWRtWXRjM1JwWTJ0NUlIdGNiaUFnSUNCd2IzTnBkR2x2YmpvZ1ptbDRaV1E3WEc0Z0lDQWdlaTFwYm1SbGVEb2dNVHRjYmlBZ0lDQmliM1IwYjIwNklEQTdYRzRnSUNBZ2QybGtkR2c2SURFd01DVTdYRzRnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dPVGN3Y0hncElIdGNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEc0Z0lDQWdmVnh1SUNCOVhHNGdJQzUyWmkxaWJHOWpheUI3WEc0Z0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nT1Rjd2NIZ3BJSHRjYmlBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUgxY2JpQWdmVnh1SUNBdWQzTXhNQzFqTFdOaGNtUXRZV1JrYjI1eklIdGNiaUFnSUNCdGFXNHRhR1ZwWjJoME9pQXlOVFJ3ZUR0Y2JpQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBMk5EQndlQ2tnZTF4dUlDQWdJQ0FnYldsdUxXaGxhV2RvZERvZ01qTXdjSGc3WEc0Z0lDQWdmVnh1SUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJRGszTUhCNEtTQjdYRzRnSUNBZ0lDQnRhVzR0YUdWcFoyaDBPaUF5TURod2VEdGNiaUFnSUNCOVhHNGdJSDFjYm4waVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGRFEwRXNRVUZMUlN4blFrRk1ZeXhEUVV0a0xHMUNRVUZ0UWl4QlFVRkJMRkZCUVZFc1IwRkJReXh0UWtGQmJVSXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRja1FzWjBKQlFXZENMRVZCUVVVc1QwRkJUenREUVVNeFFqczdRVUZRU0N4QlFWRkZMR2RDUVZKakxFTkJVV1FzV1VGQldTeERRVUZCTzBWQlExWXNVMEZCVXl4RlFVRkZMRWxCUVVrN1EwRkRhRUk3TzBGQlZrZ3NRVUZYUlN4blFrRllZeXhEUVZka0xGVkJRVlVzUTBGQlFUdEZRVU5TTEV0QlFVc3NSVUZCUXl4UFFVRlBPME5CUTJRN08wRkJZa2dzUVVGblFrVXNaMEpCYUVKakxFTkJaMEprTEhOQ1FVRnpRaXhEUVVGQk8wVkJRM0JDTEU5QlFVOHNSVUZCUlN4SlFVRkpPME5CUTJRN08wRkJiRUpJTEVGQmMwSkZMR2RDUVhSQ1l5eERRWE5DWkN4VlFVRlZMRU5CUVVFN1JVRkRVaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4blFrRkJaMElzUlVGQlJTeHZRMEZCYjBNN1JVRkRkRVFzWlVGQlpTeEZRVUZGTEV0QlFVczdSVUZEZEVJc2FVSkJRV2xDTEVWQlFVVXNVMEZCVXp0RlFVTTFRaXh0UWtGQmJVSXNSVUZCUlN4SlFVRkpPME5CYlVJeFFqczdRVUZzUWtNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFUVkNka01zUVVGelFrVXNaMEpCZEVKakxFTkJjMEprTEZWQlFWVXNRMEZCUVR0SlFVOU9MRzFDUVVGdFFpeEZRVUZGTEUxQlFVMDdSMEZwUWpsQ096czdRVUZtUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQkwwSjJReXhCUVhOQ1JTeG5Ra0YwUW1Nc1EwRnpRbVFzVlVGQlZTeERRVUZCTzBsQlZVNHNaMEpCUVdkQ0xFVkJRVVVzYjBOQlFXOURPMGxCUTNSRUxIRkNRVUZ4UWl4RlFVRkZMRXRCUVVzN1NVRkROVUlzY1VKQlFYRkNMRVZCUVVVc1RVRkJUVHRIUVZsb1F6czdPMEZCT1VOSUxFRkJiME5KTEdkQ1FYQkRXU3hEUVc5RFdDeDVRa0ZCWlN4RFFVRkRPMFZCUTJZc1YwRkJWeXhGUVVGRkxFbEJRVWs3UTBGUmJFSTdPMEZCVUVjc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFYUkRNME1zUVVGdlEwa3NaMEpCY0VOWkxFTkJiME5ZTEhsQ1FVRmxMRU5CUVVNN1NVRkhXQ3hYUVVGWExFVkJRVVVzU1VGQlNUdEhRVTEwUWpzN08wRkJTa2NzVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVhwRE0wTXNRVUZ2UTBrc1owSkJjRU5aTEVOQmIwTllMSGxDUVVGbExFTkJRVU03U1VGTllpeFhRVUZYTEVWQlFVVXNTVUZCU1R0SlFVTnFRaXhqUVVGakxFVkJRVVVzU1VGQlNUdEhRVVYyUWpzN08wRkJOME5NTEVGQlowUkpMR2RDUVdoRVdTeERRV2RFV0N4eFFrRkJWeXhEUVVGQk8wVkJRMVlzVDBGQlR5eEZRVUZGTEUxQlFVMDdSVUZEWml4UlFVRlJMRVZCUVVVc1VVRkJVVHREUVZOdVFqczdRVUV6UkV3c1FVRnRSRTBzWjBKQmJrUlZMRU5CYlVSVUxEQkNRVUZMTEVOQlFVRTdSVUZEU2l4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeEhRVUZITEVWQlFVVXNRMEZCUXp0RlFVTk9MRWxCUVVrc1JVRkJSU3hEUVVGRE8wVkJRMUFzUzBGQlN5eEZRVUZGTEVOQlFVTTdSVUZEVWl4TlFVRk5MRVZCUVVVc1EwRkJRenRGUVVOVUxFMUJRVTBzUlVGQlJTeEpRVUZKTzBOQlEySTdPMEZCTVVSUUxFRkJORVJKTEdkQ1FUVkVXU3hEUVRSRVdDeG5Ra0ZCVFN4RFFVRkJPMFZCUTB3c1VVRkJVU3hGUVVGRkxFMUJRVTA3UlVGRGFFSXNWVUZCVlN4RlFVRkZMRXRCUVVzN1JVRkRha0lzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1QwRkJUeXhGUVVGRkxFbEJRVWs3UlVGRFlpeFhRVUZYTEVWQlFVVXNUVUZCVFR0RlFVTnVRaXhWUVVGVkxFVkJRVVVzVlVGQlZUdERRVzlDZGtJN08wRkJkRVpNTEVGQmJVVk5MR2RDUVc1RlZTeERRVFJFV0N4blFrRkJUU3hCUVU5S0xFOUJRVThzUTBGQlF6dEZRVU5RTEU5QlFVOHNSVUZCUlN4RlFVRkZPMFZCUTFnc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNWVUZCVlN4RlFVRkZMRXRCUVVzN1JVRkRha0lzUjBGQlJ5eEZRVUZGTEVsQlFVazdSVUZEVkN4SlFVRkpMRVZCUVVVc1EwRkJRenRGUVVOUUxFdEJRVXNzUlVGQlJTeExRVUZMTzBWQlExb3NUVUZCVFN4RlFVRkZMRU5CUVVNN1JVRkRWQ3hUUVVGVExFVkJRVVVzZVVKQlFYbENPMFZCUTNCRExHVkJRV1VzUlVGQlJTeExRVUZMTzBWQlEzUkNMRlZCUVZVc1JVRkJSU3cyUTBGQk5rTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1NVRkJTVHREUVVOcVJUczdRVUZGUkN4clFrRkJhMElzUTBGQmJFSXNTMEZCYTBJN1JVRkRhRUlzU1VGQlNUdEpRVU5HTEZOQlFWTXNSVUZCUlN4blFrRkJaMEk3T3pzN1FVRnNSbkpETEVGQmQwWkZMR2RDUVhoR1l5eERRWGRHWkN4WlFVRlpMRU5CUVVNN1JVRkRXQ3hoUVVGaExFVkJRVVVzUjBGQlJ6dEZRVU5zUWl4UlFVRlJMRVZCUVVVc1RVRkJUVHRGUVVOb1FpeGpRVUZqTEVWQlFVVXNUVUZCVFR0RFFYbENka0k3TzBGQmVFSkRMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUUxUm5aRExFRkJkMFpGTEdkQ1FYaEdZeXhEUVhkR1pDeFpRVUZaTEVOQlFVTTdTVUZMVkN4alFVRmpMRVZCUVVVc1IwRkJSenRIUVhWQ2RFSTdPenRCUVhCSVNDeEJRU3RHU1N4blFrRXZSbGtzUTBFclJsZ3NjVUpCUVZNc1EwRkJRenRGUVVOVUxFdEJRVXNzUlVGQlJTeERRVUZETzBWQlExSXNWVUZCVlN4RlFVRkZMRTFCUVUwN1EwRkxia0k3TzBGQlNrTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRV3hIZWtNc1FVRXJSa2tzWjBKQkwwWlpMRU5CSzBaWUxIRkNRVUZUTEVOQlFVTTdTVUZKVUN4TFFVRkxMRVZCUVVVc1EwRkJRenRKUVVOU0xGVkJRVlVzUlVGQlJTeEpRVUZKTzBkQlJXNUNPenM3UVVGMFIwd3NRVUYxUjBrc1owSkJka2RaTEVOQmRVZFlMSGRDUVVGWkxFTkJRVU03UlVGRFdpeFBRVUZQTEVWQlFVVXNTVUZCU1R0RFFVdGtPenRCUVVwRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRjZSM3BETEVGQmRVZEpMR2RDUVhaSFdTeERRWFZIV0N4M1FrRkJXU3hEUVVGRE8wbEJSMVlzVDBGQlR5eEZRVUZGTEV0QlFVczdTVUZEWkN4TFFVRkxMRVZCUVVVc1EwRkJRenRIUVVWWU96czdRVUUzUjB3c1FVRTRSMGtzWjBKQk9VZFpMRU5CT0VkWUxIVkNRVUZYTEVOQlFVTTdSVUZEV0N4TFFVRkxMRVZCUVVVc1EwRkJRenREUVVsVU96dEJRVWhETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGb1NIcERMRUZCT0VkSkxHZENRVGxIV1N4RFFUaEhXQ3gxUWtGQlZ5eERRVUZETzBsQlIxUXNUMEZCVHl4RlFVRkZMRWxCUVVrN1IwRkZhRUk3T3p0QlFXNUlUQ3hCUVhOSVNTeG5Ra0YwU0Zrc1EwRnpTRmdzY1VKQlFXVXNRMEZCUVR0RlFVTmtMR05CUVdNc1JVRkJSU3hOUVVGTk8wTkJTM1pDT3p0QlFVcERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUY0U0hwRExFRkJjMGhKTEdkQ1FYUklXU3hEUVhOSVdDeHhRa0ZCWlN4RFFVRkJPMGxCUjFvc1kwRkJZeXhGUVVGRkxFZEJRVWM3UjBGSGRFSTdPenRCUVRWSVRDeEJRU3RJU1N4blFrRXZTRmtzUTBFclNGZ3NkMEpCUVdVc1EwRkJRVHRGUVVOa0xHTkJRV01zUlVGQlJTeE5RVUZOTzBOQlMzWkNPenRCUVVwRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRnFTWHBETEVGQkswaEpMR2RDUVM5SVdTeERRU3RJV0N4M1FrRkJaU3hEUVVGQk8wbEJSMW9zWTBGQll5eEZRVUZGTEVkQlFVYzdSMEZIZEVJN096dEJRWEpKVEN4QlFYZEpTU3huUWtGNFNWa3NRMEYzU1Znc05FSkJRV1VzUTBGQlFUdEZRVU5rTEdOQlFXTXNSVUZCUlN4TlFVRk5PME5CU1haQ096dEJRVWhETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVFeFNYcERMRUZCZDBsSkxHZENRWGhKV1N4RFFYZEpXQ3cwUWtGQlpTeERRVUZCTzBsQlIxb3NZMEZCWXl4RlFVRkZMRmRCUVZjN1IwRkZPVUk3T3p0QlFUZEpUQ3hCUVRoSlNTeG5Ra0U1U1Zrc1EwRTRTVmdzYTBKQlFVc3NRMEZCUVR0RlFVTktMRk5CUVZNc1JVRkJSU3hMUVVGTE8wTkJTV3BDT3p0QlFVaERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUZvU25wRExFRkJPRWxKTEdkQ1FUbEpXU3hEUVRoSldDeHJRa0ZCU3l4RFFVRkJPMGxCUjBZc1UwRkJVeXhGUVVGRkxFdEJRVXM3UjBGRmJrSTdPenRCUVc1S1RDeEJRWEZLUlN4blFrRnlTbU1zUTBGeFNtUXNVVUZCVVN4RFFVRkJPMFZCUTA0c1ZVRkJWU3hGUVVGRkxFbEJRVWs3UlVGRGFFSXNUMEZCVHl4RlFVRkRMRTlCUVU4N1EwRlBhRUk3TzBGQk9VcElMRUZCZDBwSkxHZENRWGhLV1N4RFFYZEtXQ3hoUVVGTExFTkJRVUU3UlVGRFNpeExRVUZMTEVWQlFVVXNUMEZCVHp0RFFVbG1PenRCUVRkS1RDeEJRVEJLVFN4blFrRXhTbFVzUTBGM1NsZ3NZVUZCU3l4QlFVVklMRmxCUVZrc1EwRkJRVHRGUVVOWUxHRkJRV0VzUlVGQlJTeEpRVUZKTzBOQlEzQkNPenRCUVRWS1VDeEJRV2RMU1N4blFrRm9TMWtzUTBFclNtUXNXVUZCV1N4RFFVTldMRFpDUVVFMlFpeERRVUZCTzBWQlF6TkNMRk5CUVZNc1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFXeExUQ3hCUVcxTFNTeG5Ra0Z1UzFrc1EwRXJTbVFzV1VGQldTeERRVWxXTERSQ1FVRTBRaXhEUVVGQk8wVkJRekZDTEZOQlFWTXNSVUZCUlN4SFFVRkhPME5CUTJZN08wRkJja3RNTEVGQmRVdEZMR2RDUVhaTFl5eERRWFZMWkN4VlFVRlZMRU5CUVVFN1JVRkRVaXhSUVVGUkxFVkJRVVVzVVVGQlVUdERRVzlDYmtJN08wRkJiRUpETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVFeFMzWkRMRUZCZFV0RkxHZENRWFpMWXl4RFFYVkxaQ3hWUVVGVkxFTkJRVUU3U1VGSlRpeFJRVUZSTEVWQlFVVXNVVUZCVVR0SlFVTnNRaXhMUVVGTExFVkJRVVVzU1VGQlNUdEpRVU5ZTEZkQlFWY3NSVUZCUlN4SlFVRkpPMGRCWlhCQ096czdRVUUxVEVnc1FVRm5URWtzWjBKQmFFeFpMRU5CWjB4WUxHOUNRVUZWTEVOQlFVRTdSVUZEVkN4UlFVRlJMRVZCUVVVc1RVRkJUVHRGUVVOb1FpeExRVUZMTEVWQlFVVXNUMEZCVHp0RlFVTmtMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUZEYUVJc1YwRkJWeXhGUVVGRkxFbEJRVWs3UTBGRGJFSTdPMEZCZEV4TUxFRkJkMHhKTEdkQ1FYaE1XU3hEUVhkTVdDeHZRa0ZCVlN4RFFVRkJPMFZCUTFRc1QwRkJUeXhGUVVGRkxFTkJRVU03UTBGRFdEczdRVUV4VEV3c1FVRTJURVVzWjBKQk4weGpMRU5CTmt4a0xGVkJRVlVzUTBGQlF6dEZRVU5VTEZGQlFWRXNSVUZCUlN4TFFVRkxPMFZCUTJZc1QwRkJUeXhGUVVGRkxFTkJRVU03UlVGRFZpeE5RVUZOTEVWQlFVVXNRMEZCUXp0RlFVTlVMRXRCUVVzc1JVRkJSU3hKUVVGSk8wTkJTVm83TzBGQlNFTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRV3hOZGtNc1FVRTJURVVzWjBKQk4weGpMRU5CTmt4a0xGVkJRVlVzUTBGQlF6dEpRVTFRTEU5QlFVOHNSVUZCUlN4SlFVRkpPMGRCUldoQ096czdRVUZGUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQmRrMTJReXhCUVhOTlJTeG5Ra0YwVFdNc1EwRnpUV1FzVTBGQlV5eERRVUZETzBsQlJVNHNUMEZCVHl4RlFVRkZMRXRCUVVzN1IwRkZha0k3T3p0QlFURk5TQ3hCUVRKTlJTeG5Ra0V6VFdNc1EwRXlUV1FzYlVKQlFXMUNMRU5CUVVNN1JVRkRiRUlzVlVGQlZTeEZRVUZGTEV0QlFVczdRMEZQYkVJN08wRkJUa01zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVRkTmRrTXNRVUV5VFVVc1owSkJNMDFqTEVOQk1rMWtMRzFDUVVGdFFpeERRVUZETzBsQlIyaENMRlZCUVZVc1JVRkJSU3hMUVVGTE8wZEJTM0JDT3pzN1FVRklReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCYUU1MlF5eEJRVEpOUlN4blFrRXpUV01zUTBFeVRXUXNiVUpCUVcxQ0xFTkJRVU03U1VGTmFFSXNWVUZCVlN4RlFVRkZMRXRCUVVzN1IwRkZjRUlpZlE9PSAqL1xuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2ljM1I1YkdWekxtTnpjeUlzSW5OdmRYSmpaWE1pT2xzaWMzUjViR1Z6TG5OamMzTWlMQ0pmYldsamNtOHVjMk56Y3lKZExDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZMeUJCY1hWcElITmxJSEIxWldSbGJpQnBiWEJ2Y25SaGNpQnNhV0p5WlhMRHJXRnpJR1Y0ZEdWeWJtRnpYRzR2THlCbGFqb2dRR2x0Y0c5eWRDQW5MM1J2YjJ4ekwyWjFibU4wYVc5dWN5YzdYRzVjYmtCcGJYQnZjblFnWENKdGFXTnliMXdpT3lJc0lpOHZJRU5UVXlCa1pXd2diV2xqY205emFYUmxYRzR1ZG1abGN5MXRjeTFqYjI1MFpXNTBlMXh1WEc1Y2JpQWdMeThnWTJ4aGMyVWdaMlZ1dzZseWFXTmhJR0Z5Y21WbmJHOGdjbUZrYVc4Z1luVjBkRzl1YzF4dVhHNGdJQzUzY3pFd0xXTXRabTl5YlY5ZmNtRmthVzg2WTJobFkydGxaQ3N1ZDNNeE1DMWpMV1p2Y20xZlgyeGhZbVZzT2pwaFpuUmxjaUI3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJekF3TjJNNU1qdGNiaUFnZlZ4dUlDQXVkMlp0YzE5ZmJHVm5ZV3g3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF4TkhCNE8xeHVJQ0I5WEc0Z0lDNTJabTF6TFd4cGJtdDdYRzRnSUNBZ1kyOXNiM0k2STBVMk1EQXdNRHRjYmlBZ2ZWeHVJQ0F2TDJKaGJtNWxjaUIwWlhKdGFXNWhiRnh1WEc0Z0lDNTJabTF6WDE5aVlXNXVaWEl0ZEdWeWJXbHVZV3g3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdmVnh1WEc0Z0lDOHZJR05zWVhObElHZGxic09wY21sallWeHVYRzRnSUM1MlppMWlZVzV1WlhKN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJSFZ5YkNoY0lpNHVMMmx0Wnk5aVlXNXVaWEl2YldGNGFTMTBZV0pzWlhRdWNHNW5YQ0lwTzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dZMjkyWlhJN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkMxeVpYQmxZWFE2SUc1dkxYSmxjR1ZoZER0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFhCdmMybDBhVzl1T2lCc1pXWjBPMXh1SUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJRFkwTUhCNEtTQjdYRzRnSUNBZ0lDQmlZV05yWjNKdmRXNWtMWEJ2YzJsMGFXOXVPaUJqWlc1MFpYSTdYRzRnSUNBZ2ZWeHVJQ0FnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklEazNNSEI0S1NCN1hHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29YQ0l1TGk5cGJXY3ZZbUZ1Ym1WeUwyMWhlR2t0WkdWemEyOXdMbkJ1WjF3aUtUdGNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUXRZWFIwWVdOb2JXVnVkRG9nWm1sNFpXUTdYRzRnSUNBZ0lDQmlZV05yWjNKdmRXNWtMWEJ2YzJsMGFXOXVMWGs2SUMweE5UQndlRHRjYmlBZ0lDQjlYRzRnSUNBZ0psOWZkR1Y0ZEdOdmJuUmhhVzVsY2lCN1hHNGdJQ0FnSUNCd1lXUmthVzVuTFhSdmNEb2dNakJ3ZUR0Y2JpQWdJQ0FnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dOelk0Y0hncElIdGNiaUFnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ05UQndlRHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTVOekJ3ZUNrZ2UxeHVJQ0FnSUNBZ0lDQndZV1JrYVc1bkxYUnZjRG9nT1Rod2VEdGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklEazRjSGc3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNiaUFnTG5abUxXMXZZbWxzWlh0Y2JpQWdJQ0FtWDE5aGJtbHRZWFJwYjI1N1hHNGdJQ0FnSUNCd1lXUmthVzVuT2lBek1IQjRJREE3WEc0Z0lDQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lDQWdJQ0FtTFMxcGJXZDdYRzRnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQWdJQ0FnZEc5d09pQXdPMXh1SUNBZ0lDQWdJQ0JzWldaME9pQXdPMXh1SUNBZ0lDQWdJQ0J5YVdkb2REb2dNRHRjYmlBZ0lDQWdJQ0FnWW05MGRHOXRPaUF3TzF4dUlDQWdJQ0FnSUNCdFlYSm5hVzQ2SUdGMWRHODdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0FnSUNaZlgyRndjSE43WEc0Z0lDQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1SUNBZ0lDQWdiV2x1TFdobGFXZG9kRG9nTWprd2NIZzdYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUNBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JpQWdJQ0FnSUdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdYRzRnSUNBZ0lDQW1PbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJR052Ym5SbGJuUTZJRndpWENJN1hHNGdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lDQWdiV0Y0TFdobGFXZG9kRG9nTWpnd2NIZzdYRzRnSUNBZ0lDQWdJSFJ2Y0RvZ01qQndlRHRjYmlBZ0lDQWdJQ0FnYkdWbWREb2dNRHRjYmlBZ0lDQWdJQ0FnY21sbmFIUTZJQzB4TURBbE8xeHVJQ0FnSUNBZ0lDQmliM1IwYjIwNklEQTdYRzRnSUNBZ0lDQWdJR0Z1YVcxaGRHbHZiam9nYzJ4cFpHVWdNakJ6SUd4cGJtVmhjaUJwYm1acGJtbDBaVHRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkMxemFYcGxPaUJqYjNabGNqdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nZFhKc0tGd2lMaTR2YVcxbkwzTmxZM1JwYjI0dGJXOWlhV3hsTDJGd2NHbHNhVzFwZEdGa1lTNXdibWRjSWlrZ01DQXhNREFsTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCQUxYZGxZbXRwZEMxclpYbG1jbUZ0WlhNZ2MyeHBaR1VnZTF4dUlDQWdJQ0FnSUNBeE1EQWxJSHRjYmlBZ0lDQWdJQ0FnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWZ29MVFV3SlNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lIMWNiaUFnZlZ4dUlDQXVkbVl0ZEdWeWJXbHVZV3dnZTF4dUlDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklEWndlRHRjYmlBZ0lDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHVJQ0FnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYRzRnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dOelk0Y0hncElIdGNiaUFnSUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCeWIzYzdYRzRnSUNBZ2ZWeHVJQ0FnSUNaZlgyTnZiblJsYm5RZ2UxeHVJQ0FnSUNBZ2IzSmtaWEk2SURJN1hHNGdJQ0FnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTNOamh3ZUNrZ2UxeHVJQ0FnSUNBZ0lDQnZjbVJsY2pvZ01UdGNiaUFnSUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nYkdWbWREdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnSmw5ZmFXMW5aR1Z6YTNSdmNDQjdYRzRnSUNBZ0lDQmthWE53YkdGNU9pQnViMjVsTzF4dUlDQWdJQ0FnUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxcGJpMTNhV1IwYURvZ056WTRjSGdwSUh0Y2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdJQ0FnSUc5eVpHVnlPaUF5TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQW1YMTlwYldkdGIySnBiR1VnZTF4dUlDQWdJQ0FnYjNKa1pYSTZJREU3WEc0Z0lDQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBM05qaHdlQ2tnZTF4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dUlDQXVkbVl0ZEhaN1hHNGdJQ0FnSmw5ZlpteGxlR1JwY21WamRHbHZibnRjYmlBZ0lDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0N1hHNGdJQ0FnSUNCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTNOamh3ZUNsN1hHNGdJQ0FnSUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCeWIzYzdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQjlYRzRnSUgxY2JpQWdMblptTFdacFltVnllMXh1SUNBZ0lDWmZYMlpzWlhoa2FYSmxZM1JwYjI1N1hHNGdJQ0FnSUNCbWJHVjRMV1JwY21WamRHbHZiam9nWTI5c2RXMXVPMXh1SUNBZ0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nT1Rjd2NIZ3BlMXh1SUNBZ0lDQWdJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2djbTkzTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnZlZ4dUlDQjlYRzRnSUM1MlppMXpkWEJsY25kcFptbDdYRzRnSUNBZ0psOWZabXhsZUdScGNtVmpkR2x2Ym50Y2JpQWdJQ0FnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYRzRnSUNBZ0lDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUE1TnpCd2VDbDdYRzRnSUNBZ0lDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQnliM2N0Y21WMlpYSnpaVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUNBZ0psOWZhVzFuZTF4dUlDQWdJQ0FnYldGNExYZHBaSFJvT2lBek1EQndlRHRjYmlBZ0lDQWdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURrM01IQjRLU0I3WEc0Z0lDQWdJQ0FnSUcxaGVDMTNhV1IwYURvZ05EVXdjSGc3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNGdJQzUyWmkxbWIzSnRlMXh1SUNBZ0lHMWhjbWRwYmkxMGIzQTZJREV3Y0hnN1hHNGdJQ0FnY0dGa1pHbHVaem93SURBZ01DQXdPMXh1SUNBZ0lDWmZYMkp2ZUh0Y2JpQWdJQ0FnSUhkcFpIUm9PaUJwYm1sMGFXRnNPMXh1SUNBZ0lDQWdKanBtYVhKemRDMWphR2xzWkh0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nTWpCd2VEdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYmlBZ0xuWm1MWFJwYldWc2FXNWxlMXh1SUNBZ0lDNTNjekV3TFdNdGRHbHRaV3hwYm1VdGMzUmxjSE5mWDNScGRHeGxlMXh1SUNBZ0lDQWdiV0Y0TFhkcFpIUm9PaUJwYm1sMGFXRnNPMXh1SUNBZ0lIMWNiaUFnSUNBdWQzTXhNQzFqTFhScGJXVnNhVzVsTFhOMFpYQnpYMTlwZEdWdGUxeHVJQ0FnSUNBZ2JXbHVMWGRwWkhSb09pQXlNQ1U3WEc0Z0lDQWdmVnh1SUNCOVhHNGdJQzUyWmkxMGFXTnJaWFI3WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1WEc0Z0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nTnpZNGNIZ3BlMXh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lDQWdjbWxuYUhRNklERnlaVzA3WEc0Z0lDQWdJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ056QndlRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQW1YMTltYkc5aGRHbHVaM3RjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ6ZEdsamEzazdYRzRnSUNBZ0lDQjNhV1IwYURvZ2FXNW9aWEpwZER0Y2JpQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUNBZ2JXRjRMWGRwWkhSb09pQTBNREJ3ZUR0Y2JpQWdJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQXhNSEI0TzF4dUlDQWdJSDFjYmx4dUlDQWdJQ1pmWDI5d1lXTnBkSGt3ZTF4dUlDQWdJQ0FnYjNCaFkybDBlVG9nTUR0Y2JpQWdJQ0I5WEc1Y2JpQWdmVnh1SUNBdWRtWXRjM1JwWTJ0NUlIdGNiaUFnSUNCd2IzTnBkR2x2YmpvZ1ptbDRaV1E3WEc0Z0lDQWdlaTFwYm1SbGVEb2dNVHRjYmlBZ0lDQmliM1IwYjIwNklEQTdYRzRnSUNBZ2QybGtkR2c2SURFd01DVTdYRzRnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dPVGN3Y0hncElIdGNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEc0Z0lDQWdmVnh1SUNCOVhHNGdJQzUyWmkxaWJHOWpheUI3WEc0Z0lDQWdRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nT1Rjd2NIZ3BJSHRjYmlBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUgxY2JpQWdmVnh1SUNBdWQzTXhNQzFqTFdOaGNtUXRZV1JrYjI1eklIdGNiaUFnSUNCdGFXNHRhR1ZwWjJoME9pQXlOVFJ3ZUR0Y2JpQWdJQ0JBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBMk5EQndlQ2tnZTF4dUlDQWdJQ0FnYldsdUxXaGxhV2RvZERvZ01qTXdjSGc3WEc0Z0lDQWdmVnh1SUNBZ0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJRGszTUhCNEtTQjdYRzRnSUNBZ0lDQnRhVzR0YUdWcFoyaDBPaUF5TURod2VEdGNiaUFnSUNCOVhHNGdJSDFjYm4waVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGRFEwRXNRVUZMUlN4blFrRk1ZeXhEUVV0a0xHMUNRVUZ0UWl4QlFVRkJMRkZCUVZFc1IwRkJReXh0UWtGQmJVSXNRVUZCUVN4UFFVRlBMRU5CUVVNN1JVRkRja1FzWjBKQlFXZENMRVZCUVVVc1QwRkJUenREUVVNeFFqczdRVUZRU0N4QlFWRkZMR2RDUVZKakxFTkJVV1FzV1VGQldTeERRVUZCTzBWQlExWXNVMEZCVXl4RlFVRkZMRWxCUVVrN1EwRkRhRUk3TzBGQlZrZ3NRVUZYUlN4blFrRllZeXhEUVZka0xGVkJRVlVzUTBGQlFUdEZRVU5TTEV0QlFVc3NSVUZCUXl4UFFVRlBPME5CUTJRN08wRkJZa2dzUVVGblFrVXNaMEpCYUVKakxFTkJaMEprTEhOQ1FVRnpRaXhEUVVGQk8wVkJRM0JDTEU5QlFVOHNSVUZCUlN4SlFVRkpPME5CUTJRN08wRkJiRUpJTEVGQmMwSkZMR2RDUVhSQ1l5eERRWE5DWkN4VlFVRlZMRU5CUVVFN1JVRkRVaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4blFrRkJaMElzUlVGQlJTeHZRMEZCYjBNN1JVRkRkRVFzWlVGQlpTeEZRVUZGTEV0QlFVczdSVUZEZEVJc2FVSkJRV2xDTEVWQlFVVXNVMEZCVXp0RlFVTTFRaXh0UWtGQmJVSXNSVUZCUlN4SlFVRkpPME5CYlVJeFFqczdRVUZzUWtNc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFUVkNka01zUVVGelFrVXNaMEpCZEVKakxFTkJjMEprTEZWQlFWVXNRMEZCUVR0SlFVOU9MRzFDUVVGdFFpeEZRVUZGTEUxQlFVMDdSMEZwUWpsQ096czdRVUZtUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQkwwSjJReXhCUVhOQ1JTeG5Ra0YwUW1Nc1EwRnpRbVFzVlVGQlZTeERRVUZCTzBsQlZVNHNaMEpCUVdkQ0xFVkJRVVVzYjBOQlFXOURPMGxCUTNSRUxIRkNRVUZ4UWl4RlFVRkZMRXRCUVVzN1NVRkROVUlzY1VKQlFYRkNMRVZCUVVVc1RVRkJUVHRIUVZsb1F6czdPMEZCT1VOSUxFRkJiME5KTEdkQ1FYQkRXU3hEUVc5RFdDeDVRa0ZCWlN4RFFVRkRPMFZCUTJZc1YwRkJWeXhGUVVGRkxFbEJRVWs3UTBGUmJFSTdPMEZCVUVjc1RVRkJUU3hEUVVGRExFMUJRVTBzVFVGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0RlFYUkRNME1zUVVGdlEwa3NaMEpCY0VOWkxFTkJiME5ZTEhsQ1FVRmxMRU5CUVVNN1NVRkhXQ3hYUVVGWExFVkJRVVVzU1VGQlNUdEhRVTEwUWpzN08wRkJTa2NzVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVhwRE0wTXNRVUZ2UTBrc1owSkJjRU5aTEVOQmIwTllMSGxDUVVGbExFTkJRVU03U1VGTllpeFhRVUZYTEVWQlFVVXNTVUZCU1R0SlFVTnFRaXhqUVVGakxFVkJRVVVzU1VGQlNUdEhRVVYyUWpzN08wRkJOME5NTEVGQlowUkpMR2RDUVdoRVdTeERRV2RFV0N4eFFrRkJWeXhEUVVGQk8wVkJRMVlzVDBGQlR5eEZRVUZGTEUxQlFVMDdSVUZEWml4UlFVRlJMRVZCUVVVc1VVRkJVVHREUVZOdVFqczdRVUV6UkV3c1FVRnRSRTBzWjBKQmJrUlZMRU5CYlVSVUxEQkNRVUZMTEVOQlFVRTdSVUZEU2l4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeEhRVUZITEVWQlFVVXNRMEZCUXp0RlFVTk9MRWxCUVVrc1JVRkJSU3hEUVVGRE8wVkJRMUFzUzBGQlN5eEZRVUZGTEVOQlFVTTdSVUZEVWl4TlFVRk5MRVZCUVVVc1EwRkJRenRGUVVOVUxFMUJRVTBzUlVGQlJTeEpRVUZKTzBOQlEySTdPMEZCTVVSUUxFRkJORVJKTEdkQ1FUVkVXU3hEUVRSRVdDeG5Ra0ZCVFN4RFFVRkJPMFZCUTB3c1VVRkJVU3hGUVVGRkxFMUJRVTA3UlVGRGFFSXNWVUZCVlN4RlFVRkZMRXRCUVVzN1JVRkRha0lzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1QwRkJUeXhGUVVGRkxFbEJRVWs3UlVGRFlpeFhRVUZYTEVWQlFVVXNUVUZCVFR0RlFVTnVRaXhWUVVGVkxFVkJRVVVzVlVGQlZUdERRVzlDZGtJN08wRkJkRVpNTEVGQmJVVk5MR2RDUVc1RlZTeERRVFJFV0N4blFrRkJUU3hCUVU5S0xFOUJRVThzUTBGQlF6dEZRVU5RTEU5QlFVOHNSVUZCUlN4RlFVRkZPMFZCUTFnc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNWVUZCVlN4RlFVRkZMRXRCUVVzN1JVRkRha0lzUjBGQlJ5eEZRVUZGTEVsQlFVazdSVUZEVkN4SlFVRkpMRVZCUVVVc1EwRkJRenRGUVVOUUxFdEJRVXNzUlVGQlJTeExRVUZMTzBWQlExb3NUVUZCVFN4RlFVRkZMRU5CUVVNN1JVRkRWQ3hUUVVGVExFVkJRVVVzZVVKQlFYbENPMFZCUTNCRExHVkJRV1VzUlVGQlJTeExRVUZMTzBWQlEzUkNMRlZCUVZVc1JVRkJSU3cyUTBGQk5rTXNRMEZCUXl4RFFVRkRMRU5CUVVNc1NVRkJTVHREUVVOcVJUczdRVUZGUkN4clFrRkJhMElzUTBGQmJFSXNTMEZCYTBJN1JVRkRhRUlzU1VGQlNUdEpRVU5HTEZOQlFWTXNSVUZCUlN4blFrRkJaMEk3T3pzN1FVRnNSbkpETEVGQmQwWkZMR2RDUVhoR1l5eERRWGRHWkN4WlFVRlpMRU5CUVVNN1JVRkRXQ3hoUVVGaExFVkJRVVVzUjBGQlJ6dEZRVU5zUWl4UlFVRlJMRVZCUVVVc1RVRkJUVHRGUVVOb1FpeGpRVUZqTEVWQlFVVXNUVUZCVFR0RFFYbENka0k3TzBGQmVFSkRMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUUxUm5aRExFRkJkMFpGTEdkQ1FYaEdZeXhEUVhkR1pDeFpRVUZaTEVOQlFVTTdTVUZMVkN4alFVRmpMRVZCUVVVc1IwRkJSenRIUVhWQ2RFSTdPenRCUVhCSVNDeEJRU3RHU1N4blFrRXZSbGtzUTBFclJsZ3NjVUpCUVZNc1EwRkJRenRGUVVOVUxFdEJRVXNzUlVGQlJTeERRVUZETzBWQlExSXNWVUZCVlN4RlFVRkZMRTFCUVUwN1EwRkxia0k3TzBGQlNrTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRV3hIZWtNc1FVRXJSa2tzWjBKQkwwWlpMRU5CSzBaWUxIRkNRVUZUTEVOQlFVTTdTVUZKVUN4TFFVRkxMRVZCUVVVc1EwRkJRenRKUVVOU0xGVkJRVlVzUlVGQlJTeEpRVUZKTzBkQlJXNUNPenM3UVVGMFIwd3NRVUYxUjBrc1owSkJka2RaTEVOQmRVZFlMSGRDUVVGWkxFTkJRVU03UlVGRFdpeFBRVUZQTEVWQlFVVXNTVUZCU1R0RFFVdGtPenRCUVVwRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRjZSM3BETEVGQmRVZEpMR2RDUVhaSFdTeERRWFZIV0N4M1FrRkJXU3hEUVVGRE8wbEJSMVlzVDBGQlR5eEZRVUZGTEV0QlFVczdTVUZEWkN4TFFVRkxMRVZCUVVVc1EwRkJRenRIUVVWWU96czdRVUUzUjB3c1FVRTRSMGtzWjBKQk9VZFpMRU5CT0VkWUxIVkNRVUZYTEVOQlFVTTdSVUZEV0N4TFFVRkxMRVZCUVVVc1EwRkJRenREUVVsVU96dEJRVWhETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVGb1NIcERMRUZCT0VkSkxHZENRVGxIV1N4RFFUaEhXQ3gxUWtGQlZ5eERRVUZETzBsQlIxUXNUMEZCVHl4RlFVRkZMRWxCUVVrN1IwRkZhRUk3T3p0QlFXNUlUQ3hCUVhOSVNTeG5Ra0YwU0Zrc1EwRnpTRmdzY1VKQlFXVXNRMEZCUVR0RlFVTmtMR05CUVdNc1JVRkJSU3hOUVVGTk8wTkJTM1pDT3p0QlFVcERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUY0U0hwRExFRkJjMGhKTEdkQ1FYUklXU3hEUVhOSVdDeHhRa0ZCWlN4RFFVRkJPMGxCUjFvc1kwRkJZeXhGUVVGRkxFZEJRVWM3UjBGSGRFSTdPenRCUVRWSVRDeEJRU3RJU1N4blFrRXZTRmtzUTBFclNGZ3NkMEpCUVdVc1EwRkJRVHRGUVVOa0xHTkJRV01zUlVGQlJTeE5RVUZOTzBOQlMzWkNPenRCUVVwRExFMUJRVTBzUTBGQlF5eE5RVUZOTEUxQlFVMHNVMEZCVXl4RlFVRkZMRXRCUVVzN1JVRnFTWHBETEVGQkswaEpMR2RDUVM5SVdTeERRU3RJV0N4M1FrRkJaU3hEUVVGQk8wbEJSMW9zWTBGQll5eEZRVUZGTEVkQlFVYzdSMEZIZEVJN096dEJRWEpKVEN4QlFYZEpTU3huUWtGNFNWa3NRMEYzU1Znc05FSkJRV1VzUTBGQlFUdEZRVU5rTEdOQlFXTXNSVUZCUlN4TlFVRk5PME5CU1haQ096dEJRVWhETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVFeFNYcERMRUZCZDBsSkxHZENRWGhKV1N4RFFYZEpXQ3cwUWtGQlpTeERRVUZCTzBsQlIxb3NZMEZCWXl4RlFVRkZMRmRCUVZjN1IwRkZPVUk3T3p0QlFUZEpUQ3hCUVRoSlNTeG5Ra0U1U1Zrc1EwRTRTVmdzYTBKQlFVc3NRMEZCUVR0RlFVTktMRk5CUVZNc1JVRkJSU3hMUVVGTE8wTkJTV3BDT3p0QlFVaERMRTFCUVUwc1EwRkJReXhOUVVGTkxFMUJRVTBzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUZvU25wRExFRkJPRWxKTEdkQ1FUbEpXU3hEUVRoSldDeHJRa0ZCU3l4RFFVRkJPMGxCUjBZc1UwRkJVeXhGUVVGRkxFdEJRVXM3UjBGRmJrSTdPenRCUVc1S1RDeEJRWEZLUlN4blFrRnlTbU1zUTBGeFNtUXNVVUZCVVN4RFFVRkJPMFZCUTA0c1ZVRkJWU3hGUVVGRkxFbEJRVWs3UlVGRGFFSXNUMEZCVHl4RlFVRkRMRTlCUVU4N1EwRlBhRUk3TzBGQk9VcElMRUZCZDBwSkxHZENRWGhLV1N4RFFYZEtXQ3hoUVVGTExFTkJRVUU3UlVGRFNpeExRVUZMTEVWQlFVVXNUMEZCVHp0RFFVbG1PenRCUVRkS1RDeEJRVEJLVFN4blFrRXhTbFVzUTBGM1NsZ3NZVUZCU3l4QlFVVklMRmxCUVZrc1EwRkJRVHRGUVVOWUxHRkJRV0VzUlVGQlJTeEpRVUZKTzBOQlEzQkNPenRCUVRWS1VDeEJRV2RMU1N4blFrRm9TMWtzUTBFclNtUXNXVUZCV1N4RFFVTldMRFpDUVVFMlFpeERRVUZCTzBWQlF6TkNMRk5CUVZNc1JVRkJSU3hQUVVGUE8wTkJRMjVDT3p0QlFXeExUQ3hCUVcxTFNTeG5Ra0Z1UzFrc1EwRXJTbVFzV1VGQldTeERRVWxXTERSQ1FVRTBRaXhEUVVGQk8wVkJRekZDTEZOQlFWTXNSVUZCUlN4SFFVRkhPME5CUTJZN08wRkJja3RNTEVGQmRVdEZMR2RDUVhaTFl5eERRWFZMWkN4VlFVRlZMRU5CUVVFN1JVRkRVaXhSUVVGUkxFVkJRVVVzVVVGQlVUdERRVzlDYmtJN08wRkJiRUpETEUxQlFVMHNRMEZCUXl4TlFVRk5MRTFCUVUwc1UwRkJVeXhGUVVGRkxFdEJRVXM3UlVFeFMzWkRMRUZCZFV0RkxHZENRWFpMWXl4RFFYVkxaQ3hWUVVGVkxFTkJRVUU3U1VGSlRpeFJRVUZSTEVWQlFVVXNVVUZCVVR0SlFVTnNRaXhMUVVGTExFVkJRVVVzU1VGQlNUdEpRVU5ZTEZkQlFWY3NSVUZCUlN4SlFVRkpPMGRCWlhCQ096czdRVUUxVEVnc1FVRm5URWtzWjBKQmFFeFpMRU5CWjB4WUxHOUNRVUZWTEVOQlFVRTdSVUZEVkN4UlFVRlJMRVZCUVVVc1RVRkJUVHRGUVVOb1FpeExRVUZMTEVWQlFVVXNUMEZCVHp0RlFVTmtMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzVTBGQlV5eEZRVUZGTEV0QlFVczdSVUZEYUVJc1YwRkJWeXhGUVVGRkxFbEJRVWs3UTBGRGJFSTdPMEZCZEV4TUxFRkJkMHhKTEdkQ1FYaE1XU3hEUVhkTVdDeHZRa0ZCVlN4RFFVRkJPMFZCUTFRc1QwRkJUeXhGUVVGRkxFTkJRVU03UTBGRFdEczdRVUV4VEV3c1FVRTJURVVzWjBKQk4weGpMRU5CTmt4a0xGVkJRVlVzUTBGQlF6dEZRVU5VTEZGQlFWRXNSVUZCUlN4TFFVRkxPMFZCUTJZc1QwRkJUeXhGUVVGRkxFTkJRVU03UlVGRFZpeE5RVUZOTEVWQlFVVXNRMEZCUXp0RlFVTlVMRXRCUVVzc1JVRkJSU3hKUVVGSk8wTkJTVm83TzBGQlNFTXNUVUZCVFN4RFFVRkRMRTFCUVUwc1RVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEZRV3hOZGtNc1FVRTJURVVzWjBKQk4weGpMRU5CTmt4a0xGVkJRVlVzUTBGQlF6dEpRVTFRTEU5QlFVOHNSVUZCUlN4SlFVRkpPMGRCUldoQ096czdRVUZGUXl4TlFVRk5MRU5CUVVNc1RVRkJUU3hOUVVGTkxGTkJRVk1zUlVGQlJTeExRVUZMTzBWQmRrMTJReXhCUVhOTlJTeG5Ra0YwVFdNc1EwRnpUV1FzVTBGQlV5eERRVUZETzBsQlJVNHNUMEZCVHl4RlFVRkZMRXRCUVVzN1IwRkZha0k3T3p0QlFURk5TQ3hCUVRKTlJTeG5Ra0V6VFdNc1EwRXlUV1FzYlVKQlFXMUNMRU5CUVVNN1JVRkRiRUlzVlVGQlZTeEZRVUZGTEV0QlFVczdRMEZQYkVJN08wRkJUa01zVFVGQlRTeERRVUZETEUxQlFVMHNUVUZCVFN4VFFVRlRMRVZCUVVVc1MwRkJTenRGUVRkTmRrTXNRVUV5VFVVc1owSkJNMDFqTEVOQk1rMWtMRzFDUVVGdFFpeERRVUZETzBsQlIyaENMRlZCUVZVc1JVRkJSU3hMUVVGTE8wZEJTM0JDT3pzN1FVRklReXhOUVVGTkxFTkJRVU1zVFVGQlRTeE5RVUZOTEZOQlFWTXNSVUZCUlN4TFFVRkxPMFZCYUU1MlF5eEJRVEpOUlN4blFrRXpUV01zUTBFeVRXUXNiVUpCUVcxQ0xFTkJRVU03U1VGTmFFSXNWVUZCVlN4RlFVRkZMRXRCUVVzN1IwRkZjRUlpZlE9PSAqL1xuIl19 */
