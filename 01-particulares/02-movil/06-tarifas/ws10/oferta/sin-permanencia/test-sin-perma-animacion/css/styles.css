/**
 * Vodafone Reboot Framework: Version 2.5.1. Generation Date: 2020-10-29T10:41:14.585Z
 */

.vfes-ms-content .vfms-gradient {
  background-image: linear-gradient(90deg, #007C92, #E60000);
  -webkit-background-clip: text;
  color: transparent;
  font-size: 4.375rem;
  -webkit-animation: gradient 15s ease infinite;
          animation: gradient 15s ease infinite;
}

.vfes-ms-content svg {
  width: 100%;
  height: 100%;
  position: absolute;
}

.vfes-ms-content svg text {
  text-anchor: middle;
}

.vfes-ms-content svg mask rect {
  fill: white;
}

.vfes-ms-content svg > rect {
  fill: white;
  -webkit-mask: url(#mask);
  mask: url(#mask);
}

.vfes-ms-content .cont {
  background: linear-gradient(0deg, #e55d87, #5fc3e4);
  background-size: 400% 400%;
  -webkit-animation: Gradient 4s linear infinite;
          animation: Gradient 4s linear infinite;
}

@-webkit-keyframes Gradient {
  0% {
    background-position: 50% 0%;
  }
  50% {
    background-position: 50% 100%;
  }
  100% {
    background-position: 50% 0%;
  }
}

@keyframes Gradient {
  0% {
    background-position: 50% 0%;
  }
  50% {
    background-position: 50% 100%;
  }
  100% {
    background-position: 50% 0%;
  }
}

@-webkit-keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.vfes-ms-content .vfms-video-container {
  height: auto;
  max-height: 21.875rem;
  display: block;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-video-container {
    display: none;
  }
}

.vfes-ms-content .vfms-content {
  width: 100%;
  display: flex;
}

.vfes-ms-content .vfms-container {
  position: relative;
  z-index: 5;
  width: 100%;
  top: 3.4375rem;
  left: 0;
  padding-left: 2.5rem;
  right: 0;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-container {
    position: relative;
    padding: 0.625rem 0.625rem;
    top: 0;
    left: 0;
    right: 0;
    padding-left: 0;
  }
}

.vfes-ms-content .vf-banner {
  background: url("https://www.vodafone.es/c/statics/imagen/bg-banner.jpg") no-repeat center;
  background-size: cover;
  position: relative;
  background-color: f4f4f4;
}

.vfes-ms-content .vfms-banner-title {
  width: 50%;
  position: relative;
  padding-left: 1.875rem;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms-banner-title {
    width: 100%;
  }
}

.vfes-ms-content .vfms-hero__img-content {
  width: 100%;
}

.vfes-ms-content .vfms__banner-mobile {
  display: none;
}

@media screen and (max-width: 48rem) {
  .vfes-ms-content .vfms__banner-mobile {
    display: block;
    text-align: center;
    margin: 0 auto;
  }
}

.vfes-ms-content .vfms-banner-container {
  background-image: url("../img/bg-banner-mobile.png");
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-banner-container {
    background-image: url("../img/bg-banner-tablet.png");
  }
}

@media screen and (min-width: 49.375rem) {
  .vfes-ms-content .vfms-banner-container {
    background-image: none;
  }
}

@media only screen and (max-width: 75rem) and (min-width: 64rem) {
  .vfes-ms-content .vfms-banner-container {
    margin-bottom: 7.5rem;
  }
}

@media only screen and (max-width: 87.5rem) and (min-width: 75rem) {
  .vfes-ms-content .vfms-banner-container {
    margin-bottom: 3.125rem;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-banner__title {
    max-width: 28.125rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-banner__title {
    max-width: 45.625rem;
    padding-right: 10.625rem;
  }
}

@media only screen and (max-width: 75rem) and (min-width: 63.9375rem) {
  .vfes-ms-content .vfms-banner__title {
    max-width: 40.625rem;
    padding-right: 0;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-banner__contain {
    position: absolute;
    top: 1%;
    left: 0;
    right: 0;
    bottom: 0;
    margin: 0 auto;
  }
}

.vfes-ms-content .vfms-banner__img-container {
  position: relative;
}

.vfes-ms-content .vfms-banner__mpv {
  position: absolute;
  max-width: 4.375rem;
  top: 0;
  left: 0.625rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-banner__mpv {
    max-width: 5rem;
    left: -2.5rem;
    top: 1.25rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-banner__mpv {
    max-width: 5.625rem;
    left: 0;
    top: 0;
  }
}

@media only screen and (max-width: 75rem) and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-banner__mpv {
    max-width: 5rem;
    top: 1.25rem;
  }
}

.vfes-ms-content .vfms-banner__info {
  position: absolute;
  bottom: 0.625rem;
  width: 7.5rem;
  z-index: 1;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-banner__info {
    width: 6.25rem;
    bottom: 0;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-banner__info {
    width: 8.125rem;
  }
}

@media only screen and (max-width: 75rem) and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-banner__info {
    width: 6.25rem;
  }
}

.vfes-ms-content .vfms-banner__5g {
  position: absolute;
  bottom: 0;
  right: 1.875rem;
  z-index: 1;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-banner__5g {
    right: 2.5rem;
    max-width: 3.75rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-banner__5g {
    right: 7.5rem;
    max-width: none;
  }
}

@media only screen and (max-width: 75rem) and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-banner__5g {
    max-width: 3.75rem;
    right: 3.125rem;
  }
}

.vfes-ms-content .vfms-banner__animated {
  position: absolute;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-banner__animated {
    left: 5.625rem;
    max-width: 65%;
  }
}

@media only screen and (max-width: 75rem) and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-banner__animated {
    right: 0;
    left: auto;
    max-width: 80%;
    bottom: 0;
  }
}

.vfes-ms-content .vfms-banner__static {
  position: absolute;
  max-width: 80%;
  right: 0;
  bottom: 0.625rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-banner__static {
    max-width: 90%;
  }
}

.vfes-ms-content .vfms-banner__seo-align {
  align-items: flex-start;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-banner__seo-align {
    align-items: center;
  }
}

.vfes-ms-content .vfms-hero__img-container {
  padding: 0 1.25rem;
}

.vfes-ms-content .vfms-hero__sin {
  text-align: center;
}

.vfes-ms-content .vfms-hero__sin-item {
  font-size: 20;
  margin-bottom: 0;
}

.vfes-ms-content .vfms-hero__sin-item1 {
  color: #007c92;
}

.vfes-ms-content .vfms-hero__sin-item2 {
  color: #000000;
}

.vfes-ms-content .vfms-hero__sin-item2 span {
  color: #999999;
}

.vfes-ms-content .vf-bold {
  font-family: "Vodafone";
  src: local("Vodafone Rg Bold"), url("https://www.vodafone.es/c/statics/fonts/vodafonergbd-webfont.woff") format("woff"), url(fonts/vodafone-bold.woff) format("woff");
  font-style: "normal";
  font-weight: 700;
  font-display: swap;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .hide--lrg {
    display: none;
  }
}

.vfes-ms-content .hide--xs {
  display: none;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .hide--xs {
    display: block;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .hide--sm {
    display: none;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .hide--sm {
    display: block;
  }
}

.vfes-ms-content .vf-block {
  display: block;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
