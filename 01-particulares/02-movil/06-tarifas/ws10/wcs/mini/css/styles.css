/**
 * Vodafone Reboot Framework: Version 2.11.1. Generation Date: 2021-02-19T08:24:13.045Z
 */

.vfes-ms-content .vfms-link {
  color: #E60000;
}

.vfes-ms-content .vf-banner {
  position: relative;
  background-image: url("../img/banner/mini-tablet.png");
  background-size: cover;
  background-position: left;
  background-repeat: no-repeat;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vf-banner {
    background-position: center;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner {
    background-image: url("../img/banner/mini-desktop.png");
    background-attachment: fixed;
    background-position-y: -9.375rem;
  }
}

.vfes-ms-content .vf-banner__textcontainer {
  padding-top: 1.25rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vf-banner__textcontainer {
    padding-top: 3.125rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vf-banner__textcontainer {
    padding-top: 6.125rem;
    padding-bottom: 6.125rem;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-block {
    display: block;
  }
}

@media screen and (min-width: 40rem) and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-block {
    display: inline-block;
  }
}

.vfes-ms-content .vf-timeline .ws10-c-timeline-steps__title {
  max-width: initial;
}

.vfes-ms-content .vf-timeline .ws10-c-timeline-steps__item {
  min-width: 20%;
}

.vfes-ms-content .ws10-c-card-addons {
  min-height: 15.875rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .ws10-c-card-addons {
    min-height: 14.375rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .ws10-c-card-addons {
    min-height: 13rem;
  }
}

.vfes-ms-content .vf-img {
  width: 100%;
}

.vfes-ms-content .vf-carousel--height {
  height: 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
