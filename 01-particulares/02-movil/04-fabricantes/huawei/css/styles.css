/**
 * Vodafone Reboot Framework: Version 15.6.0. Generation Date: 2020-05-08T12:04:46.675Z
 */

.vfes-ms-content .breadcrumbs-layout {
  padding: 0;
}

.vfes-ms-content .measurec2c {
  text-decoration: none;
}

.vfes-ms-content .vfms-carousel {
  padding-top: 2.5rem;
}

.vfes-ms-content .vfes-card-shop__offer a {
  text-decoration: none;
}

.vfes-ms-content .vfes-card-shop__offer h2 {
  margin-bottom: 0;
}

.vfes-ms-content .header-background {
  background-image:  url('../img/background.png?v=b3a615e627ede33bb256a777a5bb1b15');
  background-size: cover;
}

.vfes-ms-content .header-background img {
  vertical-align: bottom;
}

.vfes-ms-content .header-background .hide--sm {
  vertical-align: middle;
}

.vfes-ms-content .header-background .hide--sm .brand-logo {
  margin-bottom: 1.125rem;
  width: 16.25rem;
}

.vfes-ms-content .header-background .hide--sm .vfes-1\/2 {
  vertical-align: middle;
}

.vfes-ms-content .header-background .hide--sm .vfes-layout__item:first-of-type {
  vertical-align: middle;
  padding-top: 3rem;
}

.vfes-ms-content .header-background .hide--lrg .brand-logo {
  margin-top: 1.5rem;
}

.vfes-ms-content .header-background .hide--lrg .vfes-title {
  margin-top: 1rem;
}

.vfes-ms-content .header-background .hide--lrg .vfes-paragraph {
  margin-bottom: 1.5rem;
}

.vfes-ms-content .header-background.vfms-text__align {
  text-align: center;
}

.vfes-ms-content .section-disp {
  padding-top: 1.5rem;
  padding-bottom: 3rem;
}

.vfes-ms-content .section-disp .vfes-link {
  font-size: 0.875rem;
}

.vfes-ms-content .section-disp .vfes-layout__item:last-of-type {
  margin-top: 1.5rem;
}

.vfes-ms-content .vfes-carousel a:hover {
  color: #333;
}

.vfes-ms-content .vfes-carousel .vfes-button:hover {
  color: #fff;
}

.vfes-ms-content .vfes-carousel .vfes-title--4 {
  font-size: 1.25rem;
  line-height: 1.5rem;
  color: #333;
}

.vfes-ms-content .vfes-carousel .vfes-paragraph {
  font-size: 1rem;
  line-height: 1.125rem;
  margin-bottom: 0.9375rem;
}

.vfes-ms-content .vfes-carousel .vfes-card-shop__accordion-button {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.vfes-ms-content .vfes-carousel .vfes-card-shop__accordion-button::after {
  -ms-transform: rotate(135deg);
  border-right: .1rem solid #e60000;
  border-top: .1rem solid #e60000;
}

.vfes-ms-content .vfes-carousel .vfes-card-shop__bottom {
  padding-top: 0;
  margin-top: 0;
}

.vfes-ms-content .vfes-carousel .vfes-card-shop__bottom .vfes-paragraph {
  padding: 0;
  margin: 0;
}

.vfes-ms-content .vfes-carousel .vfes-card-shop__bottom .vfes-title--5 {
  margin-bottom: 0.75rem;
  font-size: 1.25rem;
}

.vfes-ms-content .vfes-carousel .vfes-card-shop__bottom .vfes-title--5:last-of-type {
  margin-bottom: 1.5rem;
}

.vfes-ms-content .vfes-carousel .lazyload {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.vfes-ms-content .vfes-carousel .vfes-card-shop__accordion.open .vfes-card-shop__accordion-content {
  padding-bottom: 1.125rem;
}

.vfes-ms-content .vfms-link {
  text-decoration: underline;
}

.vfes-ms-content .box-companias {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
}

.vfes-ms-content .box-companias .logo-link {
  color: transparent;
  margin-right: 3rem;
}

.vfes-ms-content .box-companias .logo-link:last-of-type {
  margin: 0;
}

.vfes-ms-content .logo--disabled {
  -webkit-filter: grayscale(100%);
  filter: grayscale(100%);
  opacity: 0.3;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
}

.vfes-ms-content .logo--disabled:hover {
  -webkit-filter: grayscale(0%);
  filter: grayscale(0%);
  opacity: 1;
}

@media only screen and (min-width: 40rem) {
  .vfes-ms-content .box-companias {
    display: block;
  }
}

@media only screen and (min-width: 60.625rem) {
  .vfes-ms-content .section-disp .vfes-layout__item:last-of-type {
    margin-top: 0rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
