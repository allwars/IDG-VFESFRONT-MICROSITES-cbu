/**
 * Vodafone Reboot Framework: Version 15.6.0. Generation Date: 2020-03-26T13:02:21.558Z
 */

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-hero {
    padding: 1.875rem;
  }
}

.vfes-ms-content .vfms-hero__title {
  font-size: 1.75rem;
  max-width: 12.5rem;
  margin: 0 auto;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-hero__title {
    font-size: 2.25rem;
    max-width: none;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-hero__title {
    font-size: 2.75rem;
  }
}

.vfes-ms-content .vfms-hero__subtitle {
  font-size: 1.25rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-hero__subtitle {
    font-size: 1.5rem;
  }
}

.vfes-ms-content .vfms-modal {
  overflow-y: unset;
}

.vfes-ms-content .vfms-large {
  width: 100%;
}

.vfes-ms-content .vfms-title {
  font-size: 1.25rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-title {
    font-size: 1.875rem;
  }
}

.vfes-ms-content .vfms-icon {
  width: 3rem;
  height: 3rem;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-icon {
    width: 4rem;
    height: 4rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-subtitle {
    font-size: 1.25rem;
  }
}

.vfes-ms-content .vfms-nopaddingtop {
  padding-top: 0;
}

.vfes-ms-content .vfms-nopadding {
  padding: 0;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-device__button {
    width: 18.75rem;
  }
}

.vfes-ms-content .vfes-tabs__tab {
  max-width: 10rem;
}

.vfes-ms-content .vfes-tabs__tab-button {
  padding: 0.9375rem 0;
}

.vfes-ms-content .vfms-price__size {
  font-size: 1.875rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-price__flex-direction {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-price__container {
    -webkit-box-align: center;
            align-items: center;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-tabs__title {
    font-size: 1.875rem;
  }
}

.vfes-ms-content .vfms-mobile-img {
  position: relative;
  display: block;
  margin: 0 auto;
  height: 9.375rem;
  max-width: 6.25rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-mobile-img {
    height: auto;
    max-width: none;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-mobile-img {
    min-width: 5.4375rem;
  }
}

.vfes-ms-content .vfms-form--container {
  max-width: 34.375rem;
  margin: 0 auto;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfes-flex__direction--row-column-reverse-sm {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfes-flex__direction--row-column-sm {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
  }
}

.vfes-ms-content .vfms-align__items {
  -webkit-box-align: end;
          align-items: flex-end;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-align__items {
    -webkit-box-align: start;
            align-items: flex-start;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-features {
    text-align: center;
  }
}

.vfes-ms-content .vfms-features__icon {
  min-width: 2.25rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-features__icon {
    min-width: 3rem;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-features__flex {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
    -webkit-box-align: center;
            align-items: center;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50e1xuICAgIC52Zm1zLWhlcm97XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICBwYWRkaW5nOiAzMHB4O1xuICAgICAgICB9XG4gICAgICAgICZfX3RpdGxlIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICAgICAgICAgIG1heC13aWR0aDogMjAwcHg7XG4gICAgICAgICAgICBtYXJnaW46IDAgYXV0bzsgIFxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDM2cHg7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiBub25lO1xuICAgICAgICAgICAgfSAgXG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNDRweDtcbiAgICAgICAgICAgIH0gICAgICBcbiAgICAgICAgfVxuICAgICAgICAmX19zdWJ0aXRsZSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgIH0gICBcbiAgICAgICAgfVxuICAgIH0gXG4gICAgLnZmbXMtbW9kYWwge1xuICAgICAgICBvdmVyZmxvdy15OiB1bnNldDtcbiAgICB9XG4gICAgLnZmbXMtbGFyZ2Uge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gICAgLnZmbXMtdGl0bGUge1xuICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmbXMtaWNvbiB7XG4gICAgICAgIHdpZHRoOiA0OHB4O1xuICAgICAgICBoZWlnaHQ6IDQ4cHg7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICB3aWR0aDogNjRweDtcbiAgICAgICAgICAgIGhlaWdodDogNjRweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy1zdWJ0aXRsZSB7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmbXMtbm9wYWRkaW5ndG9wIHtcbiAgICAgICAgcGFkZGluZy10b3A6IDA7XG4gICAgfVxuICAgIC52Zm1zLW5vcGFkZGluZyB7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgfVxuICAgIC52Zm1zLWRldmljZV9fYnV0dG9uIHtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgIHdpZHRoOiAzMDBweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZlcy10YWJzX190YWIge1xuICAgICAgICBtYXgtd2lkdGg6IDE2MHB4O1xuICAgIH1cbiAgICAudmZlcy10YWJzX190YWItYnV0dG9uIHtcbiAgICAgICAgcGFkZGluZzogMTVweCAwO1xuICAgIH1cbiAgICAudmZtcy1wcmljZSB7XG4gICAgICAgICZfX3NpemUge1xuICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgICAgICB9XG4gICAgICAgICZfX2ZsZXgtZGlyZWN0aW9uIHtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmX19jb250YWluZXIge1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgICAgIFxuICAgIC52Zm1zLXRhYnN7XG4gICAgICAgICZfX3RpdGxlIHtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgICAgICAgICAgfSBcbiAgICAgICAgfVxuICAgIH0gXG4gICAgLnZmbXMtbW9iaWxle1xuICAgICAgICAmLWltZ3tcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgICAgICBoZWlnaHQ6IDE1MHB4O1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDBweDtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDogbm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICAgICAgbWluLXdpZHRoOiA4N3B4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLWZvcm0ge1xuICAgICAgICAmLS1jb250YWluZXIge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA1NTBweDtcbiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICB9XG4gICAgfVxuICAgIC52ZmVzLWZsZXhfX2RpcmVjdGlvbi0tcm93LWNvbHVtbi1yZXZlcnNlLXNtIHtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmZXMtZmxleF9fZGlyZWN0aW9uLS1yb3ctY29sdW1uLXNtIHtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgIH1cbiAgICB9IFxuICAgIC52Zm1zLWFsaWduX19pdGVtcyB7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLWZlYXR1cmVze1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB9XG4gICAgICAgICZfX2ljb24ge1xuICAgICAgICAgICAgbWluLXdpZHRoOiAzNnB4O1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBtaW4td2lkdGg6IDQ4cHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJl9fZmxleCB7XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0gXG59XG5cblxuXG4gICAgIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0dRLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFGM0MsQUFDSSxnQkFEWSxDQUNaLFVBQVUsQ0FBQTtJQUVGLE9BQU8sRUFBRSxJQUFJO0dBb0JwQjs7O0FBdkJMLEFBS1EsZ0JBTFEsQ0FLUCxpQkFBTyxDQUFDO0VBQ0wsU0FBUyxFQUFFLElBQUk7RUFDZixTQUFTLEVBQUUsS0FBSztFQUNoQixNQUFNLEVBQUUsTUFBTTtDQVFqQjs7QUFQRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBVC9DLEFBS1EsZ0JBTFEsQ0FLUCxpQkFBTyxDQUFDO0lBS0QsU0FBUyxFQUFFLElBQUk7SUFDZixTQUFTLEVBQUUsSUFBSTtHQUt0Qjs7O0FBSEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWIvQyxBQUtRLGdCQUxRLENBS1AsaUJBQU8sQ0FBQztJQVNELFNBQVMsRUFBRSxJQUFJO0dBRXRCOzs7QUFoQlQsQUFpQlEsZ0JBakJRLENBaUJQLG9CQUFVLENBQUM7RUFDUixTQUFTLEVBQUUsSUFBSTtDQUlsQjs7QUFIRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBbkIvQyxBQWlCUSxnQkFqQlEsQ0FpQlAsb0JBQVUsQ0FBQztJQUdKLFNBQVMsRUFBRSxJQUFJO0dBRXRCOzs7QUF0QlQsQUF3QkksZ0JBeEJZLENBd0JaLFdBQVcsQ0FBQztFQUNSLFVBQVUsRUFBRSxLQUFLO0NBQ3BCOztBQTFCTCxBQTJCSSxn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 */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
