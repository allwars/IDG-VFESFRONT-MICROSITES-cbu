/**
 * Vodafone Reboot Framework: Version 15.6.0. Generation Date: 2020-02-05T13:48:33.163Z
 */

.vfes-ms-content .vfms-faqs-link {
  text-decoration: underline;
}

.vfes-ms-content .vfes-layout__item {
  color: #333;
}

.vfes-ms-content .vfms-banner {
  background-image:  url('../img/bg-preventa.jpg?v=6e644445d31595299904764db77d9b36');
  background-size: cover;
  padding: 2.375rem 0;
}

.vfes-ms-content .vfms-banner .vfes-title--1 {
  font-size: 1.75rem;
}

.vfes-ms-content .vfms-banner .vfes-title--4 {
  font-size: 1.25rem;
  margin-bottom: 0.3125rem;
}

.vfes-ms-content .vfms-text {
  padding-bottom: 0;
}

.vfes-ms-content .vfms-text .vfes-title {
  padding-bottom: 1.0625rem;
}

.vfes-ms-content .vfms-large {
  width: 100%;
}

.vfes-ms-content .vfms-mobile {
  padding-top: 0;
}

.vfes-ms-content .vfms-mobile-card {
  padding: 1.25rem;
}

.vfes-ms-content .vfms-mobile .vfes-tag-label__outstanding {
  left: 0;
  display: -webkit-box;
  display: flex;
}

.vfes-ms-content .vfms-mobile .vfes-tag-label__outstanding .vfms-icon {
  width: 1.25rem;
  height: 1.25rem;
}

.vfes-ms-content .vfms-mobile .vfes-tag-label::after {
  left: 0;
}

.vfes-ms-content .vfms-mobile .vfes-link {
  text-align: right;
  font-size: 1.125rem;
}

.vfes-ms-content .vfms-mobile-img {
  position: relative;
  display: block;
  margin: 0 auto;
  padding: 1.3125rem 0;
  max-width: 3.125rem;
}

.vfes-ms-content .vfms-mobile-prices {
  text-align: center;
  padding: 0.9375rem 0rem;
}

.vfes-ms-content .vfms-mobile-prices-big {
  font-size: 1.25rem;
}

.vfes-ms-content .vfms-mobile .vfms-flex {
  display: -webkit-box;
  display: flex;
  width: 100%;
  border-top: 0.0625rem solid #ccc;
  padding: 0.75rem 0 1rem 0;
  justify-content: space-around;
}

.vfes-ms-content .vfms-mobile .vfms-flex:nth-child(3) {
  border-bottom: 0.0625rem solid #ccc;
}

.vfes-ms-content .vfms-mobile .vfms-flex-left {
  display: -webkit-box;
  display: flex;
}

.vfes-ms-content .vfms-mobile .vfms-flex-left__title {
  padding-left: 0.5625rem;
}

.vfes-ms-content .vfms-mobile .vfms-flex-right {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  text-align: right;
}

.vfes-ms-content .vfms-mobile .vfms-flex-right p {
  margin-bottom: 0;
}

.vfes-ms-content .vfms-mobile .vfms-link {
  padding-top: 0.75rem;
  font-size: 1rem;
  display: block;
}

.vfes-ms-content .vfms-5g {
  background-color: #000;
}

.vfes-ms-content .vfms-5g .vfes-title {
  padding: 1.5625rem 0 1.5625rem 0;
}

.vfes-ms-content .vfms-faqs .vfes-title {
  padding: 0 0 1.25rem 0;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-banner {
    padding: 3.125rem 0;
  }
  .vfes-ms-content .vfms-banner .vfes-title--1 {
    font-size: 2.5rem;
  }
  .vfes-ms-content .vfms-banner .vfes-title--4 {
    font-size: 1.5rem;
  }
  .vfes-ms-content .vfms-text .vfes-title {
    font-size: 2.125rem;
  }
  .vfes-ms-content .vfms-mobile-img {
    max-width: 12.5rem;
  }
  .vfes-ms-content .vfms-mobile-prices-big {
    font-size: 1.4375rem;
  }
  .vfes-ms-content .vfms-mobile .vfms-flex {
    -webkit-box-pack: justify;
            justify-content: space-between;
  }
  .vfes-ms-content .vfes-layout {
    padding-top: 0.625rem;
  }
  .vfes-ms-content .vfms-5g .vfms-5g-mobiles {
    margin: 0 auto;
    display: block;
    position: relative;
  }
  .vfes-ms-content .vfms-5g .vfes-title {
    font-size: 1.5rem;
    padding: 1.5625rem 0 1.25rem 0;
  }
  .vfes-ms-content .vfms-5g .vfes-button {
    margin: 2rem 0;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-banner {
    padding: 3.125rem 0;
  }
  .vfes-ms-content .vfms-banner .vfes-title--1 {
    font-size: 3.5rem;
  }
  .vfes-ms-content .vfms-banner .vfes-title--4 {
    font-size: 1.75rem;
  }
  .vfes-ms-content .vfms-text-large {
    font-size: 1.25rem;
  }
  .vfes-ms-content .vfms-text .vfes-title {
    font-size: 2.5rem;
  }
  .vfes-ms-content .vfms-text .vfes-paragraph {
    max-width: 55rem;
    margin: 0 auto;
    display: block;
  }
  .vfes-ms-content .vfms-mobile-img {
    min-width: 5.4375rem;
  }
  .vfes-ms-content .vfms-mobile-prices {
    min-height: 11.5625rem;
  }
  .vfes-ms-content .vfms-mobile-prices-big {
    font-size: 1.4375rem;
  }
  .vfes-ms-content .vfms-mobile .vfms-flex {
    -webkit-box-pack: justify;
            justify-content: space-between;
  }
  .vfes-ms-content .vfes-layout {
    padding-top: 0.625rem;
  }
  .vfes-ms-content .vfms-5g {
    padding: 1.25rem 0 0 0;
  }
  .vfes-ms-content .vfms-5g .vfms-5g-mobiles {
    position: absolute;
    bottom: 0;
  }
  .vfes-ms-content .vfms-5g .vfes-title {
    font-size: 1.5rem;
    padding: 1.5625rem 0 1.25rem 0;
  }
  .vfes-ms-content .vfms-5g .vfes-button {
    margin: 2rem 0;
  }
  .vfes-ms-content .vfms-5g-flex {
    display: -webkit-box;
    display: flex;
  }
}

.vfes-modal {
  height: auto;
  background-color: rgba(0, 0, 0, 0.25);
  -webkit-box-align: center;
          align-items: center;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -webkit-box-pack: center;
          justify-content: center;
}

.vfes-modal__content {
  margin-top: -0.3125rem;
}

.vfes-modal .vfms-form--container {
  width: 90%;
  margin: 0 auto;
}

.vfes-modal .vfms-text--container {
  width: 90%;
  margin: 0 auto;
  margin-bottom: 1.25rem;
}

.vfes-modal .button-privacy {
  display: block;
}

.vfes-modal .vfms-input {
  margin-bottom: 0.9375rem;
}

.vfes-modal .vfms-input-left {
  margin-left: 0.625rem;
}

.vfes-modal .vfms-device-title {
  margin-bottom: 0.3125rem;
}

.vfes-modal .vfms-flex {
  display: -webkit-box;
  display: flex;
  margin-left: 0.625rem;
  padding: 0;
}

.vfes-modal .vfms-large {
  width: 100%;
}

@media screen and (min-width: 40rem) {
  .vfes-modal__content {
    margin-top: 0;
  }
  .vfes-modal .vfes-modal__item {
    max-width: 31.25rem;
  }
  .vfes-modal .vfes-modal__head {
    padding-top: 1.875rem;
    margin-bottom: -0.625rem;
  }
  .vfes-modal .vfms-form--container {
    max-width: 18.75rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-modal .vfes-modal__item {
    max-width: 43.75rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
