{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/lit-element/lib/css-tag.js","webpack:///./node_modules/lit-element/lib/decorators.js","webpack:///./node_modules/lit-element/lib/updating-element.js","webpack:///./node_modules/lit-element/lit-element.js","webpack:///./node_modules/lit-html/directives/if-defined.js","webpack:///./node_modules/lit-html/lib/default-template-processor.js","webpack:///./node_modules/lit-html/lib/directive.js","webpack:///./node_modules/lit-html/lib/dom.js","webpack:///./node_modules/lit-html/lib/modify-template.js","webpack:///./node_modules/lit-html/lib/part.js","webpack:///./node_modules/lit-html/lib/parts.js","webpack:///./node_modules/lit-html/lib/render.js","webpack:///./node_modules/lit-html/lib/shady-render.js","webpack:///./node_modules/lit-html/lib/template-factory.js","webpack:///./node_modules/lit-html/lib/template-instance.js","webpack:///./node_modules/lit-html/lib/template-result.js","webpack:///./node_modules/lit-html/lib/template.js","webpack:///./node_modules/lit-html/lit-html.js","webpack:///./resources/assets/scripts/es/_accordion.js","webpack:///./resources/assets/scripts/es/_autocomplete.js","webpack:///./resources/assets/scripts/es/_carousel.js","webpack:///./resources/assets/scripts/es/_dropdown.js","webpack:///./resources/assets/scripts/es/_eq-height.js","webpack:///./resources/assets/scripts/es/_swipe.js","webpack:///./resources/assets/scripts/es/config/env.js","webpack:///./resources/assets/scripts/webComponents/accordion/accordion.js","webpack:///./resources/assets/scripts/webComponents/accordion/accordionLinks.js","webpack:///./resources/assets/scripts/webComponents/avatar/avatar.js","webpack:///./resources/assets/scripts/webComponents/avatar/avatarImage.js","webpack:///./resources/assets/scripts/webComponents/avatar/avatarText.js","webpack:///./resources/assets/scripts/webComponents/boloText/boloText.js","webpack:///./resources/assets/scripts/webComponents/button/button.js","webpack:///./resources/assets/scripts/webComponents/button/buttonLink.js","webpack:///./resources/assets/scripts/webComponents/card/card.js","webpack:///./resources/assets/scripts/webComponents/card/cardMobile.js","webpack:///./resources/assets/scripts/webComponents/carousel/carousel.js","webpack:///./resources/assets/scripts/webComponents/carousel/carouselItem.js","webpack:///./resources/assets/scripts/webComponents/custom.js","webpack:///./resources/assets/scripts/webComponents/dropdown/dropdown.js","webpack:///./resources/assets/scripts/webComponents/dropdown/dropdownCard.js","webpack:///./resources/assets/scripts/webComponents/dropdown/dropdownItem.js","webpack:///./resources/assets/scripts/webComponents/dropdown/dropdownTiles.js","webpack:///./resources/assets/scripts/webComponents/form/autocompleteItem.js","webpack:///./resources/assets/scripts/webComponents/form/checkItem.js","webpack:///./resources/assets/scripts/webComponents/form/inputAutocomplete.js","webpack:///./resources/assets/scripts/webComponents/form/inputItem.js","webpack:///./resources/assets/scripts/webComponents/form/radioItem.js","webpack:///./resources/assets/scripts/webComponents/form/switchItem.js","webpack:///./resources/assets/scripts/webComponents/icon.js","webpack:///./resources/assets/scripts/webComponents/tagLabel/tagLabel.js","webpack:///./resources/assets/scripts/webComponents/vf-components.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,MAAM;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,mC;;;;;;;;;;;;ACxEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,2BAA2B,YAAY;AACvC;AACA,SAAS,EAAE;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,cAAc;AACnD;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;ACpMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,KAAK;AACpE;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACboBAAoB,YAAY;AAChC,wBAAwB,IAAI;AAC5B,iBAAiB,QAAQ;AACziBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;ACtlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC0C;AACY;AACM;AAClB;AACN;AACgD;AACrB;AAC9B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,YAAY;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,yBAAyB,wEAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2EAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,uDAAc;AACpD;AACA,0DAA0D,gDAAgD;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB;AACA;AACA,oBAAoB,mEAAM;AAC1B,uC;;;;;;;;;;;;ACvMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACO,kBAAkB,8DAAS;AAClC,+CAA+C,0DAAa;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,sC;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8G;AAC9G;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2DAAiB;AACnD;AACA;AACA;AACA,wBAAwB,mDAAS;AACjC;AACA;AACA,wBAAwB,8DAAoB;AAC5C;AACA,8BAA8B,4DAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kDAAQ;AAC3B;AACA;AACO;AACP,sD;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mCAAmC,KAAK,QAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACO;AACP;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA,qC;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACqD;AACrD,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,WAAW,UAAU,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA,YAAY,yEAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,WAAW,UAAU,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;AC/HA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP,gC;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC6C;AACN;AACO;AACY;AACJ;AACT;AACtC;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB,iDAAQ;AAC9B;AACA;AACA;AACA;AACA,iBAAiB,iEAAW;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAW;AAC1B;AACA,yBAAyB,iDAAQ;AACjC;AACA;AACA,2BAA2B,iDAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,iEAAY;AAC3D,6CAA6C,iEAAY;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iEAAY;AACnD,qCAAqC,iEAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iEAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAW;AAC1B;AACA,kCAAkC,iDAAQ;AAC1C;AACA;AACA;AACA,sBAAsB,iDAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kEAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gDAAO;AAClC,yBAAyB,gDAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sEAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sEAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2DAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAW;AAC1B;AACA,kCAAkC,iDAAQ;AAC1C;AACA;AACA,oCAAoC,iDAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iDAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAW;AAC1B;AACA,kCAAkC,iDAAQ;AAC1C;AACA;AACA,oCAAoC,iDAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iDAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uDAAuD;AAChE;AACA,iC;;;;;;;;;;;;AC5bA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACuC;AACD;AACkB;AACjD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,QAAQ,2DAAW;AACnB,wCAAwC,kDAAQ,gBAAgB,CAAC,qFAAe,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACuC;AACgD;AAC9B;AACF;AACG;AACJ;AACL;AACU;AAC3D;AACA,oDAAoD,KAAK,IAAI,UAAU;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,wBAAwB,mEAAc;AACtC;AACA;AACA;AACA;AACA;AACA,QAAQ,mEAAc;AACtB;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAc;AACxC;AACA;AACA,uBAAuB,WAAW,UAAU,EAAE;AAC9C;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,mFAAuB;AACvC,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,kFAAsB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mFAAuB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,wBAAwB,gDAAK;AAC7B;AACA;AACA,8CAA8C,kEAAc;AAC5D;AACA;AACA,qDAAqD;AACrD;AACA;AACA,IAAI,yDAAS,yCAAyC,mDAAmD;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gDAAK;AAC1B,QAAQ,gDAAK;AACb,kCAAkC,sEAAgB;AAClD;AACA;AACA,QAAQ,2DAAW;AACnB;AACA,QAAQ,gDAAK;AACb;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;ACtQA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiD;AACjD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA;AACA,uBAAuB,qDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,4C;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACa;AACrD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAY;AACrC;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,mFAAmF,qBAAqB;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yEAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oDAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;ACxIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACyC;AACwD;AACjG;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mEAAsB;AACzD;AACA;AACA;AACA,yDAAyD,MAAM;AAC/D,8BAA8B,MAAM;AACpC;AACA,gDAAgD,mDAAM,GAAG,uDAAU;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iEAAoB;AAC5D,oBAAoB,mDAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6DAAa;AACrB;AACA;AACA;AACA,2C;;;;;;;;;;;;AC/GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kBAAkB,MAAM,iCAAiC;AAChE;AACA;AACA;AACA;AACO,0BAA0B,OAAO;AACjC,kCAAkC,OAAO,GAAG,WAAW;AAC9D;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,0FAA0F,qBAAqB;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB,SAAS,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mDAAmD;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,+BAA+B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sBAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0BAA0B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,oC;;;;;;;;;;;;ACpsH;AACxH;AAC4B;AACd;AACe;AACI;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,yCAAyC,sEAAc,0BAA0B,2FAAwB;AAChH;AACA;AACA;AACA;AACO,wCAAwC,yEAAiB,yBAAyB,2FAAwB;AACjH,oC;;;;;;;;;;;;ACzDA;AAAA;AAAA;AAAA;AAA+B;AACK;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mDAAG,UAAU;AACjC,KAAK;AACL;AACA,mBAAmB,mDAAG,UAAU;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACe;AACf,+BAA+B;AAC/B,4BAA4B,kDAAQ;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wDAAwD,6BAA6B;AACrF,0DAA0D,8BAA8B;AACxF,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA,+BAA+B;;AAE/B;;AAEA,iCAAiC;AACjC;AACA;AACA;;;;;;;;;;;;;AClIA;AAAA;AAAA;AAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACe;AACf,+BAA+B;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,uCAAuC;AAClH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,kCAAkC,OAAO,sBAAsB;;AAE/I;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,wCAAwC;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,oCAAoC,wBAAwB;AAC5D;AACA;AACA,6D;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACrKA;AAAA;AAAA;AAAA;AAA+B;AACF;;AAE7B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mBAAmB,mDAAG,UAAU;AAChC,kBAAkB,mDAAG,UAAU;AAC/B,sBAAsB,mDAAG,UAAU;AACnC,uBAAuB,mDAAG,UAAU;AACpC,0BAA0B,mDAAG,UAAU;AACvC,oBAAoB,mDAAG,UAAU;AACjC,mBAAmB,mDAAG,UAAU;AAChC,yBAAyB,mDAAG,UAAU;AACtC,0BAA0B,mDAAG,UAAU;AACvC;AACA,mBAAmB,mDAAG,UAAU;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACe;AACf,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B,8CAAK;AAChC;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,iCAAiC;AACjC,mCAAmC;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,uBAAuB,mBAAmB;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,SAAS;;AAET;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;;AAEA;AACA;AACA;;AAEA;AACA,6G;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC3fA;AAAA;AAAA;AAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,mDAAG,UAAU;AAC9B;AACA;AACA;AACA,iBAAiB,mDAAG,UAAU;AAC9B,iBAAiB,mDAAG,UAAU;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACe;AACf,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA,kDAAkD;AAClD;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;AACA,kCAAkC;AAClC;AACA,kC;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa,4BAA4B;AACzC;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,sCAAsC;AACtC;AACA,oDAAoD;;AAEpD,iBAAiB,4BAA4B;AAC7C;AACA,iC;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA,iBAAiB,4BAA4B;AAC7C;;AAEA,iBAAiB,2BAA2B;AAC5C;AACA,iBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA,2BAA2B,UAAU;AACrC;AACA,sDAAsD,mDAAG,UAAU,WAAW,mDAAG,UAAU,iBAAiB,mDAAG,UAAU,YAAY,WAAW,IAAI,mBAAmB;AACvK;AACA;AACA;AACA,aAAa;AACb;AACA,sDAAsD,mDAAG,UAAU,8BAA8B,mDAAG,UAAU,mBAAmB,mDAAG,UAAU,YAAY,UAAU,MAAM,OAAO;AACjL;AACA;AACA;AACA;;;;;;;;;;;;;AChPA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACe;AACf,+BAA+B;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,2CAA2C,4BAA4B;AACvE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,eAAe;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C,6CAA6C;;AAE7C,wCAAwC,WAAW;;AAEnD;AACA;AACA;AACA;AACA;AACA,uCAAuC,sDAAsD;AAC7F;AACA;AACA,uCAAuC,sDAAsD;AAC7F;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,0CAA0C,4CAA4C;;AAEtF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,yCAAyC;AACnF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,2BAA2B;AACrE;AACA;;;;;;;;;;;;;AChHA;AAAA;AAAA;AAA+B;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;ACrFA;AAAA;AACA;AACA;AACe,kEAAG,EAAC;;;;;;;;;;;;;ACHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACkC;AACS;AACL;;AAEtC;AACO,4BAA4B,kDAAU;AAC7C;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA,wBAAwB,qDAAS,EAAE,0BAA0B;AAC7D;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,kBAAkB;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AACkC;AACI;;AAEtC;AACO,gCAAgC,kDAAU;AACjD;AACA,WAAW,gDAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AACkC;AACI;;AAEtC;AACO,yBAAyB,kDAAU;AAC1C;AACA;AACA,gBAAgB,eAAe;AAC/B,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf,qDAAqD,UAAU,iBAAiB,aAAa;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AACuC;AACD;;AAEtC;AACO,8BAA8B,kDAAU;AAC/C;AACA;AACA,YAAY,eAAe;AAC3B,YAAY;AACZ;AACA;;AAEA;AACA,WAAW,+CAAG;AACd;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,gDAAI;AACf,uFAAuF,SAAS,SAAS,SAAS;AAClH;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AACkC;AACI;;AAEtC;AACO,6BAA6B,kDAAU;AAC9C;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,WAAW,gDAAI;AACf,8CAA8C,UAAU,uCAAuC,UAAU;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AACkC;AACI;;AAEtC;AACO,2BAA2B,kDAAU;AAC5C;AACA;AACA,aAAa,eAAe;AAC5B,YAAY,eAAe;AAC3B,aAAa,eAAe;AAC5B,YAAY,eAAe;AAC3B,iBAAiB,eAAe;AAChC,oBAAoB,eAAe;AACnC,kBAAkB,eAAe;AACjC,iBAAiB,eAAe;AAChC,oBAAoB,eAAe;AACnC,kBAAkB,eAAe;AACjC,wBAAwB,eAAe;AACvC,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf,iCAAiC,eAAe,iBAAiB,aAAa;AAC9E,4CAA4C,kBAAkB;AAC9D,yCAAyC,SAAS;AAClD;;AAEA,UAAU,gBAAgB,gDAAI,oFAAoF,cAAc;AAChI,UAAU,mBAAmB,gDAAI,wFAAwF,iBAAiB;AAC1I,UAAU;AACV,UAAU,gDAAI;AACd,gEAAgE,qBAAqB;AACrF;AACA,YAAY,gDAAI,GAAG;AACnB,UAAU,iBAAiB,gDAAI,oFAAoF,eAAe;AAClI,UAAU;AACV,YAAY,gDAAI;AAChB;AACA,2DAA2D,cAAc;AACzE,oFAAoF,iBAAiB;AACrG;AACA;AACA,YAAY,gDAAI;AAChB;AACA;AACA,UAAU,iBAAiB,gDAAI,wBAAwB,eAAe;AACtE,0CAA0C,UAAU;AACpD,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9EA;AAAA;AAAA;AAAA;AAAA;AAAA;AACkC;AAC2B;AACvB;;AAEtC;AACO,yBAAyB,kDAAU;AAC1C;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,eAAe;AAC5B,aAAa,eAAe;AAC5B,cAAc,eAAe;AAC7B,iBAAiB,gBAAgB;AACjC,yBAAyB,eAAe;AACxC,yBAAyB;AACzB;AACA;;AAEA;AACA,WAAW,gDAAI;AACf;AACA;AACA,iBAAiB,mFAAS,YAAY;AACtC,iBAAiB,WAAW;AAC5B,oDAAoD,UAAU;AAC9D,kCAAkC,mFAAS,wBAAwB;AACnE,kCAAkC,mFAAS,wBAAwB;AACnE;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AACkC;AACI;;AAEtC;AACO,6BAA6B,kDAAU;AAC9C;AACA;AACA,aAAa,eAAe;AAC5B,cAAc,eAAe;AAC7B,aAAa;AACb;AACA;;AAEA;AACA,WAAW,gDAAI;AACf,iBAAiB,UAAU,WAAW,WAAW,8CAA8C,UAAU;AACzG;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAkC;AACI;;AAE/B,uBAAuB,kDAAU;AACxC;AACA;AACA,gBAAgB,eAAe;AAC/B,mBAAmB,gBAAgB;AACnC,iBAAiB,gBAAgB;AACjC,oBAAoB,eAAe;AACnC,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf,kCAAkC,2BAA2B,uBAAuB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAkC;AACI;;AAE/B,6BAA6B,kDAAU;AAC9C;AACA;AACA,eAAe,eAAe;AAC9B,eAAe,eAAe;AAC9B,cAAc,eAAe;AAC7B,qBAAqB,eAAe;AACpC,eAAe,eAAe;AAC9B,oBAAoB,eAAe;AACnC,sBAAsB,eAAe;AACrC,YAAY;AACZ;AACA;;AAEA;AACA,WAAW,gDAAI;AACf,gDAAgD,YAAY,SAAS,YAAY;AACjF;AACA,4DAA4D,WAAW;AACvE;AACA,UAAU;AACV,UAAU,gDAAI;AACd,oBAAoB,kBAAkB;AACtC;AACA,UAAU,cAAc,gDAAI,SAAS,YAAY;AACjD,UAAU;AACV,UAAU,gDAAI,WAAW,iBAAiB;AAC1C;AACA;AACA;AACA,QAAQ;AACR,QAAQ,gDAAI;AACZ;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf;AACA;AACA;AACA,YAAY;AACZ,YAAY,gDAAI;AAChB;AACA,2DAA2D,SAAS;AACpE,kBAAkB;AAClB;AACA,YAAY,gDAAI;AAChB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACkC;AACI;AACG;;AAEzC;AACO,2BAA2B,kDAAU;AAC5C;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,oDAAQ;AAClC;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChEA;AAAA;AAAA;AAAA;AAAA;AACkC;AACI;;AAEtC;AACO,+BAA+B,kDAAU;AAChD;AACA;AACA,gBAAgB,eAAe;AAC/B,eAAe;AACf;AACA;;AAEA;AACA,WAAW,gDAAI;AACf;AACA,8BAA8B,aAAa,eAAe,aAAa;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAA8C;AACb;;AAEjC;AACO,yBAAyB,sDAAU;AAC1C;AACA,WAAW,gDAAI;AACf;;AAEA,MAAM;AACN;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AACkC;AACO;AACH;;AAEtC;AACO,2BAA2B,kDAAU;AAC5C;AACA;AACA,eAAe,eAAe;AAC9B,cAAc,eAAe;AAC7B,oBAAoB,eAAe;AACnC,iBAAiB,gBAAgB;AACjC,cAAc,eAAe;AAC7B,6BAA6B,eAAe;AAC5C,6BAA6B,eAAe;AAC5C,4BAA4B;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,oDAAQ,EAAE,oCAAoC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,gDAAI;AACf;AACA;AACA;AACA,4CAA4C,YAAY;;AAExD;AACA,iEAAiE,gBAAgB;AACjF,gCAAgC,cAAc;AAC9C;AACA,4BAA4B,WAAW;AACvC;AACA,gIAAgI,iBAAiB;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACkC;AACI;AACtB;AACU;;AAE1B;AACO,+BAA+B,kDAAU;AAChD;AACA;AACA,cAAc,eAAe;AAC7B,aAAa,eAAe;AAC5B,aAAa,cAAc;AAC3B,eAAe,eAAe;AAC9B,gBAAgB,eAAe;AAC/B,kBAAkB,eAAe;AACjC,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf;AACA;AACA;AACA;AACA;AACA,kBAAkB,aAAa;AAC/B,oBAAoB,eAAe;AACnC,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gFAAgF,UAAU;AAC1F,cAAc,sBAAsB,gDAAI,oHAAoH,KAAK;AACjK,+FAA+F,YAAY;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzDA;AAAA;AAAA;AAAA;AAAA;AACkC;AACI;;AAEtC;AACO,+BAA+B,kDAAU;AAChD;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,eAAe;AAC5B,cAAc;AACd;AACA;;AAEA;AACA,WAAW,gDAAI;AACf,uEAAuE,WAAW;AAClF;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,gBAAgB,UAAU;AAC1B,iBAAiB,WAAW;AAC5B,6EAA6E,QAAQ;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACkC;AACI;AACtB;AACU;;AAE1B;AACO,gCAAgC,kDAAU;AACjD;AACA;AACA,cAAc,eAAe;AAC7B,aAAa,eAAe;AAC5B,aAAa,cAAc;AAC3B,eAAe,eAAe;AAC9B,gBAAgB,eAAe;AAC/B,kBAAkB,eAAe;AACjC,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf;AACA;AACA;AACA;AACA,kBAAkB,aAAa;AAC/B,oBAAoB,eAAe;AACnC,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,cAAc,sBAAsB,gDAAI,oHAAoH,KAAK;AACjK,gFAAgF,UAAU;AAC1F,uFAAuF,YAAY;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACuC;AACD;AACtB;;AAEhB;AACO,mCAAmC,kDAAU;AACpD;AACA,WAAW,+CAAG;AACd;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,gDAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACuC;AACsB;AACtB;;AAEvC;AACO,4BAA4B,kDAAU;AAC7C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,gB;AACA;AACA;AACA,OAAO;AACP,mBAAmB,eAAe;AAClC,iBAAiB,gBAAgB;AACjC,mBAAmB,gBAAgB;AACnC,eAAe;AACf;AACA;;AAEA;AACA,WAAW,+CAAG;AACd;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gDAAI;AACf;AACA,eAAe,+BAA+B,uBAAuB,gBAAgB;AACrF;AACA,WAAW;AACX,cAAc,mFAAS;AACvB,iBAAiB;AACjB,kBAAkB;AAClB,iBAAiB,sBAAsB;AACvC,qCAAqC,uCAAuC,SAAS,GAAG;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACuC;AACD;AACY;AAClC;;AAEhB;AACO,oCAAoC,kDAAU;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAY;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,cAAc,eAAe;AAC7B;AACA;AACA;AACA,OAAO;AACP,oBAAoB,eAAe;AACnC,gBAAgB,eAAe;AAC/B,eAAe,gBAAgB;AAC/B,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf;AACA;AACA,8DAA8D,gBAAgB;AAC9E,4BAA4B,oBAAoB;AAChD;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B,kBAAkB,WAAW;AAC7B,uBAAuB,iBAAiB;AACxC;AACA,2CAA2C,aAAa;AACxD;AACA;AACA,QAAQ;AACR,QAAQ,gDAAI,oFAAoF,iBAAiB;AACjH;AACA;AACA;AACA;AACA;AACA,QAAQ,gDAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC4C;AACN;AACtB;;AAEhB;AACO,4BAA4B,kDAAU;AAC7C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,c;AACA;AACA;AACA,OAAO;AACP,iBAAiB,gBAAgB;AACjC,qBAAqB,eAAe;AACpC,oBAAoB,eAAe;AACnC,cAAc,eAAe;AAC7B,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,+CAAG;AACd;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf;AACA,iBAAiB,iBAAiB;AAClC,0CAA0C,gBAAgB;AAC1D;AACA,aAAa,QAAQ;AACrB,eAAe,UAAU;AACzB,gBAAgB,WAAW;AAC3B,kBAAkB;AAClB,uBAAuB,kBAAkB;AACzC,qBAAqB,iBAAiB;AACtC,yCAAyC,aAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpFA;AAAA;AAAA;AAAA;AAAA;AACuC;AACA;;AAEvC;AACO,4BAA4B,kDAAU;AAC7C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,mBAAmB;AACnB;AACA;;AAEA;AACA,WAAW,+CAAG;AACd;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,WAAW,gDAAI;AACf;AACA,wBAAwB,kBAAkB;AAC1C,iBAAiB,iBAAiB;AAClC,0CAA0C,gBAAgB;AAC1D;AACA,YAAY,GAAG;AACf,eAAe,UAAU;AACzB,gBAAgB,WAAW;AAC3B,iBAAiB;AACjB,kBAAkB,cAAc;AAChC,2CAA2C,GAAG;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AACuC;AACA;;AAEvC;AACO,6BAA6B,kDAAU;AAC9C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,iBAAiB,gBAAgB;AACjC,aAAa;AACb;AACA;;AAEA;AACA,WAAW,+CAAG;AACd;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gDAAI;AACf;AACA,iBAAiB,kBAAkB;AACnC,2CAA2C,eAAe;AAC1D;AACA,YAAY,GAAG;AACf,eAAe,UAAU;AACzB,kBAAkB,aAAa;AAC/B,kBAAkB,cAAc;AAChC,kDAAkD,GAAG;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtDA;AAAA;AAAA;AAAA;AAAA;AACuD;AAClB;;AAErC;AACO,uBAAuB,kDAAU;AACxC;AACA;AACA,cAAc,eAAe;AAC7B,cAAc,eAAe;AAC7B,aAAa,eAAe;AAC5B,eAAe,eAAe;AAC9B,cAAc;AACd;AACA;;AAEA,uB;AACA,WAAW,+CAAG;AACd,a;AACA,kBAAkB,6DAAS;AAC3B;AACA;AACA,G;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf,QAAQ,+CAAG,eAAe,WAAW,YAAY,YAAY,WAAW,WAAW;AACnF,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AACkC;AACI;;AAEtC;AACO,2BAA2B,kDAAU;AAC5C;AACA;AACA,cAAc,eAAe;AAC7B,eAAe,gBAAgB;AAC/B,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf;AACA;AACA;AACA,2DAA2D,WAAW,GAAG,iBAAiB,GAAG,gBAAgB;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqB;AACF;AACe;AACK;AACX;AACK;AACD;AACA;AACJ;AACI;AACR;AACM;AACE;AACI;AACJ;AACI;AACA;AACC;AACD;AACP;AACQ;AACR;AACA;AACC","file":"vf-components.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./resources/assets/scripts/webComponents/vf-components.js\");\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign({}, element, { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign({}, element, { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options) => \n// Return value typed as any to prevent TypeScript from complaining that\n// standard decorator function signature does not match TypeScript decorator\n// signature\n// TODO(kschaaf): unclear why it was only failing on this decorator and not\n// the others\n((protoOrDescriptor, name) => (name !== undefined) ?\n    legacyEventOptions(options, protoOrDescriptor, name) :\n    standardEventOptions(options, protoOrDescriptor));\n//# sourceMappingURL=decorators.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst microtaskPromise = Promise.resolve(true);\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        this._updatePromise = microtaskPromise;\n        this._hasConnectedResolver = undefined;\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        Object.defineProperty(this.prototype, name, {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        });\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        if (this.hasOwnProperty(JSCompiler_renameProperty('finalized', this)) &&\n            this.finalized) {\n            return;\n        }\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (typeof superCtor.finalize === 'function') {\n            superCtor.finalize();\n        }\n        this.finalized = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        this._updateState = this._updateState | STATE_HAS_CONNECTED;\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection and if one is pending connection the\n        // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n        // update, otherwise requestUpdate.\n        if (this._hasConnectedResolver) {\n            this._hasConnectedResolver();\n            this._hasConnectedResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor._classProperties.get(propName) || defaultPropertyDeclaration;\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor._classProperties.get(name) || defaultPropertyDeclaration;\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        // Mark state updating...\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        let resolve;\n        let reject;\n        const previousUpdatePromise = this._updatePromise;\n        this._updatePromise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await previousUpdatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        // Make sure the element has connected before updating.\n        if (!this._hasConnected) {\n            await new Promise((res) => this._hasConnectedResolver = res);\n        }\n        try {\n            const result = this.performUpdate();\n            // If `performUpdate` returns a Promise, we await it. This is done to\n            // enable coordinating updates with a scheduler. Note, the result is\n            // checked to avoid delaying an additional microtask unless we need to.\n            if (result != null) {\n                await result;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n        resolve(!this._hasRequestedUpdate);\n    }\n    get _hasConnected() {\n        return (this._updateState & STATE_HAS_CONNECTED);\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            throw e;\n        }\n        finally {\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update. This getter can be implemented to\n     * await additional state. For example, it is sometimes useful to await a\n     * rendered element before fulfilling this Promise. To do this, first await\n     * `super.updateComplete` then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement.finalized = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateResult } from 'lit-html';\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.0');\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(styles, result = []) {\n    for (let i = 0, length = styles.length; i < length; i++) {\n        const value = styles[i];\n        if (Array.isArray(value)) {\n            arrayFlat(value, result);\n        }\n        else {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles) => styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\nexport class LitElement extends UpdatingElement {\n    /** @nocollapse */\n    static finalize() {\n        super.finalize();\n        // Prepare styling that is stamped at first render time. Styling\n        // is built from user provided `styles` or is inherited from the superclass.\n        this._styles =\n            this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n                this._getUniqueStyles() :\n                this._styles || [];\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Take care not to call `this.styles` multiple times since this generates\n        // new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.styles;\n        const styles = [];\n        if (Array.isArray(userStyles)) {\n            const flatStyles = flattenStyles(userStyles);\n            // As a performance optimization to avoid duplicated styling that can\n            // occur especially when composing via subclassing, de-duplicate styles\n            // preserving the last item in the list. The last item is kept to\n            // try to preserve cascade order with the assumption that it's most\n            // important that last added styles override previous styles.\n            const styleSet = flatStyles.reduceRight((set, s) => {\n                set.add(s);\n                // on IE set.add does not return the set.\n                return set;\n            }, new Set());\n            // Array.from does not work on Set in IE\n            styleSet.forEach((v) => styles.unshift(v));\n        }\n        else if (userStyles) {\n            styles.push(userStyles);\n        }\n        return styles;\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        super.update(changedProperties);\n        const templateResult = this.render();\n        if (templateResult instanceof TemplateResult) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n    render() {\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n */\nLitElement.finalized = true;\n/**\n * Render method used to render the lit-html TemplateResult to the element's\n * DOM.\n * @param {TemplateResult} Template to render.\n * @param {Element|DocumentFragment} Node into which to render.\n * @param {String} Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive } from '../lit-html.js';\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = directive((value) => (part) => {\n    if (value === undefined && part instanceof AttributePart) {\n        if (value !== part.value) {\n            const name = part.committer.name;\n            part.committer.element.removeAttribute(name);\n        }\n    }\n    else {\n        part.setValue(value);\n    }\n});\n//# sourceMappingURL=if-defined.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = value;\n        }\n        else {\n            this.__commitNode(document.createTextNode(typeof value === 'string' ? value : String(value)));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result a TemplateResult created by evaluating a template tag like\n *     `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (renderedDOM, template, scopeName) => {\n    shadyRenderSet.add(scopeName);\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        window.ShadyCSS.prepareTemplateStyles(template.element, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = template.element.content;\n    insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(template.element, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host && result instanceof TemplateResult;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        if (part.value instanceof TemplateInstance) {\n            prepareTemplateStyles(renderContainer, part.value.template, scopeName);\n        }\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? marker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.0.0');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","import env from './config/env';\nimport EqHeight from './_eq-height';\n\nconst defaults = {\n    $element: undefined,\n    selectors: {\n        accordion: '.js-accordion',\n        item: '.js-accordion-item',\n        heading: '.js-accordion-heading',\n        active: `.${env.nsPrefix}accordion__heading--active`\n    },\n    classes: {\n        active: `${env.nsPrefix}accordion__heading--active`\n    }\n};\n\n/**\n * Accordion.\n *\n * @module Accordion\n * @param {Object} properties - specifies the configurations\n * for the module.\n */\nexport default class Accordion {\n    constructor(properties = {}) {\n        this.eqHeight = new EqHeight(properties);\n        this.accordion = properties.$element;\n        this.selectors = defaults.selectors;\n        this.classes = defaults.classes;\n        this.items = this.accordion.querySelectorAll(this.selectors.item);\n    }\n\n    /**\n     * Initialise the module.\n     *\n     * @function init\n     *\n     * @return undefined\n     */\n    init() {\n        this.bind();\n    }\n\n    /**\n     * Show the accordion item content.\n     *\n     * @function showContent\n     * @param {HTMLElement} heading - heading element of accordion item.\n     *\n     * @return undefined\n     */\n    showContent(heading) {\n        heading.classList.add(this.classes.active);\n        heading.setAttribute('aria-expanded', 'true');\n        heading.nextElementSibling.setAttribute('aria-hidden', 'false');\n    }\n\n    /**\n     * Hide the accordion item content.\n     *\n     * @function hideContent\n     * @param {HTMLElement} heading - heading element of accordion item.\n     *\n     * @return undefined\n     */\n    hideContent(heading) {\n        heading.classList.remove(this.classes.active);\n        heading.setAttribute('aria-expanded', 'false');\n        heading.nextElementSibling.setAttribute('aria-hidden', 'true');\n    }\n\n    /**\n     * Bind the events to the actionable elements within the accordion system.\n     *\n     * @function bind\n     *\n     * @return undefined\n     */\n    bind() {\n        const $this = this;\n\n        [].forEach.call(this.items, accordionItem => {\n            let heading = accordionItem.querySelector(this.selectors.heading);\n            heading.addEventListener('click', event => {$this.toggle(event, heading)});\n            heading.addEventListener('keydown', event => {$this.keydown(event, heading)});\n        });\n    }\n\n    /**\n     * Link the keyboard key pressed to the\n     * appropriate callback function.\n     *\n     * @function keydown\n     * @param {$.Event} event - specifies the keydown event.\n     * @param {HTMLElement} heading - heading of accordion item.\n     *\n     * @return undefined\n     */\n    keydown(event, heading) {\n        if (event.keyCode === 13) {\n            this.toggle(event, heading);\n        }\n    }\n\n    /**\n     * Toggle the visibility of the accordion content.\n     *\n     * @function toggle\n     * @param {$.Event} event - specifies the click event.\n     * @param {HTMLElement} heading - heading of accordion item.\n     *\n     * @return undefined\n     */\n    toggle(event, heading) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if(heading.classList.contains(this.classes.active)) {\n            this.hideContent(heading);\n        } else {\n            let activeHeading = this.accordion.querySelector(this.selectors.active);\n            let contentEqHeight = heading.nextElementSibling.querySelector('[data-vfes-js*=\"_eqHeight\"]');\n            \n            if(activeHeading) { this.hideContent(activeHeading) }\n            \n            this.showContent(heading);\n\n            if(contentEqHeight) { this.eqHeight.init(contentEqHeight) }\n        }\n    }\n}\n","import env from './config/env';\n\nconst defaults = {\n    $element: undefined,\n    selectors: {\n        autocompleteOption: '.js-form-autocomplete-list-option',\n        autocompleteList: '.js-form-autocomplete-list',\n        autocomplete: `.js-form-autocomplete`,\n        selected: '.selected',\n        hidden: '.hidden'\n    },\n    classes: {\n        autocompleteOption: 'js-form-autocomplete-list-option',\n        autocompleteList: 'js-form-autocomplete-list',\n        autocomplete: `js-form-autocomplete`,\n        focused: 'focused',\n        selected: 'selected',\n        hidden: 'hidden'\n    }\n};\n\n/**\n * Autocomplete.\n *\n * @module Autocomplete\n * @param {Object} properties - specifies the configurations\n * for the module.\n */\nexport default class Autocomplete {\n    constructor(properties = {}) {\n        const autocomplete    = properties.$element;\n\n        this.autocomplete     = autocomplete;\n        this.classes    = defaults.classes;\n        this.selectors  = defaults.selectors;\n        this.pos = -1;\n        this.optionList = properties.$options;\n    }\n\n    /**\n     * Initialise the module.\n     *\n     * @function init\n     *\n     * @return undefined\n     */\n\n    init(firstTime = true) {\n\n        this.associateEvents();\n    }\n\n    /**\n    * Function to associate every listeners to our custom select and default select\n    *\n    * @function associateEvents\n    *\n    * @return undefined\n    */\n    associateEvents() {\n        const $this = this;\n        const autocomplete = $this.autocomplete;\n        const autocompleteList = autocomplete.parentNode.querySelector(`#${autocomplete.getAttribute('aria-owns')}`);\n        let autocompleteListOptions = $this.optionList || autocompleteList.querySelectorAll(this.selectors.autocompleteOption);\n\n        autocomplete.addEventListener('keyup', e => {\n            let optionSelected = autocompleteList.querySelector($this.selectors.selected);\n\n            switch(e.which) {\n                case 9: // Tabulator\n                    //$this.hideOptions();\n                    break;\n                case 40: // Arrow down\n                case 38: // Arrow up\n                    e.preventDefault();\n                    let pos = e.which === 40 ? 1 : -1;\n                    let optionListViewed = autocompleteList.querySelectorAll(`${this.selectors.autocompleteOption}:not(${this.selectors.hidden})`);\n\n                    $this.pos += pos;\n\n                    if (optionListViewed.length > 0 && autocomplete.getAttribute('aria-expanded') === 'false') {\n                        $this.showOptions();\n                    }\n\n                    if (optionSelected) {\n                        if($this.pos < 0) {\n                            $this.pos = optionListViewed.length - 1;\n                        } else if ($this.pos >= optionListViewed.length) {\n                            $this.pos = 0;\n                        }\n                        optionSelected.classList.remove($this.classes.selected);\n                        optionListViewed[$this.pos].classList.add($this.classes.selected);\n                    } else {\n                        if (optionListViewed.length > 0) {\n                            $this.pos = $this.pos < 0 ? optionListViewed.length - 1 : $this.pos;\n                            optionListViewed[$this.pos].classList.add($this.classes.selected);\n                        } else {\n                            $this.pos = -1;\n                        }\n                    }\n                    break;\n                    \n                case 13: // Enter\n                    if (optionSelected) {\n                        autocomplete.value = optionSelected.innerText;\n                        optionSelected.classList.remove($this.classes.selected);\n                        $this.pos = -1;\n                        $this.hideOptions();\n                        $this.displayOptions(autocompleteListOptions);\n                    } else if (autocomplete.value === '') {\n                        $this.pos = -1;\n                        $this.hideOptions();\n                    }\n                    break;\n                case 27: // Escape\n                    if(optionSelected) { optionSelected.classList.remove(this.classes.selected) }\n                    \n                    $this.pos = -1;\n                    $this.hideOptions();\n                    break;\n\n                default: \n                    $this.displayOptions(autocompleteListOptions);\n                    $this.showOptions();\n            }\n        });\n        \n        [].forEach.call(autocompleteListOptions, option => {\n            option.addEventListener('click', e => {\n                e.preventDefault();\n                autocomplete.value = option.innerText;\n                autocomplete.focus();\n                $this.displayOptions(autocompleteListOptions);\n            });\n        });\n\n        autocomplete.addEventListener('focusin', e => {\n            $this.showOptions();\n        });\n        \n        document.addEventListener('click', e => {\n            if(e.target.localName !== 'vfes-input-autocomplete' && !e.target.classList.contains($this.classes.autocomplete)) {\n                $this.hideOptions();\n            }\n        });\n    }\n\n    displayOptions (optionList) {\n        let regexp = new RegExp(`^${this.autocomplete.value}`, 'gi');\n        [].forEach.call(optionList, (option) => {\n            if (regexp.test(option.innerText)) {\n                option.classList.remove(this.classes.hidden);   \n            } else {\n                option.classList.add(this.classes.hidden);\n            }\n        });\n    }\n\n    showOptions() {\n        this.autocomplete.setAttribute('aria-expanded', 'true');\n    }\n\n    hideOptions() {\n        this.autocomplete.setAttribute('aria-expanded', 'false');\n    }\n}\n","import env from './config/env';\nimport Swipe from './_swipe';\n\nconst defaults = {\n    $element: undefined,\n    selectors: {\n        elements: `.js-carousel-list-element`,\n        list: `.js-carousel-list`,\n    },\n    classes: {\n        active: `${env.nsPrefix}carousel--active`,\n        arrow: `${env.nsPrefix}carousel__arrow`,\n        arrowLeft: `${env.nsPrefix}carousel__arrow--left`,\n        arrowRight: `${env.nsPrefix}carousel__arrow--right`,\n        arrowDisabled: `${env.nsPrefix}carousel__arrow--disabled`,\n        bullets: `${env.nsPrefix}carousel__bullets`,\n        bullet: `${env.nsPrefix}carousel__bullets-bullet`,\n        bulletActive: `${env.nsPrefix}carousel__bullets-bullet--active`,\n        elementActive: `${env.nsPrefix}carousel__list-element--active`,\n        list: `js-carousel-list`,\n        loaded: `${env.nsPrefix}carousel--loaded`,\n    }\n};\n\n/**\n * Carousel.\n *\n * @module Carousel\n * @param {Object} properties - specifies the configurations\n * for the module.\n */\nexport default class Carousel {\n    constructor(properties = {}) {\n        const carousel   = properties.$element;\n        const list       = carousel.querySelector(defaults.selectors.list);\n        const elements   = carousel.querySelectorAll(defaults.selectors.elements);\n        const config     = properties.config ? JSON.parse(properties.config) : JSON.parse(carousel.dataset.config);\n        const listElements = properties.listItems ? properties.listItems : elements;\n\n        let bulletsArray = [];\n\n        this.carousel       = carousel;\n        this.list           = list;\n        this.elements       = listElements;\n        this.totalElements  = listElements.length;\n        this.config         = config;\n        this.bulletsArray   = bulletsArray;\n        this.arrows         = {};\n\n        //Events\n        this.onInitialized = new Event('vfes:init');\n        this.onChanged = new Event('vfes:changed');\n        this.onUpdated = new Event('vfes:updated');\n        this.onAfterDestroy = new Event('vfes:after:destroy');\n        this.onBeforeDestroy = new Event('vfes:before:destroy');\n    }\n\n    /**\n     * Initialise the module.\n     *\n     * @function init\n     *\n     * @return undefined\n     */\n\n    init(firstTime = true) {\n        const mod = this;\n\n        mod.setCarouselSwipe();\n        mod.getBreakpoint();\n\n        // Evento resize para actualizar el carrusel\n        window.addEventListener('resize', (e) => {\n            mod.getBreakpoint();\n        });\n\n        //EVENTO QUE DISPARAMOS CUANDO SE INICIALIZA EL CARRUSEL\n        mod.onInitialized.arrows = mod.arrows;\n        mod.onInitialized.bulletsArray = mod.bulletsArray;\n        mod.onInitialized.carousel = mod.carousel;\n        mod.onInitialized.elements = mod.elements;\n        mod.onInitialized.list = mod.list;\n        mod.onInitialized.totalElements = mod.totalElements;\n\n        mod.carousel.dispatchEvent(mod.onInitialized);\n    }\n\n    /**\n     * Get actual breakpoint\n     *\n     * @function getBreakpoint\n     *\n     * @return undefined\n     */\n\n    getBreakpoint(elements) {\n        const mod = this;\n\n        let index       = 0;\n        let windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\n        Object.keys(mod.config.responsive).forEach(function(key, val) {\n            if (windowWidth > mod.config.responsive[key].breakpoint) {\n                index = key;\n            }\n        });\n\n        mod.getElements(index);\n    }\n\n    /**\n     * Get carousel elements or destroy\n     *\n     * @function getElements\n     *\n     * @return undefined\n     */\n\n    getElements(index) {\n        const mod = this;\n\n        let elements = mod.config.responsive[index].elements;\n\n        mod.visibleElements = elements;\n\n        if (elements !== 0) {\n            mod.setCarousel(elements);\n        } else {\n            mod.destroy();\n        }\n    }\n\n    /**\n     * Set carousel\n     *\n     * @function setCarousel\n     *\n     * @return undefined\n     */\n\n    setCarousel(visibleElements) {\n        const mod = this;\n\n        mod.carousel.classList.add(defaults.classes.active);\n\n        let listWidth = 0;\n\n        if (mod.totalElements <= visibleElements) {\n            listWidth = 100;\n        } else {\n            listWidth = mod.totalElements / visibleElements * 100;\n        }\n\n        const elementWidth  = 100 / mod.totalElements;\n\n        mod.list.style.width = listWidth + '%';\n\n        [].forEach.call(mod.elements, function(val, key) {\n            val.style.width = elementWidth + '%';\n        });\n\n        // CONTROLS\n        if (mod.config.build.bullets === true) {\n            mod.setCarouselBullets();\n        }\n\n        if (mod.config.build.arrows === true) {\n            mod.setCarouselArrows();\n        }\n\n        mod.carousel.classList.add(defaults.classes.loaded);\n\n        //EVENTO QUE DISPARAMOS CUANDO SE ACTUALIZA EL CARRUSEL\n        mod.onUpdated.arrows        = mod.arrows;\n        mod.onUpdated.bulletsArray  = mod.bulletsArray;\n        mod.onUpdated.carousel      = mod.carousel;\n        mod.onUpdated.elements      = mod.elements;\n        mod.onUpdated.list          = mod.list;\n        mod.onUpdated.totalElements = mod.totalElements;\n\n        mod.carousel.dispatchEvent(mod.onUpdated);\n    }\n\n    /**\n     * Set carousel swipe interaction\n     *\n     * @function setCarouselSwipe\n     *\n     * @return undefined\n     */\n\n    setCarouselSwipe() {\n        const mod = this;\n        \n        // Use class to get element by string.\n        const swiper = new Swipe(mod.list);\n        swiper.onLeft(function() {\n            mod.moveCarousel('right');\n        });\n        swiper.onRight(function() {\n            mod.moveCarousel('left');\n        });\n        swiper.onUp(function() {});\n        swiper.onDown(function() {});\n        swiper.run();\n    }\n\n    /**\n     * Set carousel bullets\n     *\n     * @function setCarouselBullets\n     *\n     * @return undefined\n     */\n\n    setCarouselBullets() {\n        const mod = this;\n\n        mod.bulletsArray = [];\n\n        let oldBullets = mod.carousel.querySelectorAll('.' + defaults.classes.bullets);\n\n        [].forEach.call(oldBullets, function(val, key) {\n            mod.carousel.removeChild(val);\n        });\n\n        let bullets = document.createElement('div');\n\n        bullets.classList.add(defaults.classes.bullets);\n\n        let numberBullets = mod.totalElements - mod.visibleElements + 1;\n\n        if (numberBullets <= 1) {\n            return false;\n        }\n\n        for (let i = 0; i < numberBullets; i++) {\n            let bullet;\n\n            if (mod.config.build.clickable_bullets === true) {\n                bullet = document.createElement('button');\n\n                bullet.setAttribute('type', 'button');\n                bullet.setAttribute('title', 'Ir al elemento ' + (i + 1) + ' del carrusel');\n                bullet.innerHTML = 'Ir al elemento ' + (i + 1) + ' del carrusel';\n\n                bullet.addEventListener('click', function() {\n                    mod.moveCarouselTo(i);\n                });\n            } else {\n                bullet = document.createElement('div');\n                bullet.innerHTML = i + 1;\n            }\n\n            bullet.classList.add(defaults.classes.bullet);\n\n            bullets.appendChild(bullet);\n\n            mod.bulletsArray.push(bullet);\n        }\n\n        mod.carousel.appendChild(bullets);\n\n        if (mod.config.build.arrows !== true) {\n            mod.position = 0;\n            mod.moveCarouselTo(0);\n        }\n    }\n\n    /**\n     * Set carousel arrows buttons\n     *\n     * @function setCarouselArrows\n     *\n     * @return undefined\n     */\n\n    setCarouselArrows() {\n        const mod = this;\n\n        let arrows = mod.carousel.querySelectorAll('.' + defaults.classes.arrow);\n\n        [].forEach.call(arrows, function(val, key) {\n            mod.carousel.removeChild(val);\n        });\n\n        if (mod.totalElements <= mod.visibleElements) {\n            return false;\n        }\n\n        let arrowLeft   = document.createElement('button');\n        let arrowRight  = document.createElement('button');\n\n        arrowLeft.setAttribute('type', 'button');\n        arrowRight.setAttribute('type', 'button');\n\n        arrowLeft.innerHTML = 'Mover carrusel a la izquierda';\n        arrowRight.innerHTML = 'Mover carrusel a la derecha';\n\n        arrowLeft.setAttribute('title', 'Mover carrusel a la izquierda');\n        arrowRight.setAttribute('title', 'Mover carrusel a la derecha');\n\n        arrowLeft.classList.add(defaults.classes.arrow);\n        arrowLeft.classList.add(defaults.classes.arrowLeft);\n        arrowRight.classList.add(defaults.classes.arrow);\n        arrowRight.classList.add(defaults.classes.arrowRight);\n\n        if (mod.bulletsArray.length > 0) {\n            mod.carousel.insertBefore(arrowLeft, mod.carousel.querySelector('.' + defaults.classes.bullets));\n            mod.carousel.insertBefore(arrowRight, mod.carousel.querySelector('.' + defaults.classes.bullets));\n        } else {\n            mod.carousel.appendChild(arrowLeft);\n            mod.carousel.appendChild(arrowRight);\n        }\n\n        arrowLeft.addEventListener('click', function() {\n            mod.moveCarousel('left');\n        });\n\n        arrowRight.addEventListener('click', function() {\n            mod.moveCarousel('right');\n        });\n\n        mod.arrows = { 'left': arrowLeft, 'right': arrowRight }\n        mod.position = 0;\n        mod.moveCarouselTo(0);\n    }\n\n    /**\n     * Move carousel\n     *\n     * @function moveCarousel\n     *\n     * @return undefined\n     */\n\n    moveCarousel(direction) {\n        const mod = this;\n\n        if (direction === 'left') {\n\n            if (mod.position > 0) {\n                mod.position--;\n            }\n\n        } else {\n            \n            if (mod.position < mod.elements.length - 1) {\n                mod.position++;\n            }\n\n        }\n\n        mod.moveCarouselTo(mod.position, direction);\n    }\n\n    /**\n     * Move carousel to X position\n     *\n     * @function moveCarouselTo\n     *\n     * @return undefined\n     */\n\n    moveCarouselTo(position, direction) {\n        const mod = this;\n\n        mod.position = position;\n\n        mod.list.style.transform = 'translate3d(' + -(100 / mod.elements.length * position) + '%, 0, 0)';\n\n        mod.onChanged.carousel = mod.carousel;\n        mod.onChanged.position = position;\n        mod.onChanged.direction = direction;\n        mod.onChanged.visibleElements = mod.getActiveElements();\n\t\tmod.carousel.dispatchEvent(mod.onChanged);\n\n        mod.updateCarousel();\n    }\n\n    /**\n     * Update arrows and bullets\n     *\n     * @function updateCarousel\n     *\n     * @return undefined\n     */\n\n    updateCarousel(position) {\n        const mod = this;\n\n        if (mod.bulletsArray.length > 0) {\n            [].forEach.call(mod.bulletsArray, function(val, key) {\n\n                val.classList.remove(defaults.classes.bulletActive);\n\n            });\n\n            mod.bulletsArray[mod.position].classList.add(defaults.classes.bulletActive);\n        }\n\n        if (mod.config.build.arrows === true) {\n            mod.carousel.querySelector('.' + defaults.classes.arrowLeft).classList.remove(defaults.classes.arrowDisabled);\n            mod.carousel.querySelector('.' + defaults.classes.arrowRight).classList.remove(defaults.classes.arrowDisabled);\n            mod.carousel.querySelector('.' + defaults.classes.arrowLeft).removeAttribute('disabled');\n            mod.carousel.querySelector('.' + defaults.classes.arrowRight).removeAttribute('disabled');\n\n            if (mod.position <= 0) {\n                mod.carousel.querySelector('.' + defaults.classes.arrowLeft).classList.add(defaults.classes.arrowDisabled);\n                mod.carousel.querySelector('.' + defaults.classes.arrowLeft).setAttribute('disabled', true);\n            } else if (mod.position >= mod.totalElements - mod.visibleElements) {\n                mod.carousel.querySelector('.' + defaults.classes.arrowRight).classList.add(defaults.classes.arrowDisabled);\n                mod.carousel.querySelector('.' + defaults.classes.arrowRight).setAttribute('disabled', true);\n            }\n        }\n\n        mod.setActiveElements();\n\n    }\n\n    /**\n     * Get active carousel elements\n     *\n     * @function getActiveElements\n     *\n     * @return {Array} - Array with active elements \n     */\n\n    getActiveElements() {\n        const mod = this;\n        let activeElements = [];\n\n        [].forEach.call(mod.elements, element => {\n            element.classList.contains(defaults.classes.elementActive) ? activeElements.push(element) : null; \n        });\n\n        return activeElements;\n    }\n    \n    /**\n     * Apply class to active carousel elements\n     *\n     * @function setActiveElements\n     *\n     * @return undefined\n     */\n\n    setActiveElements() {\n        const mod = this;\n\n        for (let i = 0; i < mod.totalElements; i++) {\n            if (i >= mod.position && i < (mod.position + mod.visibleElements)) {\n                mod.elements[i].classList.add(defaults.classes.elementActive);\n            } else {\n                mod.elements[i].classList.remove(defaults.classes.elementActive);\n            }\n        }\n    }\n\n    /**\n     * Destroy carousel functionality and styles\n     *\n     * @function destroy\n     *\n     * @return undefined\n     */\n\n    destroy() {\n        const mod = this;\n\n        //DISPATCH EVENT BEFORE CAROUSEL HAS BEEN DESTROYED\n        mod.onAfterDestroy.carousel = mod.carousel;\n        mod.onAfterDestroy.position = mod.position;\n        mod.onAfterDestroy.visibleElements = mod.getActiveElements();\n\n        mod.carousel.dispatchEvent(mod.onAfterDestroy);\n\n        mod.carousel.classList.remove(defaults.classes.active);\n\n        let arrowLeft   = mod.carousel.querySelector('.' + defaults.classes.arrowLeft);\n        let arrowRight  = mod.carousel.querySelector('.' + defaults.classes.arrowRight);\n        let bullets     = mod.carousel.querySelector('.' + defaults.classes.bullets);\n\n        if (arrowLeft !== undefined && arrowLeft !== null) {\n            mod.carousel.removeChild(arrowLeft);\n        }\n\n        if (arrowRight !== undefined && arrowRight !== null) {\n            mod.carousel.removeChild(arrowRight);\n        }\n\n        if (bullets !== undefined && bullets !== null) {\n            mod.carousel.removeChild(bullets);\n        }\n\n        mod.list.style.width = '';\n\n        [].forEach.call(mod.elements, function(val, key) {\n            val.style.width = '';\n            val.classList.remove(defaults.classes.elementActive);\n        });\n\n        mod.carousel.classList.add(defaults.classes.loaded);\n\n        //DISPATCH EVENT AFTER CAROUSEL HAS BEEN DESTROYED\n        mod.carousel.dispatchEvent(this.onAfterDestroy);\n    }\n}\n","import env from './config/env';\n\nconst defaults = {\n    $element: undefined,\n    selectors: {\n        dropdown: '.js-dropdown-button',\n        select: '.js-dropdown-select',\n        all: '.js-dropdown-button-all',\n        checkbox: '.js-dropdown-checkbox',\n        placeholder: '.js-dropdown-placeholder',\n        number: '.js-dropdown-number',\n        list: '.js-dropdown-list',\n        label: '.js-dropdown-label',\n        option: '.js-dropdown-option',\n        wcselect: 'vfes-dropdown'\n    },\n    classes: {\n        open: `${env.nsPrefix}dropdown__select-open`,\n        select: 'js-dropdown-select',\n        button: 'js-dropdown-button',\n        all: 'js-dropdown-button-all',\n        less: `${env.nsPrefix}dropdown__button-all--less`,\n        tick: `${env.nsPrefix}dropdown__button-all--tick`\n    }\n};\n\n/**\n * Dropdown.\n *\n * @module Dropdown\n * @param {Object} properties - specifies the configurations\n * for the module.\n */\nexport default class Dropdown {\n    constructor(properties = {}) {\n\n        this.$element = properties.$element;\n        this.selectors = defaults.selectors;\n        this.classes = defaults.classes;\n        this.isOpened   = false;\n        this.styles = properties.$styles;\n    }\n\n    /**\n     * Initialise the module.\n     *\n     * @function init\n     *\n     * @return undefined\n     */\n    init() {\n        const $selectors = this.selectors;\n        let $container = this.$element;\n        const input = $container.querySelectorAll($selectors.checkbox);\n        let inputList = Array.from(input).map((item) => {\n            return {\n                check: item,\n                label: item.nextElementSibling.innerHTML\n            }\n        });\n        this.bindContainer(inputList);\n        this.bindInputs(inputList);\n    }\n\n    /**\n     * Bind the events to the actionable elements\n     * within the rates system.\n     *\n     * @function bindContainer\n     *\n     * @return undefined\n     */\n    bindContainer(inputList) {\n        const $selectors = this.selectors;\n        const $classes = this.classes;\n        const tick = $classes.tick;\n        const less = $classes.less;\n        let $container = this.$element;\n        let all = $container.querySelector($selectors.all);\n        let dropdown = $container.querySelector($selectors.dropdown);\n        let placeholder = $container.querySelector($selectors.placeholder);\n        let text = placeholder.innerHTML;\n\n        document.body.addEventListener('click', e => {\n            if (!e.target.closest($selectors.select) && !e.target.closest($selectors.wcselect)) {\n                $container.classList.remove($classes.open);\n            }\n        });\n\n        $container.addEventListener('click', e => {\n            let actualTarget = e.target;\n            if (actualTarget.classList.contains($classes.button) && $container.classList.contains($classes.open)){\n                e.preventDefault();\n                $container.classList.remove($classes.open);\n            } else if (actualTarget.classList.contains($classes.button) && !$container.classList.contains($classes.open)) {\n                e.preventDefault();\n                $container.classList.add($classes.open);\n            }\n\n            if (actualTarget.classList.contains($classes.all)) {\n                e.preventDefault();\n                if (actualTarget.classList.contains(less) || actualTarget.classList.contains(tick)) {\n                    actualTarget.classList.remove(tick);\n                    actualTarget.classList.remove(less);\n                    actualTarget.innerText = 'Seleccionar todo';\n                    inputList.forEach (input => {\n                        input.check.checked = false;\n                    });\n                } else {\n                    actualTarget.classList.add(tick);\n                    actualTarget.innerText = 'Deseleccionar todo';\n                    inputList.forEach (input => {\n                        input.check.checked = true;\n                    });\n                }\n                this.placeholderText(inputList, text);\n            }\n        });\n\n        dropdown.addEventListener('keydown', e => {\n            if(e.keyCode === 9 && this.isOpened) { // Tab\n                e.preventDefault();\n            } else if((e.keyCode === 40 || e.keyCode === 38) && !this.isOpened) {\n                e.preventDefault();\n                \n                $container.classList.add($classes.open);;\n\n                all.focus();\n            }\n        });\n\n        all.addEventListener('keydown', e => {\n            if(e.keyCode === 40) { // Arrow Down\n                e.preventDefault();\n                if(inputList[0]) { \n                    inputList[0].focus() \n                }\n            } else if (e.keyCode === 9) {\n                e.preventDefault();\n            } else if(e.keyCode === 27) { // Escape\n                $container.classList.remove($classes.open);\n                dropdown.focus();\n            }\n        });\n    }\n    \n    /**\n     * Bind the events to the actionable elements\n     * within the rates system.\n     *\n     * @function bindInputs\n     *\n     * @return undefined\n     */\n    bindInputs(inputList) {\n        const $selectors = this.selectors;\n        const $classes = this.classes;\n        const tick = $classes.tick;\n        const less = $classes.less;\n        let $container = this.$element;\n        let all = $container.querySelector($selectors.all);\n        let dropdown = $container.querySelector($selectors.dropdown);\n        let placeholder = $container.querySelector($selectors.placeholder);\n        let text = placeholder.innerHTML;\n\n        [].forEach.call(inputList, (checkInput, key) => {\n            const input = checkInput.check;\n            input.addEventListener('change', e => {\n                let numChecks = inputList.filter(item => item.checked);\n                if (numChecks > 0 && numChecks < inputList.length) {\n                    all.classList.remove(tick);\n                    all.classList.add(less);\n                    all.innerText = 'Deseleccionar todo';\n                } else if (numChecks === 0) {\n                    all.classList.remove(less);\n                    all.classList.remove(tick);\n                    all.innerText = 'Seleccionar todo';\n                } else if (numChecks === inputList.length) {\n                    all.classList.add(tick);\n                    all.classList.remove(less);\n                }\n                this.placeholderText(inputList, text);\n            });\n\n            input.addEventListener('keydown', e => {\n                if(e.keyCode === 40) { // Arrow Down\n                    e.preventDefault();\n                    if(key < inputList.length - 1) { inputList[key + 1].focus() }\n\n                } else if(e.keyCode === 38) { // Arrow Up\n                    e.preventDefault();\n                    if(key > 0) { \n                        inputList[key - 1].focus();\n                    } else if (key === 0) {\n                        if (all) {\n                            all.focus();\n                        }\n                    }\n\n                } else if(e.keyCode === 13) { // Enter\n                    e.preventDefault();\n\n                } else if(e.keyCode === 9) { // Tab\n                    e.preventDefault();\n                } else if(e.keyCode === 27) { // Escape\n                    $container.classList.remove($classes.open);\n                    dropdown.focus();\n                }\n            });\n        });\n    }\n\n    placeholderText(inputList, text) {\n        const $selectors = this.selectors;\n        const $container = this.$element;\n        let placeholder = $container.querySelector($selectors.placeholder);\n        let tagWidth = 84;\n\n        let numVisibleTags = Math.floor(placeholder.offsetWidth / tagWidth);\n        let numChecks = inputList.filter(item => item.check.checked);\n        let number = numChecks.length - numVisibleTags;\n\n        let loop = numChecks.length > numVisibleTags ? numVisibleTags : numChecks.length;\n        \n        if (numChecks.length === 0) {\n            placeholder.innerHTML = text;\n        } else if (numChecks.length > 0) {\n            placeholder.innerHTML = '';\n            for (let i = 0; i < loop; i++) {\n                const textStyles = this.style ? this.style.text : '';\n                placeholder.innerHTML += `<p class=\"${env.nsPrefix}dropdown ${env.nsPrefix}dropdown__text ${env.nsPrefix}paragraph ${textStyles}\">${numChecks[i].label}</p>`;\n            }\n            if (numChecks.length > numVisibleTags && placeholder.querySelector($selectors.number)) {\n                placeholder.querySelector($selectors.number).innerHTML = '+ ' + number.toString();\n            } else if (numChecks.length > numVisibleTags && !placeholder.querySelector($selectors.number)) {\n                const numStyles = this.style ? this.style.num : '';\n                placeholder.innerHTML += `<p class=\"${env.nsPrefix}dropdown js-dropdown-number ${env.nsPrefix}dropdown__number ${env.nsPrefix}paragraph ${numStyles}\">+ ${number}</p>`;\n            }\n        }\n    }\n}\n","const defaults = {\n    $element: undefined\n};\n\n/**\n * EqHeights.\n *\n * @module EqHeights\n * @param {Object} properties - specifies the configurations\n * for the module.\n */\nexport default class EqHeights {\n    constructor(properties = {}) {\n        this.$element = properties.$element;\n    }\n\n    /**\n     * Initialize module\n     *\n     * @function init\n     *\n     * @return undefined\n     */\n\n    init($container = this.$element) {\n        let selectors = $container.dataset.eqHeight;\n        \n        if (selectors !== '' && selectors !== undefined && selectors !== null) {\n            selectors = selectors.split(',');\n\n            selectors.forEach(selector => { this.responsive(selector) });\n        }\n    }\n\n    /**\n     * Control scope of selectors\n     * \n     * @function responsive\n     * \n     * @param {String} selector - Selector of elements to detect scope\n     * @param {HTMLCollection} elements - HTML elements to set height\n     * \n     * @return undefined\n     */\n\n    responsive(selector) {\n        let breakpoint = '';\n        const mod = this;\n        const $container = mod.$element;\n        let windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n        selector = selector.trim();\n\n        if(/:responsive$/g.test(selector)) { breakpoint = 'responsive' }\n        else if(/:tablet$/g.test(selector)) { breakpoint = 'tablet' }\n\n        selector = selector.replace(`:${breakpoint}`, '');\n\n        switch(breakpoint) {\n            case 'responsive':\n                mod.eqHeights($container.querySelectorAll(selector));\n                break;\n            case 'tablet':\n                if(windowWidth > 640) { mod.eqHeights($container.querySelectorAll(selector)); }\n                break;\n            default:\n                if(windowWidth > 970) { mod.eqHeights($container.querySelectorAll(selector)); }\n                break;\n        }\n    }\n    \n\n    /**\n     * Control parallax for elements\n     *\n     * @function eqHeights\n     *\n     * @return undefined\n     */\n\n    eqHeights(elements) {\n        const mod = this;\n\n        let _minH = 0;\n\n        [].forEach.call(elements, val => { _minH = Math.max(_minH, val.scrollHeight) });\n\n        mod.setElementsHeight(elements, _minH);\n    }\n\n    /**\n     * Set elements min height\n     *\n     * @function setElementsHeight\n     *\n     * @return undefined\n     */\n\n    setElementsHeight(elements, minHeight) {\n        [].forEach.call(elements, val => { val.style.minHeight = minHeight + 'px' });\n    }\n\n    /**\n     * Remove elements min height\n     *\n     * @function removeEqHeights\n     *\n     * @return undefined\n     */\n\n    removeMinHeight(elements) {\n        [].forEach.call(elements, val => { val.style.minHeight = '' });\n    }\n}\n","import env from './config/env';\n\nconst defaults = {\n    $element: undefined\n};\n\n/**\n * Swipe.\n *\n * @module Swipe\n * @param {Object} properties - specifies the configurations\n * for the module.\n */\nexport default class Swipe {\n    constructor(element) {\n        this.xDown = null;\n        this.yDown = null;\n        this.element = typeof(element) === 'string' ? document.querySelector(element) : element;\n\n        this.element.addEventListener('touchstart', function(evt) {\n            this.xDown = evt.touches[0].clientX;\n            this.yDown = evt.touches[0].clientY;\n        }.bind(this), false);\n\n    }\n\n    onLeft(callback) {\n        this.onLeft = callback;\n\n        return this;\n    }\n\n    onRight(callback) {\n        this.onRight = callback;\n\n        return this;\n    }\n\n    onUp(callback) {\n        this.onUp = callback;\n\n        return this;\n    }\n\n    onDown(callback) {\n        this.onDown = callback;\n\n        return this;\n    }\n\n    handleTouchMove(evt) {\n        if ( ! this.xDown || ! this.yDown ) {\n            return;\n        }\n\n        var xUp = evt.touches[0].clientX;\n        var yUp = evt.touches[0].clientY;\n\n        this.xDiff = this.xDown - xUp;\n        this.yDiff = this.yDown - yUp;\n\n        if ( Math.abs( this.xDiff ) > Math.abs( this.yDiff ) ) { // Most significant.\n            if ( this.xDiff > 0 ) {\n                this.onLeft();\n            } else {\n                this.onRight();\n            }\n        } else {\n            if ( this.yDiff > 0 ) {\n                this.onUp();\n            } else {\n                this.onDown();\n            }\n        }\n\n        // Reset values.\n        this.xDown = null;\n        this.yDown = null;\n    }\n\n    run() {\n        this.element.addEventListener('touchmove', function(evt) {\n            this.handleTouchMove(evt);\n        }.bind(this), false);\n    }\n}\n","const env = {\n    nsPrefix: \"vfes-\"\n};\nexport default env;\n","// Import the LitElement base class and html helper function\nimport { html } from 'lit-element'\nimport Accordion from '../../es/_accordion'\nimport { VfesCustom } from '../custom'\n\n// Extend the LitElement base class\nexport class VfesAccordion extends VfesCustom {\n  static get properties () {\n    return {\n      bgColor: { type: String }\n    }\n  }\n\n  firstUpdated () {\n    this.instance = new Accordion({$element: this.shadowRoot})\n    this.instance.init()\n  }\n\n  getBgColor () {\n    return this.bgColor ? 'vfes-color-bg-' + this.bgColor : ''\n  }\n\n  get template () {\n    return html`\n      <div data-js=\"_accordion\" class=\"vfes-accordion js-accordion\">\n          <div class=\"vfes-layout__item\">\n            <div class=\"vfes-accordion__item js-accordion-item\">\n              <button class=\"vfes-accordion__heading js-accordion-heading\" aria-expanded=\"false\" aria-controls=\"accordion-content-0\">\n                <slot name=\"title\">\n              </button>\n              <div id=\"accordion-content-0\" class=\"vfes-accordion__content ${this.getBgColor()}\" aria-hidden=\"true\">\n                <div>\n                <slot name=\"text\"></slot>\n                </div>\n              </div>\n            </div>\n          </div>\n      </div>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-accordion', VfesAccordion)\n","// Import the LitElement base class and html helper function\nimport { html } from 'lit-element'\nimport { VfesCustom } from '../custom'\n\n// Extend the LitElement base class\nexport class VfesAccordionLink extends VfesCustom {\n  get template () {\n    return html`\n    <div class=\"vfes-accordion__block vfes-accordion__content-block\">\n      <slot class=\"vfes-link\"></slot>\n    </div>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-accordion-link', VfesAccordionLink)\n","// Import the LitElement base class and html helper function\nimport { html } from 'lit-element'\nimport { VfesCustom } from '../custom'\n\n// Extend the LitElement base class\nexport class VfesAvatar extends VfesCustom {\n  static get properties () {\n    return {\n      bgColor: { type: String },\n      size: { type: String }\n    }\n  }\n\n  constructor () {\n    super()\n    this.bgColor = 'dove-gray'\n  }\n\n  get template () {\n    return html`\n      <figure class=\"vfes-avatar vfes-avatar__icon-${this.size} vfes-color-bg-${this.bgColor}\">\n          <slot></slot>\n      </figure>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-avatar', VfesAvatar)\n","// Import the LitElement base class and html helper function\nimport { html, css } from 'lit-element'\nimport { VfesCustom } from '../custom'\n\n// Extend the LitElement base class\nexport class VfesAvatarImage extends VfesCustom {\n  static get properties () {\n    return {\n      src: { type: String },\n      alt: { type: String }\n    }\n  }\n\n  static get styles() {\n    return css`\n    :host {\n      align-self: flex-end;\n    }`;\n  }\n\n  get template () {\n    return html`\n    <img class=\"vfes-avatar__img vfes-avatar--align vfes-flex__align-self--end\" src=\"${this.src}\" alt=\"${this.alt}\"/>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-avatar-image', VfesAvatarImage)\n","// Import the LitElement base class and html helper function\nimport { html } from 'lit-element'\nimport { VfesCustom } from '../custom'\n\n// Extend the LitElement base class\nexport class VfesAvatarText extends VfesCustom {\n  static get properties () {\n    return {\n      size: { type: String }\n    }\n  }\n\n  get template () {\n    return html`\n    <p class=\"vfes-avatar vfes-avatar__icon-${this.size} vfes-paragraph vfes-paragraph__text-${this.size} vfes-color--vodafone-white\">\n      <slot></slot>\n    </p>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-avatar-text', VfesAvatarText)\n","// Import the LitElement base class and html helper function\nimport { html } from 'lit-element'\nimport { VfesCustom } from '../custom'\n\n// Extend the LitElement base class\nexport class VfesBoloText extends VfesCustom {\n  static get properties () {\n    return {\n      size: { type: String },\n      sup: { type: String },\n      foot: { type: String },\n      sub: { type: String },\n      priceNum: { type: String },\n      priceNumDto: { type: String },\n      priceText: { type: String },\n      priceTop: { type: String },\n      priceBottom: { type: String },\n      priceFoot: { type: String },\n      priceComplement: { type: String },\n      bgColor: { type: String }\n    }\n  }\n\n  constructor(){\n    super();\n    this.size = '';\n    this.bgColor = 'vodafone-red'\n  }\n\n  getSize() {\n    const newSize = this.size ? ('vfes-bolo-text--' + this.size) : '';\n    return newSize;\n  }\n\n  getContent() {\n    if (this.sup || this.foot && this.size === 's') {\n      return ''\n    } else if (this.priceText && this.size !== 's') {\n      return 'vfes-bolo-text__content-2'\n    } else {\n      return 'vfes-bolo-text__content-1'\n    }\n  }\n\n  get template() {\n    return html`\n    <div class=\"vfes-bolo-text ${this.getSize()} vfes-color-bg-${this.bgColor}\">\n      <div class=\"vfes-bolo-text__content ${this.getContent()}\">\n        <p class=\"vfes-bolo-text__sup\">${this.sup}</p>\n        <div class=\"vfes-bolo-text__price vfes-flex vfes-flex__direction-row vfes-flex__justify--center\">\n        \n        ${this.priceNum ? html`<p class=\"vfes-bolo-text__num vfes-flex vfes-flex__align-items--center\"><strong >${this.priceNum}</strong></p>`: ``}\n        ${this.priceNumDto ? html`<p class=\"vfes-bolo-text__num-dto vfes-flex vfes-flex__align-items--center\"><strong >${this.priceNumDto}</strong>\n        ${this.priceComplement ? \n          html`<div class=\"vfes-flex vfes-flex__direction--column vfes-flex__justify--center vfes-bolo-text__complement\">\n                <p class=\"vfes-bolo-text__percentage\"><strong>${this.priceComplement}</strong></p>\n              </div>`\n          : html``}</p>`: ``}\n        ${this.priceText ? html`<p class=\"vfes-bolo-text__txt vfes-flex vfes-flex__align-items--center\"><strong >${this.priceText}</strong></p>`: ``}\n        ${this.priceTop || this.priceBottom \n          ? html`\n            <div class=\"vfes-flex vfes-flex__direction--column vfes-bolo-text__complement\">\n              <p class=\"vfes-bolo-text__decimal\"><strong>${this.priceTop}</strong></p>\n              <p class=\"vfes-bolo-text__month vfes-flex__align-self--end\"><strong>${this.priceBottom}</strong></p>\n            </div>\n          `\n          : html``\n        }\n        </div>\n        ${this.priceFoot ? html`<vfes-bolo-text-foot>${this.priceFoot}</vfes-bolo-text-foot>` : ``}\n        <p class=\"vfes-bolo-text__foot\">${this.foot}</p>\n        <p class=\"vfes-bolo-text__sub\">${this.sub}</p> \n      </div>\n  </div>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-bolo-text', VfesBoloText)\n","// Import the LitElement base class and html helper function\nimport { html } from 'lit-element'\nimport { ifDefined } from 'lit-html/directives/if-defined.js'\nimport { VfesCustom } from '../custom'\n\n// Extend the LitElement base class\nexport class VfesButton extends VfesCustom {\n  static get properties () {\n    return {\n      type: { type: String },\n      text: { type: String },\n      name: { type: String },\n      title: { type: String },\n      disabled: { type: Boolean },\n      analitycsElement: { type: String },\n      analitycsContext: { type: String }\n    }\n  }\n\n  get template() {\n    return html`\n      <button \n        type=\"button\" \n        .name=\"${ifDefined(this.name)}\" \n        title=\"${this.title}\" \n        class=\"vfes-ws10 vfes-button vfes-button--${this.type}\" \n        data-analytics-element=\"${ifDefined(this.analitycsElement)}\"\n        data-analytics-context=\"${ifDefined(this.analitycsContext)}\"\n        data-analytics-category=\"cta\" \n        ?disabled=\"${this.disabled}\">\n          <slot></slot>\n      </button>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-button', VfesButton)\n","// Import the LitElement base class and html helper function\nimport { html } from 'lit-element'\nimport { VfesCustom } from '../custom'\n\n// Extend the LitElement base class\nexport class VfesButtonLink extends VfesCustom {\n  static get properties () {\n    return {\n      type: { type: String },\n      title: { type: String },\n      link: { type: String }\n    }\n  }\n\n  get template() {\n    return html`\n      <a href=\"${this.link}\" title=\"${this.title}\" class=\"vfes-ws10 vfes-button vfes-button--${this.type}\" data-analytics-element=\"\"\n        data-analytics-category=\"cta\"><slot></slot></a>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-button-link', VfesButtonLink)\n","import { html } from 'lit-element'\nimport { VfesCustom } from '../custom'\n\nexport class VfesCard extends VfesCustom {\n  static get properties () {\n    return {\n      bgColor: { type: String },\n      borderLeft: { type: Boolean },\n      noShadow: { type: Boolean },\n      borderColor: { type: String },\n      borderRadius: { type: Boolean }\n    }\n  }\n\n  getAdditionalStyles () {\n    let styles = ''\n    this.bgColor && (styles += ' vfes-colours-bg-' + this.bgColor);\n    this.noShadow && (styles += ' vfes-card-no-shadow');\n    this.borderLeft && (styles += ' vfes-card-border-left');\n    this.borderColor && (styles += ' vfes-card vfes-card-border-' + this.borderColor);\n    this.borderRadius && (styles += ' vfes-card-border-radius');\n    return styles;\n  }\n\n  get template () {\n    return html`\n      <article class=\"vfes-card ${this.getAdditionalStyles()}\" style=\"height: 188px;\">\n        <slot></slot>\n      </article>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-card', VfesCard)\n","import { html } from 'lit-element'\nimport { VfesCustom } from '../custom'\n\nexport class VfesCardMobile extends VfesCustom {\n  static get properties () {\n    return {\n      imgSrc: { type: String },\n      imgAtl: { type: String },\n      title: { type: String },\n      precioPlazos: { type: String },\n      plazos: { type: String },\n      pagoInicial: { type: String },\n      precioContado: { type: String },\n      tag: { type: String }\n    }\n  }\n\n  getBasicCard () {\n    return html`\n      <img class=\"vfes-card__mobile-img\" src=\"${this.imgSrc}\" alt=\"${this.imgAtl}\">\n      <div class=\"vfes-card__mobile-content\">\n        <p class=\"vfes-paragraph vfes-card__mobile-title\">${this.title}</p>\n        <p class=\"vfes-paragraph vfes-card__mobile-text\">\n        ${this.precioPlazos ? \n          html`<span>A plazos desde </span>\n          <strong>${this.precioPlazos}</strong>`: ``\n        }\n        ${this.plazos ? html`<span>${this.plazos}</span>`: ``}\n        ${this.pagoInicial ? \n          html`<span>+ ${this.pagoInicial} pago inicial</span>`\n          : ``\n        }\n        </p>\n      ${this.precioContado ?\n        html`<p class=\"vfes-paragraph vfes-card__mobile-price-total\">\n          <span>Al contado desde </span>\n          <span class=\"vfes-title--5\">${this.precioContado}</span>\n        </p>`: ``}\n      </div>\n    `\n  }\n\n  get template () {\n    return html`\n      <div class=\"vfes-layout vfes-ws10\">\n        <div class=\"vfes-layout__wrapper\">\n          <div class=\"vfes-layout__item vfes-1/3 vfes-1/2-palm vfes-1/1-mov\">\n          ${this.tag ? \n            html`\n              <div class=\"vfes-card vfes-card__mobile vfes-card-no-shadow vfes-tag-label vfes-tag-label--red vfes-tag-label--border\">\n                <div class=\"vfes-tag-label__outstanding\">${this.tag}</div>\n                ${this.getBasicCard()}\n              </div>` : \n            html`\n            <div class=\"vfes-card vfes-card__mobile vfes-card__mobile--no-border vfes-card-no-shadow\">\n                ${this.getBasicCard()}\n              </div>\n            `\n          }\n          </div>\n        </div>\n      </div>`\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-card-mobile', VfesCardMobile)\n","// Import the LitElement base class and html helper function\nimport { html } from 'lit-element'\nimport { VfesCustom } from '../custom'\nimport Carousel from '../../es/_carousel'\n\n// Extend the LitElement base class\nexport class VfesCarousel extends VfesCustom {\n  static get properties () {\n    return {\n      config: { type: Object }\n    }\n  }\n\n  firstUpdated () {\n    this.updateComplete.then(() => {\n      const carouselItems = this.querySelectorAll('vfes-carousel-item')\n      const slides = Array.from(carouselItems).map(item => item.shadowRoot.querySelector('li'))\n      this.instance = new Carousel({\n        $element: this.shadowRoot.getElementById('carousel'),\n        config: JSON.stringify(this.config),\n        listItems: slides\n      })\n      this.instance.init()\n    })\n  }\n\n  constructor () {\n    super()\n    this.config = {\n      responsive: {\n        0: {\n          breakpoint: 0,\n          elements: 1\n        },\n        1: {\n          breakpoint: 640,\n          elements: 2\n        },\n        2: {\n          breakpoint: 970,\n          elements: 3\n        }\n      },\n      build: {\n        arrows: true,\n        bullets: true,\n        clickable_bullets: true\n      }\n    }\n  }\n\n  get template () {\n    return html`\n      <div>\n        <div id=\"carousel\" class='vfes-carousel'>\n          <ul class='vfes-carousel__list js-carousel-list'>\n            <slot></slot>\n          </ul>\n        </div>\n    </div>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-carousel', VfesCarousel)\n","// Import the LitElement base class and html helper function\nimport { html } from 'lit-element'\nimport { VfesCustom } from '../custom'\n\n// Extend the LitElement base class\nexport class VfesCarouselItem extends VfesCustom {\n  static get properties () {\n    return {\n      bgColor: { type: String },\n      height: { type: String }\n    }\n  }\n\n  get template () {\n    return html`\n      <li class='vfes-carousel--active vfes-carousel__list-element js-carousel-list-element' style=\"width: 20%\">\n        <div style='height: ${this.height}; background: ${this.bgColor}'>\n          <slot></slot>\n        </div>\n      </li>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-carousel-item', VfesCarouselItem)\n","import { LitElement, html } from 'lit-element'\nimport { render } from 'lit-html'\n\n// Extend the LitElement base class\nexport class VfesCustom extends LitElement {\n  render () {\n    return html`\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/microsites/es/mercury/particulares/lp-preventa-terminales/css/main.css\">\n\n    ${this.template}\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-custom', VfesCustom)\n","// Import the LitElement base class and html helper function\nimport { html } from 'lit-element'\nimport Dropdown from '../../es/_dropdown'\nimport { VfesCustom } from '../custom'\n\n// Extend the LitElement base class\nexport class VfesDropdown extends VfesCustom {\n  static get properties () {\n    return {\n      legend: { type: String },\n      label: { type: String },\n      placeholder: { type: String },\n      disabled: { type: Boolean },\n      state: { type: String },\n      placeholderTextStyle: { type: String },\n      placeholderTextColor: { type: String },\n      placeholderNumStyle: { type: String }\n    }\n  }\n\n  constructor () {\n    super()\n    this.legend = ''\n    this.label = ''\n    this.placeholder = ''\n    this.disabled = false\n  }\n\n  getState () {\n    return this.state ? 'vfes-dropdown__select--' + this.state : ''\n  }\n\n  getPlaceholderTextStyle () {\n    const styles = this.placeholderTextStyle ? this.placeholderTextStyle.split(' ') : []\n    const textStyles = styles.reduce((total, current) => {\n      total += ' vfes-dropdown__text--' + current\n      return total\n    }, '')\n    return textStyles.substring(1)\n  }\n\n  getPlaceholdersTextColor () {\n    return this.placeholderTextColor ? 'vfes-dropdown--color-' + this.placeholderTextColor : ''\n  }\n\n  getPlaceholdersNumStyle () {\n    return this.placeholderNumStyle ? 'vfes-dropdown__number--' + this.placeholderNumStyle : ''\n  }\n\n  getPlaceholderStyles () {\n    let styles = ''\n    const textStyle = this.getPlaceholderTextStyle()\n    const textColor = this.getPlaceholdersTextColor()\n    const numStyle = this.getPlaceholdersNumStyle()\n    textStyle && (styles += textStyle + ' ')\n    textColor && (styles += textColor + ' ')\n    return {\n      text: styles,\n      num: numStyle\n    }\n  }\n\n  firstUpdated () {\n    const element = this.shadowRoot\n    const dropdown = element.querySelector('[name=\"dropdown\"]')\n    const styles = this.getPlaceholderStyles()\n    this.instance = new Dropdown({$element: dropdown, $styles: styles})\n    this.updateComplete.then(() => {\n      const optionList = this.querySelectorAll('vfes-dropdown-item')\n      const inputList = Array.from(optionList).map((item) => {\n        return {\n          check: item.shadowRoot.querySelector('.js-dropdown-checkbox'),\n          label: item.innerHTML\n        }\n      })\n      this.instance.bindContainer(inputList)\n      this.instance.bindInputs(inputList)\n    })\n  }\n\n  get template () {\n    return html`\n    <div class=\"vfes-layout__item\">\n      <form class=\"vfes-form\" action=\"\" method=\"\">\n        <fieldset class=\"vfes-form__box\">\n          <legend class=\"visually-hidden\">${this.legend}</legend>\n\n          <!-- [ START ] Componente dropdown  -->\n          <div class=\"js-dropdown-select vfes-dropdown__select ${this.getState()}\" data-js=\"_dropdown\" name=\"dropdown\" value=\"opcion-1\">\n            <button ?disabled=${this.disabled} class=\"js-dropdown-button vfes-dropdown__select-value\" role=\"combobox\" aria-autocomplete=\"none\" aria-owns=\"combobox-list\" aria-expanded=\"false\" aria-labelledby=\"combobox-label\" aria-required=\"none\" aria-activedescendant=\"default\">\n              <p class=\"vfes-paragraph vfes-paragraph--large\">\n                  <strong>${this.label}</strong>\n              </p>\n              <div class=\"js-dropdown-placeholder vfes-dropdown__placeholder\"><p class=\"vfes-paragraph vfes-paragraph--large\">${this.placeholder}</p></div>\n            </button>\n            <ul class=\"vfes-dropdown__select-list js-dropdown-list\" role=\"listbox\" id=\"combobox-list\">\n              <li class=\"js-dropdown-option\" value=\"opcion-0\" role=\"option\" id=\"default\">\n                  <button class=\"js-dropdown-button-all vfes-dropdown__select-list-item vfes-dropdown__button-all\">Seleccionar todo</button> \n              </li>\n              <slot></slot>\n            </ul>\n          </div>\n        </fieldset>\n      </form>\n    </div>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-dropdown', VfesDropdown)\n","// Import the LitElement base class and html helper function\nimport { html } from 'lit-element'\nimport { VfesCustom } from '../custom'\nimport '../icon'\nimport '../form/checkItem'\n\n// Extend the LitElement base class\nexport class VfesDropdownCard extends VfesCustom {\n  static get properties () {\n    return {\n      title: { type: String },\n      date: { type: String },\n      tags: { type: Array },\n      amount: { type: String },\n      checkId: { type: String },\n      checkName: { type: String },\n      checkValue: { type: String }\n    }\n  }\n\n  getTags () {\n    console.log(this.tags.length)\n    this.tags.map(item => console.log(item))\n    return this.tags\n  }\n\n  get template () {\n    return html`\n      <div class=\"vfes-layout__item\">\n        <vfes-check-item \n            class=\"vfes-dropdown__cards\"\n            labelClass=\"vfes-dropdown__cards-label vfes-form__label--column\"\n            slot=\"title\" \n            id=\"${this.checkId}\" \n            name=\"${this.checkName}\" \n            value=\"${this.checkName}\"\n            labelClass=\"vfes-form__label\"\n            noWs10>\n          <p class=\"vfes-paragraph\">\n              <vfes-icon \n                class=\"vfes-dropdown__cards-icon\"\n                title=\"Business\"\n                icon=\"icon3-bill-or-report\" \n                width=\"24px\" \n                height=\"24px\">\n              </vfes-icon>\n              ${this.title}\n            </p>\n            <p class=\"vfes-paragraph vfes-dropdown__left vfes-dropdown__date\">${this.date}</p>\n            ${this.tags.map(item => html`<p class=\"vfes-dropdown vfes-dropdown__left vfes-dropdown--color-ligth-green vfes-dropdown__text vfes-paragraph\">${item}</p>`)}\n            <p class=\"vfes-paragraph vfes-paragraph--large vfes-dropdown-text-rigth\"><strong>${this.amount}</strong></p>\n        </vfes-check-item>\n      </div>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-dropdown-card', VfesDropdownCard)\n","// Import the LitElement base class and html helper function\nimport { html } from 'lit-element'\nimport { VfesCustom } from '../custom'\n\n// Extend the LitElement base class\nexport class VfesDropdownItem extends VfesCustom {\n  static get properties () {\n    return {\n      id: { type: String },\n      name: { type: String },\n      value: { type: String }\n    }\n  }\n\n  get template () {\n    return html`\n    <li class=\"vfes-dropdown__select-open js-dropdown-option\" value=\"${this.value}\" role=\"option\">\n      <div class=\"vfes-dropdown__box\">\n      <input \n        class=\"js-dropdown-checkbox vfes-form__checkbox\" \n        type=\"checkbox\" \n        id=\"${this.id}\" \n        name=\"${this.name}\" \n        value=\"${this.value}\">\n      <label class=\"vfes-dropdown__select-list-item vfes-form__label\" for=\"${this.id}\">\n        <slot></slot>\n      </label>\n      </div>\n    </li>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-dropdown-item', VfesDropdownItem)\n","// Import the LitElement base class and html helper function\nimport { html } from 'lit-element'\nimport { VfesCustom } from '../custom'\nimport '../icon'\nimport '../form/checkItem'\n\n// Extend the LitElement base class\nexport class VfesDropdownTiles extends VfesCustom {\n  static get properties () {\n    return {\n      title: { type: String },\n      date: { type: String },\n      tags: { type: Array },\n      amount: { type: String },\n      checkId: { type: String },\n      checkName: { type: String },\n      checkValue: { type: String }\n    }\n  }\n\n  getTags () {\n    console.log(this.tags.length)\n    this.tags.map(item => console.log(item))\n    return this.tags\n  }\n\n  get template () {\n    return html`\n      <div class=\"vfes-dropdown__select-open vfes-dropdown__tiles\">\n        <div class=\"vfes-form__box vfes-dropdown__border vfes-box-shadow\">\n        <vfes-check-item \n            slot=\"title\" \n            id=\"${this.checkId}\" \n            name=\"${this.checkName}\" \n            value=\"${this.checkName}\"\n            labelClass=\"vfes-dropdown__tiles\"\n            noWs10>\n            <p class=\"vfes-paragraph\">\n              <vfes-icon \n                class=\"vfes-dropdown__tiles-icon\"\n                title=\"Business\"\n                icon=\"icon3-bill-or-report\" \n                width=\"24px\" \n                height=\"24px\">\n              </vfes-icon>\n              ${this.title}\n            </p>\n            ${this.tags.map(item => html`<p class=\"vfes-dropdown vfes-dropdown__left vfes-dropdown--color-ligth-green vfes-dropdown__text vfes-paragraph\">${item}</p>`)}\n            <p class=\"vfes-paragraph vfes-dropdown__left vfes-dropdown__date\">${this.date}</p>\n            <p class=\"vfes-paragraph vfes-paragraph--large vfes-dropdown-text-rigth\">${this.amount}</p>\n          </vfes-check-item>\n        </div>\n      </div>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-dropdown-tiles', VfesDropdownTiles)\n","// Import the LitElement base class and html helper function\nimport { html, css } from 'lit-element'\nimport { VfesCustom } from '../custom'\nimport '../icon'\n\n// Extend the LitElement base class\nexport class VfesAutocompleteItem extends VfesCustom {\n  static get styles() {\n    return css`\n    :host {\n      width: 100%;\n    }`;\n  }\n\n  get template () {\n    return html`\n      <li \n      role=\"option\" \n      class=\"\">\n        <slot></slot>\n      </li>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-autocomplete-item', VfesAutocompleteItem)\n","// Import the LitElement base class and html helper function\nimport { html, css } from 'lit-element'\nimport { ifDefined } from 'lit-html/directives/if-defined.js'\nimport { VfesCustom } from '../custom';\n\n// Extend the LitElement base class\nexport class VfesCheckItem extends VfesCustom {\n  static get properties () {\n    return {\n      id: {\n        type: String,\n        attribute: true\n      },\n      name: {\n        type: String,\n        attribute: true\n      },\n      checked: { \n        type: Boolean,\n        attribute: true\n      },\n      labelClass: { type: String },\n      disabled: { type: Boolean },\n      alignRight: { type: Boolean },\n      noWs10: { type: Boolean }\n    }\n  }\n\n  static get styles() {\n    return css`\n    :host {\n      width: 100%;\n    }`;\n  }\n\n  getAlign () {\n    return this.alignRight ? 'vfes-form__checkbox--right' : ''\n  }\n\n  updateCheckValue (e) {\n    this.checked = e.target.checked\n  }\n\n  get template () {\n    const id = 'checkbox-' + (Math.floor(Math.random() * 9000000000) + 1000000000)\n    return html`\n    <input \n      class=\"${this.noWs10 ? '' : 'vfes-ws10'} vfes-form__checkbox ${this.getAlign()}\" \n      type=\"checkbox\" \n      id=${id}\n      .name=${ifDefined(this.name)}\n      .checked=${this.checked}\n      ?disabled=${this.disabled}\n      @change=\"${this.updateCheckValue}\">\n    <label class=\"vfes-form__label ${this.labelClass ? this.labelClass : ''}\" for=\"${id}\">\n      <slot></slot>\n    </label>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-check-item', VfesCheckItem)\n","// Import the LitElement base class and html helper function\nimport { html, css } from 'lit-element'\nimport { VfesCustom } from '../custom'\nimport Autocomplete from '../../es/_autocomplete';\nimport '../icon'\n\n// Extend the LitElement base class\nexport class VfesInputAutocomplete extends VfesCustom {\n  firstUpdated () {\n    const options = Array.from(this.querySelectorAll('vfes-autocomplete-item')).map(item => item.shadowRoot)\n    const config = {\n      $element: this.shadowRoot.querySelector('.js-form-autocomplete'),\n      $options: options\n    }\n    this.instance = new Autocomplete(config)\n    this.instance.init()\n  }\n\n  static get properties () {\n    return {\n      id: {\n        type: String,\n        attribute: true\n      },\n      name: {\n        type: String,\n        attribute: true\n      },\n      value: { type: String },\n      disabled: {\n        type: Boolean,\n        attribute: true\n      },\n      placeholder: { type: String },\n      idLabel: { type: String },\n      locate: { type: Boolean },\n      buttonLabel: { type: String },\n      ariaLabelledBy: {\n        type: String,\n        attribute: true\n      }\n    }\n  }\n\n  constructor () {\n    super()\n    this.placeholder = ''\n    this.value = ''\n    this.buttonLabel = ''\n  }\n\n  isLocate () {\n    return this.locate ? 'autocomplete' : 'dropdown'\n  }\n\n  get template () {\n    return html`\n    <div>\n      <input \n        class=\"vfes-ws10 vfes-form__input vfes-form__input--${this.isLocate()} js-form-autocomplete\" \n        .aria-labelledby=\"${this.ariaLabelledBy}\" \n        type=\"text\" \n        .id=\"${this.id}\" \n        aria-autocomplete=\"both\" \n        aria-expanded=\"false\" \n        aria-owns=\"vfes-autocomplete\" \n        .name=\"${this.name}\" \n        .value=\"${this.value}\" \n        placeholder=\"${this.placeholder}\" \n        autocomplete=\"off\"/>\n      <span class=\"vfes-form__label\" id=\"${this.idLabel}\">\n        <slot name=\"label\"></slot>\n      </span>\n      ${this.locate ? \n        html`<button type=\"button\" class=\"vfes-form__icon vfes-form__icon-search\" aria-label=\"${this.buttonLabel}\">\n        <vfes-icon \n        class=\"vfes-form__input--autocomplete\" \n        width='32px' \n        height='32px' \n        title=\"Locate\" icon='icon3-locate-me'></vfes-icon></button>` :\n        html`<vfes-icon \n        class=\"vfes-form__input--dropdown vfes-form__icon vfes-form__icon-down\" \n        width='32px' \n        height='32px' \n        title=\"Warning\" icon='icon3-chevron-down'></vfes-icon>  \n        <vfes-icon \n        class=\"vfes-form__input--dropdown vfes-form__icon vfes-form__icon-up\" \n        width='32px' \n        height='32px' \n        title=\"Warning\" icon='icon3-chevron-up'></vfes-icon>`}\n      <ul \n        id=\"vfes-autocomplete\" \n        name=\"vfes-autocomplete\" \n        role=\"listbox\" \n        class=\"vfes-ws10 vfes-form__autocomplete-list js-form-autocomplete-list\" name=\"options\">\n        <slot name=\"options\"></slot>\n      </ul>\n    </div>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-input-autocomplete', VfesInputAutocomplete)\n","// Import the LitElement base class and html helper function\nimport { html, css, svg } from 'lit-element'\nimport { VfesCustom } from '../custom'\nimport '../icon'\n\n// Extend the LitElement base class\nexport class VfesInputItem extends VfesCustom {\n  static get properties () {\n    return {\n      id: {\n        type: String,\n        attribute: true\n      },\n      name: {\n        type: String,\n        attribute: true\n      },\n      value: { \n        type: String,\n        attribute: true\n      },\n      disabled: { type: Boolean },\n      ariaLabelled: { type: String },\n      placeholder: { type: String },\n      state: { type: String },\n      idLabel: { type: String }\n    }\n  }\n\n  constructor () {\n    super()\n    this.ariaLabelled = ''\n    this.placeholder = ''\n    this.value = ''\n    this.state = ''\n  }\n\n  static get styles() {\n    return css`\n    :host {\n      width: 100%;\n    }`;\n  }\n\n  getState () {\n    return this.state ? 'vfes-form__input--' + this.state : ''\n  }\n\n  updateInput (e) {\n    this.value = e.target.value\n  }\n\n  get template () {\n    return html`\n    <input \n      @change=\"${this.updateInput}\"\n      class=\"vfes-ws10 vfes-form__input ${this.getState()}\"\n      type=\"text\" \n      .id=\"${this.id}\" \n      .name=\"${this.name}\" \n      .value=\"${this.value}\"\n      ?disabled=${this.disabled}\n      aria-labelled=\"${this.ariaLabelled}\"\n      placeholder=\"${this.placeholder}\">\n    <span class=\"vfes-form__label\" id=\"${this.idLabel}\">\n      <slot name=\"label\"></slot>\n    </span>\n    <p class=\"vfes-form__error-text\">\n      <slot name=\"errorValidation\"></slot>\n    </p>\n    <vfes-icon \n      class=\"vfes-form__icon vfes-form__icon-warning\" \n      width='32px' \n      height='32px' \n      title=\"Warning\" icon='icon3-warning'></vfes-icon>\n    <vfes-icon \n    class=\"vfes-form__icon vfes-form__icon-tick\" \n    width='32px' \n    height='32px' \n    title=\"Warning\" icon='icon3-tick-or-solved'></vfes-icon>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-input-item', VfesInputItem)\n","// Import the LitElement base class and html helper function\nimport { html, css } from 'lit-element'\nimport { VfesCustom } from '../custom';\n\n// Extend the LitElement base class\nexport class VfesRadioItem extends VfesCustom {\n  static get properties () {\n    return {\n      name: {\n        type: String,\n        attribute: true\n      },\n      value: {\n        type: String,\n        attribute: true\n      },\n      checked: {\n        type: Boolean,\n        attribute: true\n      },\n      disabled: {\n        type: Boolean,\n        attribute: true\n      },\n      alignRight: { type: Boolean }\n    }\n  }\n\n  static get styles () {\n    return css`\n    :host {\n      width: 100%;\n    }`;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    document.addEventListener('radio-changed', this.handleChange);\n  }\n  disconnectedCallback() {\n    document.removeEventListener('radio-changed', this.handleChange);\n    super.disconnectedCallback();\n  }\n\n  getAlign () {\n    return this.alignRight ? 'vfes-form__radio--right' : ''\n  }\n\n  handleChange (e) {\n    const radios = this.querySelectorAll('vfes-radio-item[name=\"'+e.target.name+'\"]')\n    radios.forEach(radio => {\n      if (radio.id != e.target.id) {\n        radio.checked = false\n      }\n    })\n  }\n\n  updateRadio (e) {\n    let event = new CustomEvent('radio-changed', {\n      detail: {\n        message: 'radio changed'\n      },\n      bubbles: true\n    });\n    this.dispatchEvent(event);\n    this.checked = e.target.checked\n  }\n\n  get template () {\n    const id = 'radio-' + (Math.floor(Math.random() * 9000000000) + 1000000000)\n    return html`\n    <input \n      @radio-changed=\"${this.handleChange}\"\n      @change=\"${this.updateRadio}\"\n      class=\"vfes-ws10 vfes-form__radio ${this.getAlign()}\" \n      type=\"radio\" \n      id=\"${id}\" \n      .name=\"${this.name}\" \n      .value=\"${this.value}\"\n      .checked=${this.checked}\n      ?disabled=${this.disabled}>\n    <label class=\"vfes-form__label\" for=\"${id}\">\n      <slot></slot>\n    </label>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-radio-item', VfesRadioItem)\n","// Import the LitElement base class and html helper function\nimport { html, css } from 'lit-element'\nimport { VfesCustom } from '../custom';\n\n// Extend the LitElement base class\nexport class VfesSwitchItem extends VfesCustom {\n  static get properties () {\n    return {\n      name: {\n        type: String,\n        attribute: true\n      },\n      checked: {\n        type: Boolean,\n        attribute: true\n      },\n      disabled: { type: Boolean },\n      size: { type: String }\n    }\n  }\n\n  static get styles() {\n    return css`\n    :host {\n      width: 100%;\n    }`;\n  }\n\n  getSize () {\n    return 'vfes-form__switch--' + this.size\n  }\n\n  updateSwitch (e) {\n    this.checked = e.target.checked\n  }\n\n  get template () {\n    const id = 'checkbox-' + (Math.floor(Math.random() * 9000000000) + 1000000000)\n    return html`\n    <input \n      @change=\"${this.updateSwitch}\"\n      class=\"vfes-ws10 vfes-form__switch ${this.getSize()}\" \n      type=\"checkbox\" \n      id=\"${id}\" \n      .name=\"${this.name}\" \n      .checked=\"${this.checked}\"\n      ?disabled=${this.disabled}>\n    <label class=\"vfes-form__switch-label\" for=\"${id}\">\n      <slot></slot>\n    </label>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-switch-item', VfesSwitchItem)\n","// Import the LitElement base class and html helper function\nimport { html, css, svg, unsafeCSS } from 'lit-element'\nimport { VfesCustom } from './custom'\n\n// Extend the LitElement base class\nexport class VfesIcon extends VfesCustom {\n  static get properties () {\n    return {\n      title: { type: String },\n      class: { type: String },\n      icon: { type: String },\n      height: { type: String },\n      width: { type: String }\n    }\n  }\n\n  static get styles() {    \n    return css`\n      :host { \n        height: ${unsafeCSS(this.height)};\n      }\n    `;\n  } \n\n  firstUpdated () {\n    const namespace = 'http://www.w3.org/1999/xlink'\n    const svgPath = '/public/svg/sprite.v3.svg'\n    let useelement = this.shadowRoot.querySelector('use')\n    useelement.setAttributeNS(namespace, 'xlink:href', svgPath + '#' + this.icon)\n  }\n\n  get template () {\n    return html`\n      ${svg`<svg class=\"${this.class}\" height=\"${this.height}\" width=\"${this.width}\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <title>${this.title}</title>\n        <use class=\"icon-v3\" xlink:href=\"\"></use>\n      </svg>`}\n      `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-icon', VfesIcon)\n","// Import the LitElement base class and html helper function\nimport { html } from 'lit-element'\nimport { VfesCustom } from '../custom'\n\n// Extend the LitElement base class\nexport class VfesTagLabel extends VfesCustom {\n  static get properties () {\n    return {\n      color: { type: String },\n      border: { type: Boolean },\n      alignRight: { type: Boolean }\n    }\n  }\n\n  getBorder () {\n    return this.border ? 'vfes-tag-label--border' : ''\n  }\n\n  getAlign () {\n    return this.alignRight ? 'vfes-tag-label--right' : ''\n  }\n\n  get template() {\n    return html`\n      <div class=\"vfes-ws10 vfes-layout\">\n        <div class=\"vfes-layout__wrapper\">\n          <div class=\"vfes-layout__item\" style=\"padding:24px\">\n              <div class=\"vfes-tag-label vfes-tag-label--${this.color} ${this.getBorder()} ${this.getAlign()}\" style=\"padding:24px\">\n                  <div class=\"vfes-tag-label__outstanding\"><slot name=\"tag\"></slot></div>\n                      <slot name=\"content\"></slot>\n              </div>\n          </div>\n        </div>\n      </div>\n    `\n  }\n}\n// Register the new element with the browser.\ncustomElements.define('vfes-tag-label', VfesTagLabel)\n","import './custom.js';\nimport './icon.js';\nimport './accordion/accordion.js';\nimport './accordion/accordionLinks.js';\nimport './avatar/avatar.js';\nimport './avatar/avatarImage.js';\nimport './avatar/avatarText.js';\nimport './boloText/boloText.js';\nimport './button/button.js';\nimport './button/buttonLink.js';\nimport './card/card.js';\nimport './card/cardMobile.js';\nimport './carousel/carousel.js';\nimport './carousel/carouselItem.js';\nimport './dropdown/dropdown.js';\nimport './dropdown/dropdownItem.js';\nimport './dropdown/dropdownCard.js';\nimport './dropdown/dropdownTiles.js';\nimport './form/autocompleteItem.js';\nimport './form/checkItem.js';\nimport './form/inputAutocomplete.js';\nimport './form/inputItem.js';\nimport './form/radioItem.js';\nimport './form/switchItem.js';\nimport './tagLabel/tagLabel.js';"],"sourceRoot":""}