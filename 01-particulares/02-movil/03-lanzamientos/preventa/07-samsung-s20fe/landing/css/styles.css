/**
 * Vodafone Reboot Framework: Version 2.4.1. Generation Date: 2020-09-23T09:09:04.251Z
 */

.vfes-ms-content .vfms-hero {
  min-height: 11.25rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-hero {
    min-height: 14.5rem;
    background-image:  url('../img/bg-tablet.jpg?v=dc0abbec60baf1c3fd15df5ce2dcec01');
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-hero {
    min-height: 14.625rem;
    background-image:  url('../img/bg-desktop.jpg?v=f551791ee539eeb6651b9c88152ce974');
    background-size: contain;
    background-position: center;
  }
}

.vfes-ms-content .vfms-hero__title {
  text-align: center;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-hero__title {
    text-align: left;
    font-size: 2.5rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-hero__item {
    min-width: 31.75rem;
  }
}

.vfes-ms-content .vfms-hero__block {
  display: block;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-hero__block {
    display: inline-block;
  }
}

.vfes-ms-content .vfms-large {
  width: 100%;
}

.vfes-ms-content .vfms-mobile-card {
  padding: 1.25rem;
}

.vfes-ms-content .vfms-mobile .vfes-tag-label__outstanding {
  left: 0;
  display: flex;
}

.vfes-ms-content .vfms-mobile .vfes-tag-label__outstanding .vfms-icon {
  width: 1.25rem;
  height: 1.25rem;
}

.vfes-ms-content .vfms-mobile-img {
  position: relative;
  display: block;
  margin: 0 auto;
}

.vfes-ms-content .vfms-mobile-colors {
  width: 1.25rem;
  height: 1.25rem;
  border-radius: 50%;
  margin: 0 auto;
}

.vfes-ms-content .vfms-mobile-colors__list {
  margin-left: -0.625rem;
}

.vfes-ms-content .vfms-mobile-colors__shadow {
  box-shadow: 0 0.0625rem 0.0625rem 0.0625rem #ddd;
}

.vfes-ms-content .vfms-mobile-colors__black {
  background-color: #3d3936;
}

.vfes-ms-content .vfms-mobile-colors__pink {
  background-color: #9a716e;
}

.vfes-ms-content .vfms-mobile-colors__green {
  background-color: #b1c0bc;
}

.vfes-ms-content .vfms-mobile-prices {
  text-align: center;
}

.vfes-ms-content .vfms-mobile-prices-big {
  font-size: 1.25rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-mobile-prices-big {
    font-size: 1.4375rem;
  }
}

.vfes-ms-content .vfms-mobile .vfms-flex {
  display: flex;
  width: 100%;
  border-top: 0.0625rem solid #ccc;
  padding: 0.75rem 0 1rem 0;
  justify-content: space-between;
}

.vfes-ms-content .vfms-mobile .vfms-flex:nth-child(3) {
  border-bottom: 0.0625rem solid #ccc;
}

.vfes-ms-content .vfms-mobile .vfms-flex-left {
  display: flex;
}

.vfes-ms-content .vfms-mobile .vfms-flex-left__title {
  padding-left: 0.5625rem;
}

.vfes-ms-content .vfms-mobile .vfms-flex-left__img {
  min-width: 1.25rem;
}

.vfes-ms-content .vfms-mobile .vfms-flex-right {
  display: flex;
  flex-direction: column;
  text-align: right;
}

.vfes-ms-content .vfms-mobile .vfms-flex-right p {
  margin-bottom: 0;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-card__title {
    min-height: 5.8125rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-card__title-watch {
    min-height: 7.6875rem;
  }
}

.vfes-ms-content .vfms-why__icons {
  width: 3.75rem;
  height: 3.75rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-why__icons {
    width: 5rem;
    height: 5rem;
  }
}

.vfes-ms-content .vfms-why__size {
  width: 6.25rem;
  height: 6.25rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-why__size {
    width: 8.125rem;
    height: 8.125rem;
  }
}

.vfes-ms-content .vfms-form--container {
  max-width: 34.375rem;
  margin: 0 auto;
}

.vfes-ms-content .vfms-modal {
  overflow-y: unset;
}

.vfes-ms-content .vfms-select__packs {
  display: inline-block;
  font-size: 1.125rem;
  line-height: 1.3;
  margin: 0;
  width: 100%;
  padding: .5625rem 2.8125rem .5625rem .75rem;
  text-align: left;
  position: relative;
  border: .0625rem solid #999;
  border-radius: .375rem;
}

.vfes-ms-content .packs:after {
  content: "";
  position: absolute;
  right: .9375rem;
  top: 50%;
  border-width: .0625rem;
  border-right: .0625rem solid #333;
  border-top: .0625rem solid #333;
  display: block;
  width: .875rem;
  height: .875rem;
  transform: rotate(135deg);
  transform: translate3d(0, -0.75rem, 0) rotate(135deg);
}

.vfes-ms-content p.vfes-why-vodafone__title {
  font-size: 1.75rem;
}

.vfes-ms-content .vfes-why-vodafone .vfes-title {
  text-align: left;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
