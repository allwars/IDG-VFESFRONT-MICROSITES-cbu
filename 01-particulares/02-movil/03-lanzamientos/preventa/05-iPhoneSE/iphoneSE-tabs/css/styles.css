/**
 * Vodafone Reboot Framework: Version 15.6.0. Generation Date: 2020-04-16T14:25:58.569Z
 */

.vfes-ms-content .vfms-modal {
  overflow-y: unset;
}

.vfes-ms-content .vfms-large {
  width: 100%;
}

.vfes-ms-content .vfms-nopaddingtop {
  padding-top: 0;
}

.vfes-ms-content .vfms-nopadding {
  padding: 0;
}

.vfes-ms-content .vfms-hero {
  background-color: #ffffff;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-hero {
    background-image: url("../img/hero-background-tablet.png");
    background-size: cover;
    background-position: center;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-hero {
    background-image: url("../img/hero-background-desktop.png");
    background-size: cover;
    background-position: center;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-hero__container {
    max-width: 23rem;
    margin-left: 9.375rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-hero__container {
    max-width: none;
    width: 42rem;
    margin-left: 9.375rem;
  }
}

.vfes-ms-content .vfms-hero__align {
  text-align: center;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-hero__align {
    text-align: left;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-hero__title {
    font-size: 2.5rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-hero__title {
    font-size: 3.375rem;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-hero__subtitle {
    font-size: 1.5rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-hero__subtitle {
    font-size: 1.75rem;
  }
}

.vfes-ms-content .vfes-tabs__tab {
  max-width: 10rem;
}

.vfes-ms-content .vfes-tabs__tab-button {
  padding: 0.9375rem 0;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-tabs__title {
    font-size: 1.875rem;
  }
}

.vfes-ms-content .vfms-mobile {
  padding-top: 0;
}

.vfes-ms-content .vfms-mobile-card {
  padding: 1.25rem;
}

.vfes-ms-content .vfms-mobile .vfes-tag-label__outstanding {
  left: 0;
  display: -webkit-box;
  display: flex;
}

.vfes-ms-content .vfms-mobile .vfes-tag-label__outstanding .vfms-icon {
  width: 1.25rem;
  height: 1.25rem;
}

.vfes-ms-content .vfms-mobile-img {
  position: relative;
  display: block;
  margin: 0 auto;
  max-width: 3.125rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-mobile-img {
    max-width: 12.5rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-mobile-img {
    min-width: 5.4375rem;
  }
}

.vfes-ms-content .vfms-mobile-prices {
  text-align: center;
  padding: 0.9375rem 0rem;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-mobile-prices {
    min-height: 11.5625rem;
  }
}

.vfes-ms-content .vfms-mobile-prices-big {
  font-size: 1.25rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-mobile-prices-big {
    font-size: 1.4375rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-mobile-prices-big {
    font-size: 1.4375rem;
  }
}

.vfes-ms-content .vfms-mobile .vfms-flex {
  display: -webkit-box;
  display: flex;
  width: 100%;
  border-top: 0.0625rem solid #ccc;
  padding: 0.75rem 0 1rem 0;
  -webkit-box-pack: justify;
          justify-content: space-between;
}

.vfes-ms-content .vfms-mobile .vfms-flex:nth-child(3) {
  border-bottom: 0.0625rem solid #ccc;
}

.vfes-ms-content .vfms-mobile .vfms-flex-left {
  display: -webkit-box;
  display: flex;
}

.vfes-ms-content .vfms-mobile .vfms-flex-left__title {
  padding-left: 0.5625rem;
}

.vfes-ms-content .vfms-mobile .vfms-flex-right {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  text-align: right;
}

.vfes-ms-content .vfms-mobile .vfms-flex-right p {
  margin-bottom: 0;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-steps__title {
    font-size: 1.875rem;
  }
}

.vfes-ms-content .vfms-form--container {
  max-width: 34.375rem;
  margin: 0 auto;
}

.vfes-ms-content .vfes-card__product, .vfes-ms-content .vfes-button, .vfes-ms-content .vfes-layout__item {
  box-sizing: border-box !important;
}

.vfes-ms-content .vfes-layout {
  padding-top: 0.625rem;
}

.vfes-ms-content .vfes-modal {
  height: auto;
  background-color: rgba(0, 0, 0, 0.25);
  -webkit-box-align: center;
          align-items: center;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -webkit-box-pack: center;
          justify-content: center;
}

.vfes-ms-content .vfes-modal__content {
  margin-top: -0.3125rem;
}

.vfes-ms-content .vfes-modal .vfms-form--container {
  width: 90%;
  margin: 0 auto;
}

.vfes-ms-content .vfes-modal .vfms-text--container {
  width: 90%;
  margin: 0 auto;
  margin-bottom: 1.25rem;
}

.vfes-ms-content .vfes-modal .button-privacy {
  display: block;
}

.vfes-ms-content .vfes-modal .vfms-input {
  margin-bottom: 0.9375rem;
}

.vfes-ms-content .vfes-modal .vfms-input-left {
  margin-left: 0.625rem;
}

.vfes-ms-content .vfes-modal .vfms-device-title {
  margin-bottom: 0.3125rem;
}

.vfes-ms-content .vfes-modal .vfms-flex {
  display: -webkit-box;
  display: flex;
  margin-left: 0.625rem;
  padding: 0;
}

.vfes-ms-content .vfes-modal .vfms-large {
  width: 100%;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfes-modal__content {
    margin-top: 0.625rem;
  }
  .vfes-ms-content .vfes-modal .vfes-modal__item {
    max-width: 31.25rem;
  }
  .vfes-ms-content .vfes-modal .vfes-modal__head {
    padding-top: 1.875rem;
    margin-bottom: -0.625rem;
  }
  .vfes-ms-content .vfes-modal .vfms-form--container {
    max-width: 18.75rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfes-modal .vfes-modal__item {
    max-width: 43.75rem;
  }
}

html {
  scroll-behavior: smooth;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
