/**
 * Vodafone Reboot Framework: Version 2.7.1. Generation Date: 2021-01-12T23:07:19.674Z
 */

@charset "UTF-8";
.channel-html {
  font-weight: normal;
  -webkit-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
       text-size-adjust: 100%;
}

.channel-html,
.channel-html:before,
.channel-html:after,
.channel-html *,
.channel-html *:before,
.channel-html *:after {
  box-sizing: content-box;
  margin: 0;
  padding: 0;
  float: initial;
  pointer-events: auto;
  letter-spacing: normal;
}

.channel-html *,
.channel-html *:before,
.channel-html *:after {
  float: inherit;
  font-size: 1em;
  font-family: inherit;
  font-weight: inherit;
  line-height: inherit;
  text-align: inherit;
}

.channel-html div,
.channel-html details,
.channel-html figure,
.channel-html footer,
.channel-html section {
  display: block;
}

.channel-html img {
  border: 0;
  vertical-align: middle;
}

.channel-html,
.channel-html {
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", "Helvetica Neue", "Helvetica", "Arial", sans-serif, "SF Pro Icons";
}

.channel-html sup {
  font-size: 0.6em;
  vertical-align: top;
  position: relative;
  bottom: -0.2em;
}

h1 .channel-html sup,
h2 .channel-html sup,
h3 .channel-html sup {
  font-size: 0.4em;
}

.channel-html sup a {
  vertical-align: inherit;
  color: inherit;
}

.channel-html sup a:hover {
  color: #0066cc;
  text-decoration: none;
}

.channel-html html {
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

.channel-html body {
  margin: 0;
  padding: 0;
}

.channel-html ol,
.channel-html li,
.channel-html dd,
.channel-html h1,
.channel-html h2,
.channel-html h3,
.channel-html h4,
.channel-html h5,
.channel-html h6,
.channel-html p,
.channel-html figure {
  margin: 0;
  padding: 0;
}

.channel-html caption {
  font-size: 1em;
  font-weight: normal;
  font-style: normal;
}

.channel-html caption {
  text-align: left;
}

.channel-html details {
  display: block;
}

.channel-html progress {
  vertical-align: baseline;
}

.channel-html :focus {
  outline: 0.25rem solid rgba(0, 125, 250, 0.6);
  outline-offset: 0.0625rem;
}

.channel-html :focus[data-focus-method=mouse]:not(input):not(textarea):not(select),
.channel-html :focus[data-focus-method=touch]:not(input):not(textarea):not(select) {
  outline: none;
}

.channel-html ::-moz-focus-inner {
  border: 0;
  padding: 0;
}

.channel-html html {
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", "Helvetica Neue", "Helvetica", "Arial", sans-serif, "SF Pro Icons";
  font-size: 106.25%;
  quotes: "“" "”";
}

.channel-html body {
  font-size: 1.0625rem;
  line-height: 1.4705882353;
  font-weight: 400;
  letter-spacing: 0em;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", "Helvetica Neue", "Helvetica", "Arial", sans-serif, "SF Pro Icons";
  background-color: white;
  color: #1d1d1f;
  font-style: normal;
}

.channel-html body,
.channel-html h1,
.channel-html h2,
.channel-html h3,
.channel-html h4,
.channel-html h5,
.channel-html h6 {
  font-weight: 600;
  color: #1d1d1f;
}

.channel-html h1 img,
.channel-html h2 img,
.channel-html h3 img,
.channel-html h4 img,
.channel-html h5 img,
.channel-html h6 img {
  display: block;
  margin: 0;
}

.channel-html h1 + *,
.channel-html h2 + *,
.channel-html h3 + *,
.channel-html h4 + *,
.channel-html h5 + *,
.channel-html h6 + * {
  margin-top: 0.8em;
}

.channel-html h1 + h1,
.channel-html h1 + h2,
.channel-html h1 + h3,
.channel-html h1 + h4,
.channel-html h1 + h5,
.channel-html h1 + h6,
.channel-html h2 + h1,
.channel-html h2 + h2,
.channel-html h2 + h3,
.channel-html h2 + h4,
.channel-html h2 + h5,
.channel-html h2 + h6,
.channel-html h3 + h1,
.channel-html h3 + h2,
.channel-html h3 + h3,
.channel-html h3 + h4,
.channel-html h3 + h5,
.channel-html h3 + h6,
.channel-html h4 + h1,
.channel-html h4 + h2,
.channel-html h4 + h3,
.channel-html h4 + h4,
.channel-html h4 + h5,
.channel-html h4 + h6,
.channel-html h5 + h1,
.channel-html h5 + h2,
.channel-html h5 + h3,
.channel-html h5 + h4,
.channel-html h5 + h5,
.channel-html h5 + h6,
.channel-html h6 + h1,
.channel-html h6 + h2,
.channel-html h6 + h3,
.channel-html h6 + h4,
.channel-html h6 + h5,
.channel-html h6 + h6 {
  margin-top: 0.4em;
}

p + .channel-html h1,
ol + .channel-html h1,
p + .channel-html h2,
ol + .channel-html h2,
p + .channel-html h3,
ol + .channel-html h3,
p + .channel-html h4,
ol + .channel-html h4,
p + .channel-html h5,
ol + .channel-html h5,
p + .channel-html h6,
ol + .channel-html h6 {
  margin-top: 1.6em;
}

.channel-html p + *,
.channel-html ol + * {
  margin-top: 0.8em;
}

.channel-html ol {
  margin-left: 1.1764705882em;
}

.channel-html ol ol {
  margin-top: 0;
  margin-bottom: 0;
}

.channel-html li li {
  font-size: 1em;
}

.channel-html a,
.channel-html .link {
  color: #0066cc;
  letter-spacing: inherit;
}

.channel-html a:link,
.channel-html a:visited,
.channel-html .link:link,
.channel-html .link:visited {
  text-decoration: none;
}

.channel-html a:hover,
.channel-html .link:hover {
  text-decoration: underline;
}

.channel-html a:active,
.channel-html .link:active {
  text-decoration: none;
}

.channel-html a:disabled,
.channel-html .link:disabled {
  opacity: 0.32;
}

.channel-html b {
  font-weight: 600;
}

.channel-html sup {
  position: relative;
  font-size: 0.6em;
  vertical-align: baseline;
}

.channel-html sup {
  top: -0.5em;
}

.channel-html .footnote a {
  vertical-align: inherit;
  color: inherit;
}

.channel-html .footnote a:hover {
  color: #0066cc;
  text-decoration: none;
}

.channel-html .footnote-reduced {
  font-size: 0.45em;
}

sup.channel-html .footnote-reduced {
  top: -0.86em;
}

.channel-html .row {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  width: 100%;
}

.channel-html .column {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  min-width: 0rem;
}

.channel-html .large-offset-0 {
  margin-left: 0;
}

.channel-html .large-1 {
  flex-basis: 8.3333333333%;
  max-width: 8.3333333333%;
}

.channel-html .large-offset-1 {
  margin-left: 8.3333333333%;
}

.channel-html .large-2 {
  flex-basis: 16.6666666667%;
  max-width: 16.6666666667%;
}

.channel-html .large-offset-2 {
  margin-left: 16.6666666667%;
}

.channel-html .large-3 {
  flex-basis: 25%;
  max-width: 25%;
}

.channel-html .large-offset-3 {
  margin-left: 25%;
}

.channel-html .large-4 {
  flex-basis: 33.3333333333%;
  max-width: 33.3333333333%;
}

.channel-html .large-offset-4 {
  margin-left: 33.3333333333%;
}

.channel-html .large-5 {
  flex-basis: 41.6666666667%;
  max-width: 41.6666666667%;
}

.channel-html .large-offset-5 {
  margin-left: 41.6666666667%;
}

.channel-html .large-6 {
  flex-basis: 50%;
  max-width: 50%;
}

.channel-html .large-offset-6 {
  margin-left: 50%;
}

.channel-html .large-7 {
  flex-basis: 58.3333333333%;
  max-width: 58.3333333333%;
}

.channel-html .large-offset-7 {
  margin-left: 58.3333333333%;
}

.channel-html .large-8 {
  flex-basis: 66.6666666667%;
  max-width: 66.6666666667%;
}

.channel-html .large-offset-8 {
  margin-left: 66.6666666667%;
}

.channel-html .large-9 {
  flex-basis: 75%;
  max-width: 75%;
}

.channel-html .large-offset-9 {
  margin-left: 75%;
}

.channel-html .large-10 {
  flex-basis: 83.3333333333%;
  max-width: 83.3333333333%;
}

.channel-html .large-offset-10 {
  margin-left: 83.3333333333%;
}

.channel-html .large-11 {
  flex-basis: 91.6666666667%;
  max-width: 91.6666666667%;
}

.channel-html .large-offset-11 {
  margin-left: 91.6666666667%;
}

.channel-html .large-12 {
  flex-basis: 100%;
  max-width: 100%;
}

.channel-html .large-offset-12 {
  margin-left: 100%;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .medium-offset-0 {
    margin-left: 0;
  }
  .channel-html .medium-1 {
    flex-basis: 8.3333333333%;
    max-width: 8.3333333333%;
  }
  .channel-html .medium-offset-1 {
    margin-left: 8.3333333333%;
  }
  .channel-html .medium-2 {
    flex-basis: 16.6666666667%;
    max-width: 16.6666666667%;
  }
  .channel-html .medium-offset-2 {
    margin-left: 16.6666666667%;
  }
  .channel-html .medium-3 {
    flex-basis: 25%;
    max-width: 25%;
  }
  .channel-html .medium-offset-3 {
    margin-left: 25%;
  }
  .channel-html .medium-4 {
    flex-basis: 33.3333333333%;
    max-width: 33.3333333333%;
  }
  .channel-html .medium-offset-4 {
    margin-left: 33.3333333333%;
  }
  .channel-html .medium-5 {
    flex-basis: 41.6666666667%;
    max-width: 41.6666666667%;
  }
  .channel-html .medium-offset-5 {
    margin-left: 41.6666666667%;
  }
  .channel-html .medium-6 {
    flex-basis: 50%;
    max-width: 50%;
  }
  .channel-html .medium-offset-6 {
    margin-left: 50%;
  }
  .channel-html .medium-7 {
    flex-basis: 58.3333333333%;
    max-width: 58.3333333333%;
  }
  .channel-html .medium-offset-7 {
    margin-left: 58.3333333333%;
  }
  .channel-html .medium-8 {
    flex-basis: 66.6666666667%;
    max-width: 66.6666666667%;
  }
  .channel-html .medium-offset-8 {
    margin-left: 66.6666666667%;
  }
  .channel-html .medium-9 {
    flex-basis: 75%;
    max-width: 75%;
  }
  .channel-html .medium-offset-9 {
    margin-left: 75%;
  }
  .channel-html .medium-10 {
    flex-basis: 83.3333333333%;
    max-width: 83.3333333333%;
  }
  .channel-html .medium-offset-10 {
    margin-left: 83.3333333333%;
  }
  .channel-html .medium-11 {
    flex-basis: 91.6666666667%;
    max-width: 91.6666666667%;
  }
  .channel-html .medium-offset-11 {
    margin-left: 91.6666666667%;
  }
  .channel-html .medium-12 {
    flex-basis: 100%;
    max-width: 100%;
  }
  .channel-html .medium-offset-12 {
    margin-left: 100%;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .small-offset-0 {
    margin-left: 0;
  }
  .channel-html .small-1 {
    flex-basis: 8.3333333333%;
    max-width: 8.3333333333%;
  }
  .channel-html .small-offset-1 {
    margin-left: 8.3333333333%;
  }
  .channel-html .small-2 {
    flex-basis: 16.6666666667%;
    max-width: 16.6666666667%;
  }
  .channel-html .small-offset-2 {
    margin-left: 16.6666666667%;
  }
  .channel-html .small-3 {
    flex-basis: 25%;
    max-width: 25%;
  }
  .channel-html .small-offset-3 {
    margin-left: 25%;
  }
  .channel-html .small-4 {
    flex-basis: 33.3333333333%;
    max-width: 33.3333333333%;
  }
  .channel-html .small-offset-4 {
    margin-left: 33.3333333333%;
  }
  .channel-html .small-5 {
    flex-basis: 41.6666666667%;
    max-width: 41.6666666667%;
  }
  .channel-html .small-offset-5 {
    margin-left: 41.6666666667%;
  }
  .channel-html .small-6 {
    flex-basis: 50%;
    max-width: 50%;
  }
  .channel-html .small-offset-6 {
    margin-left: 50%;
  }
  .channel-html .small-7 {
    flex-basis: 58.3333333333%;
    max-width: 58.3333333333%;
  }
  .channel-html .small-offset-7 {
    margin-left: 58.3333333333%;
  }
  .channel-html .small-8 {
    flex-basis: 66.6666666667%;
    max-width: 66.6666666667%;
  }
  .channel-html .small-offset-8 {
    margin-left: 66.6666666667%;
  }
  .channel-html .small-9 {
    flex-basis: 75%;
    max-width: 75%;
  }
  .channel-html .small-offset-9 {
    margin-left: 75%;
  }
  .channel-html .small-10 {
    flex-basis: 83.3333333333%;
    max-width: 83.3333333333%;
  }
  .channel-html .small-offset-10 {
    margin-left: 83.3333333333%;
  }
  .channel-html .small-11 {
    flex-basis: 91.6666666667%;
    max-width: 91.6666666667%;
  }
  .channel-html .small-offset-11 {
    margin-left: 91.6666666667%;
  }
  .channel-html .small-12 {
    flex-basis: 100%;
    max-width: 100%;
  }
  .channel-html .small-offset-12 {
    margin-left: 100%;
  }
}

.channel-html .icon::before,
.channel-html .icon::after,
.channel-html .more::before,
.channel-html .more::after {
  font-family: "SF Pro Icons";
  color: inherit;
  display: inline-block;
  font-style: normal;
  font-weight: inherit;
  font-size: inherit;
  line-height: 1;
  text-decoration: underline;
  position: relative;
  z-index: 1;
  alt: "";
}

.channel-html .icon::before,
.channel-html .icon::after,
.channel-html .more::before,
.channel-html .more::after {
  text-decoration: none;
}

.channel-html .icon::before,
.channel-html .more::before {
  display: none;
}

.channel-html .icon-after::after,
.channel-html .more::after {
  padding-left: 0.3em;
  top: 0;
}

.channel-html .icon-apple::before,
.channel-html .icon-apple::after {
  content: "";
}

.channel-html .icon-chevronright::before,
.channel-html .icon-chevronright::after {
  content: "";
}

.channel-html .icon-share::before,
.channel-html .icon-share::after {
  content: "";
}

.channel-html .icon-check::before,
.channel-html .icon-check::after {
  content: "";
}

.channel-html .icon-close::before,
.channel-html .icon-close::after {
  content: "";
}

.channel-html .more::before,
.channel-html .more::after {
  content: "";
}

.channel-html .icon-wrapper .icon,
.channel-html .icon-wrapper .more::after,
.channel-html .icon-wrapper .icon-after::after {
  display: inline;
}

.channel-html a.icon-wrapper {
  text-decoration: none;
}

.channel-html a.icon-wrapper:hover .icon-copy {
  text-decoration: underline;
}

.channel-html .icon-wrapper {
  unicode-bidi: bidi-override;
}

.channel-html .icon-copy {
  unicode-bidi: embed;
}

.channel-html body {
  min-width: 20rem;
}

.channel-html .large-hide {
  display: none;
}

.channel-html .large-show {
  display: block;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .medium-hide {
    display: none;
  }
  .channel-html .medium-show {
    display: block;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .small-hide {
    display: none;
  }
  .channel-html .small-show {
    display: block;
  }
}

.channel-html [copy-type=h1] + *,
.channel-html [copy-type=h2] + *,
.channel-html [copy-type=h3] + *,
.channel-html [copy-type=h4] + *,
.channel-html [copy-type=h5] + *,
.channel-html [copy-type=h6] + * {
  margin-top: 0.8em;
}

[class*=typography-eyebrow] {
  display: block;
  margin-bottom: 0.4em;
}

[class*=typography-eyebrow] + * {
  margin-top: 0;
}

.typography-headline + .typography-intro {
  margin-top: 1.2em;
}

.typography-headline-super + .typography-intro-elevated {
  margin-top: 1.6em;
}

.typography-headline-elevated + .typography-intro-elevated {
  margin-top: 1.4em;
}

.typography-headline-reduced + p,
.typography-headline-reduced + .typography-body {
  margin-top: 1em;
}

.channel-compare .compare-wrapper {
  position: relative;
}

.channel-compare .compare-section {
  position: relative;
}

.channel-compare sup * {
  vertical-align: inherit;
  font-weight: 400;
}

.channel-compare .icon-check {
  position: relative;
  top: -0.3125rem;
}

.channel-compare .icon-check:after {
  font-size: 2.375rem;
}

.channel-compare .compare-section {
  padding-top: 2.4375rem;
  border: 0;
}

@media only screen and (max-width: 66.75rem) {
  .channel-compare .compare-section {
    padding-top: 3.3125rem;
    padding-bottom: 1.5625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-compare .compare-section {
    padding-top: 1.25rem;
    padding-bottom: 0.875rem;
  }
}

.channel-compare .compare-row {
  display: grid;
  grid-template-columns: repeat(var(--grid-column), calc((100% - 1.4375rem * (var(--grid-column) - 1))/var(--grid-column)));
  -moz-column-gap: 1.4375rem;
       column-gap: 1.4375rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-compare .compare-row {
    -moz-column-gap: 1.0625rem;
         column-gap: 1.0625rem;
  }
}

.channel-compare .compare-row {
  margin-bottom: 3.75rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-compare .compare-row {
    margin-bottom: 2.5rem;
  }
}

.channel-compare .compare-row:last-child {
  margin-bottom: 0;
}

.channel-compare .compare-column {
  display: none;
  box-sizing: border-box;
}

.channel-compare .compare .copy.helvetica-neue {
  font-weight: 500;
  line-height: 1.235;
}

[class*=typography-eyebrow] {
  display: block;
  margin-bottom: 0.4em;
}

[class*=typography-eyebrow] + * {
  margin-top: 0;
}

.typography-headline + .typography-intro {
  margin-top: 1.2em;
}

.typography-headline-super + .typography-intro-elevated {
  margin-top: 1.6em;
}

.typography-headline-elevated + .typography-intro-elevated {
  margin-top: 1.4em;
}

.typography-headline-reduced + p,
.typography-headline-reduced + .typography-body {
  margin-top: 1em;
}

[class*=typography-eyebrow] {
  display: block;
  margin-bottom: 0.4em;
}

[class*=typography-eyebrow] + * {
  margin-top: 0;
}

.typography-headline + .typography-intro {
  margin-top: 1.2em;
}

.typography-headline-super + .typography-intro-elevated {
  margin-top: 1.6em;
}

.typography-headline-elevated + .typography-intro-elevated {
  margin-top: 1.4em;
}

.typography-headline-reduced + p,
.typography-headline-reduced + .typography-body {
  margin-top: 1em;
}

.channel-compare .row-colors {
  width: 100%;
  text-align: center;
  border-bottom: 0.0625rem solid #d6d6d6;
  padding-bottom: 1.6875rem;
  margin-bottom: 1.6875rem;
  margin-top: 1.8125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-compare .row-colors {
    padding-bottom: 1.375rem;
    margin-bottom: 1.375rem;
    margin-top: 1.375rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-compare .row-colors {
    padding-bottom: 1.0625rem;
    margin-bottom: 1.125rem;
    margin-top: 1.125rem;
  }
}

.channel-html .typography-headline-super {
  font-size: 5rem;
  line-height: 1.05;
  font-weight: 600;
  letter-spacing: -0.015em;
  font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .typography-headline-super {
    font-size: 4rem;
    line-height: 1.0625;
    font-weight: 600;
    letter-spacing: -0.009em;
    font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .typography-headline-super {
    font-size: 3rem;
    line-height: 1.0834933333;
    font-weight: 600;
    letter-spacing: -0.003em;
    font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  }
}

.channel-html .typography-headline-elevated {
  font-size: 4rem;
  line-height: 1.0625;
  font-weight: 600;
  letter-spacing: -0.009em;
  font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .typography-headline-elevated {
    font-size: 3rem;
    line-height: 1.0834933333;
    font-weight: 600;
    letter-spacing: -0.003em;
    font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .typography-headline-elevated {
    font-size: 2.5rem;
    line-height: 1.1;
    font-weight: 600;
    letter-spacing: 0em;
    font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  }
}

.channel-html .typography-headline {
  font-size: 3rem;
  line-height: 1.0834933333;
  font-weight: 600;
  letter-spacing: -0.003em;
  font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .typography-headline {
    font-size: 2.5rem;
    line-height: 1.1;
    font-weight: 600;
    letter-spacing: 0em;
    font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .typography-headline {
    font-size: 2rem;
    line-height: 1.125;
    font-weight: 600;
    letter-spacing: 0.004em;
    font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  }
}

.channel-html .typography-headline-reduced {
  font-size: 2.5rem;
  line-height: 1.1;
  font-weight: 600;
  letter-spacing: 0em;
  font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .typography-headline-reduced {
    font-size: 2rem;
    line-height: 1.125;
    font-weight: 600;
    letter-spacing: 0.004em;
    font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .typography-headline-reduced {
    font-size: 1.75rem;
    line-height: 1.1428571429;
    font-weight: 600;
    letter-spacing: 0.007em;
    font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  }
}

.channel-html .typography-eyebrow-super {
  font-size: 2rem;
  line-height: 1.125;
  font-weight: 600;
  letter-spacing: 0.004em;
  font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .typography-eyebrow-super {
    font-size: 1.75rem;
    line-height: 1.1428571429;
    font-weight: 600;
    letter-spacing: 0.007em;
    font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .typography-eyebrow-super {
    font-size: 1.5rem;
    line-height: 1.1666666667;
    font-weight: 600;
    letter-spacing: 0.009em;
    font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  }
}

.channel-html .typography-eyebrow-elevated {
  font-size: 1.75rem;
  line-height: 1.1428571429;
  font-weight: 600;
  letter-spacing: 0.007em;
  font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .typography-eyebrow-elevated {
    font-size: 1.5rem;
    line-height: 1.1666666667;
    font-weight: 600;
    letter-spacing: 0.009em;
    font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .typography-eyebrow-elevated {
    font-size: 1.3125rem;
    line-height: 1.1904761905;
    font-weight: 600;
    letter-spacing: 0.011em;
    font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  }
}

.channel-html .typography-eyebrow {
  font-size: 1.5rem;
  line-height: 1.1666666667;
  font-weight: 600;
  letter-spacing: 0.009em;
  font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .typography-eyebrow {
    font-size: 1.3125rem;
    line-height: 1.1904761905;
    font-weight: 600;
    letter-spacing: 0.011em;
    font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  }
}

.channel-html .typography-eyebrow-reduced {
  font-size: 1.3125rem;
  line-height: 1.1904761905;
  font-weight: 600;
  letter-spacing: 0.011em;
  font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .typography-eyebrow-reduced {
    font-size: 1.1875rem;
    line-height: 1.2105263158;
    font-weight: 600;
    letter-spacing: 0.012em;
    font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  }
}

.channel-html .typography-intro-elevated {
  font-size: 1.5rem;
  line-height: 1.3334133333;
  font-weight: 400;
  letter-spacing: 0.009em;
  font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .typography-intro-elevated {
    font-size: 1.3125rem;
    line-height: 1.381002381;
    font-weight: 400;
    letter-spacing: 0.011em;
    font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  }
}

.channel-html .typography-intro {
  font-size: 1.3125rem;
  line-height: 1.381002381;
  font-weight: 400;
  letter-spacing: 0.011em;
  font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .typography-intro {
    font-size: 1.1875rem;
    line-height: 1.4211026316;
    font-weight: 400;
    letter-spacing: 0.012em;
    font-family: "SF Pro Display", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  }
}

.channel-html .typography-body {
  font-size: 1.0625rem;
  line-height: 1.4705882353;
  font-weight: 400;
  letter-spacing: -0.022em;
  font-family: "SF Pro Text", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}

.channel-html .typography-body-tight {
  font-size: 1.0625rem;
  line-height: 1.2353641176;
  font-weight: 400;
  letter-spacing: -0.022em;
  font-family: "SF Pro Text", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}

.channel-html .typography-body-reduced {
  font-size: 0.875rem;
  line-height: 1.4285914286;
  font-weight: 400;
  letter-spacing: -0.016em;
  font-family: "SF Pro Text", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}

.channel-html .typography-body-reduced-tight {
  font-size: 0.875rem;
  line-height: 1.2857742857;
  font-weight: 400;
  letter-spacing: -0.016em;
  font-family: "SF Pro Text", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}

.channel-html .typography-caption {
  font-size: 0.75rem;
  line-height: 1.3333733333;
  font-weight: 400;
  letter-spacing: -0.01em;
  font-family: "SF Pro Text", "SF Pro Icons", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}

.channel-html [class*=typography-eyebrow] {
  display: block;
  margin-bottom: 0.4em;
}

.channel-html [class*=typography-eyebrow] + * {
  margin-top: 0;
}

.channel-html .typography-headline + .typography-intro {
  margin-top: 1.2em;
}

.channel-html .typography-headline-super + .typography-intro-elevated {
  margin-top: 1.6em;
}

.channel-html .typography-headline-elevated + .typography-intro-elevated {
  margin-top: 1.4em;
}

.channel-html .typography-headline-reduced + p,
.channel-html .typography-headline-reduced + .typography-body {
  margin-top: 1em;
}

.channel-html .copy {
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}

.channel-html .copy.helvetica-neue {
  font-family: "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  letter-spacing: normal;
}

.channel-html .typography-caption li {
  padding-bottom: 0.625rem;
}

.channel-html a.footer-link {
  color: #555555;
}

.channel-html .custom-17-body-reduced {
  font-size: 1.0625rem;
  line-height: 1.5625rem;
  letter-spacing: -0.022em;
  font-weight: 400;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .custom-17-body-reduced {
    font-size: 1.1875rem;
    line-height: 1.6875rem;
    letter-spacing: 0.012em;
  }
}

@font-face {
  font-family: "SF Pro Icons";
  src: url(data:font/truetype;charset=utf-8;base64,) format("truetype");
  font-weight: normal;
  font-style: normal;
}

.channel-html .key-line {
  display: flex;
  width: 100%;
  height: 1.25rem;
}

.channel-html .key-line .liner {
  align-self: center;
}

.channel-html .link-wrapper {
  display: inline-flex;
}

body {
  margin: 0;
}

.channel-html .theme-dark {
  background-color: black;
  color: #f5f5f7;
}

.channel-html .theme-dark h1,
.channel-html .theme-dark h2,
.channel-html .theme-dark h3,
.channel-html .theme-dark h4,
.channel-html .theme-dark h5,
.channel-html .theme-dark h6 {
  color: #f5f5f7;
}

.channel-html .theme-dark a,
.channel-html .theme-dark .link {
  color: #2997ff;
}

.channel-html .theme-dark .footnote a {
  color: inherit;
}

.channel-html .theme-dark .footnote a:hover {
  color: #2997ff;
}

@media only screen and (min-width: 66.8125rem) {
  .channel-html .row.large-display-bleed {
    position: relative;
  }
  .channel-html .row.large-display-bleed .column {
    z-index: 1;
  }
  .channel-html .row.large-display-bleed::after,
  .channel-html .row.large-display-bleed::before {
    display: block;
    content: " ";
    position: absolute;
    top: 0;
    height: 100%;
    width: 2.75rem;
    left: -2.75rem;
  }
  .channel-html .row.large-display-bleed::after {
    left: initial;
    right: -2.75rem;
  }
}

@media only screen and (min-width: 45.9375rem) and (max-width: 66.75rem) {
  .channel-html .row.medium-display-bleed {
    position: relative;
  }
  .channel-html .row.medium-display-bleed .column {
    z-index: 1;
  }
  .channel-html .row.medium-display-bleed::after,
  .channel-html .row.medium-display-bleed::before {
    display: block;
    content: " ";
    position: absolute;
    top: 0;
    height: 100%;
    width: 1.375rem;
    left: -1.375rem;
  }
  .channel-html .row.medium-display-bleed::after {
    left: initial;
    right: -1.375rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .row.small-display-bleed {
    position: relative;
  }
  .channel-html .row.small-display-bleed .column {
    z-index: 1;
  }
  .channel-html .row.small-display-bleed::after,
  .channel-html .row.small-display-bleed::before {
    display: block;
    content: " ";
    position: absolute;
    top: 0;
    height: 100%;
    width: 1.25rem;
    left: -1.25rem;
  }
  .channel-html .row.small-display-bleed::after {
    left: initial;
    right: -1.25rem;
  }
}

.channel-html .section {
  display: flex;
}

.channel-html .section .section-content {
  margin-left: auto;
  margin-right: auto;
  width: 61.25rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .section .section-content {
    width: 43.25rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .section .section-content {
    width: 17.5rem;
  }
}

.image-applecare {
  width: 13.3125rem;
  height: 18.25rem;
  background-size: 13.3125rem 18.25rem;
  background-repeat: no-repeat;
  background-image:  url('../img/applecare_large.jpg?v=0256a3ba1a3efef548a9d6630ff4391d');
}

.image-applecare_tick {
  width: 1.125rem;
  height: 1.5625rem;
  background-size: 1.125rem 1.5625rem;
  background-repeat: no-repeat;
  background-image:  url('../img/applecare_tick_large.png?v=acea97286f450b7111e8d0f8e2a13b44');
}

.image-bands {
  width: 25.625rem;
  height: 22.5rem;
  background-size: 25.625rem 22.5rem;
  background-repeat: no-repeat;
  background-image:  url('../img/bands_large.jpg?v=168ebf8cf3bc2560e3f74ac3c02b1725');
}

.image-compare_42mm_38mm {
  width: 3.1875rem;
  height: 3rem;
  background-size: 3.1875rem 3rem;
  background-repeat: no-repeat;
  background-image:  url('../img/compare_42mm_38mm_large.png?v=6eddc1781cc159d9f9cd58a21eb1a3cd');
}

.image-compare_44mm_40mm {
  width: 3.3125rem;
  height: 3.125rem;
  background-size: 3.3125rem 3.125rem;
  background-repeat: no-repeat;
  background-image:  url('../img/compare_44mm_40mm_large.png?v=fffbe631046ec8f350d33328fcfee484');
}

.image-compare_blood {
  width: 3.0625rem;
  height: 3.125rem;
  background-size: 3.0625rem 3.125rem;
  background-repeat: no-repeat;
  background-image:  url('../img/compare_blood_large.png?v=f122530b7ad2db5cccb493ad41b24baf');
}

.image-compare_ecg {
  width: 3.625rem;
  height: 2.9375rem;
  background-size: 3.625rem 2.9375rem;
  background-repeat: no-repeat;
  background-image:  url('../img/compare_ecg_large.png?v=c5c400a9d6fc04b9b82a7bf29306b410');
}

.image-compare_fall {
  width: 3.0625rem;
  height: 3.0625rem;
  background-size: 3.0625rem 3.0625rem;
  background-repeat: no-repeat;
  background-image:  url('../img/compare_fall_large.png?v=c2669da78fa58a781aa406a7667cb54d');
}

.image-compare_heart {
  width: 3.125rem;
  height: 2.875rem;
  background-size: 3.125rem 2.875rem;
  background-repeat: no-repeat;
  background-image:  url('../img/compare_heart_large.png?v=ff7f835c2d7e968dd84829a059fdf1b6');
}

.image-compare_se_aluminum {
  width: 6rem;
  height: 1.4375rem;
  background-size: 6rem 1.4375rem;
  background-repeat: no-repeat;
  background-image:  url('../img/compare_se_aluminum_large.png?v=fc09a5030bdaeed256be4835b831f333');
}

.image-compare_se_display {
  width: 2.875rem;
  height: 3.1875rem;
  background-size: 2.875rem 3.1875rem;
  background-repeat: no-repeat;
  background-image:  url('../img/compare_se_display_large.png?v=25ea7c15822cd6640dac9b87f80902ba');
}

.image-compare_se {
  width: 11.5625rem;
  height: 13.875rem;
  background-size: 11.5625rem 13.875rem;
  background-repeat: no-repeat;
  background-image:  url('../img/compare_se_large.jpg?v=d18974797a989ad383c5f7ecfc19a129');
}

.image-compare_series_3_aluminum {
  width: 3.75rem;
  height: 1.4375rem;
  background-size: 3.75rem 1.4375rem;
  background-repeat: no-repeat;
  background-image:  url('../img/compare_series_3_aluminum_large.png?v=a9fff29399f1152aac11ed9059e999a0');
}

.image-compare_series_3_display {
  width: 2.875rem;
  height: 3.1875rem;
  background-size: 2.875rem 3.1875rem;
  background-repeat: no-repeat;
  background-image:  url('../img/compare_series_3_display_large.png?v=33057ac819f39635b220293fc72a901f');
}

.image-compare_series_3 {
  width: 11.125rem;
  height: 13.8125rem;
  background-size: 11.125rem 13.8125rem;
  background-repeat: no-repeat;
  background-image:  url('../img/compare_series_3_large.jpg?v=a73e0f94bf635e495976466caf0e527d');
}

.image-compare_series_6_aluminum {
  width: 11.75rem;
  height: 2.6875rem;
  background-size: 11.75rem 2.6875rem;
  background-repeat: no-repeat;
  background-image:  url('../img/compare_series_6_aluminum_large.png?v=d3e22a0b68ec768a59dce2ad4db47119');
}

.image-compare_series_6_display {
  width: 2.9375rem;
  height: 3.1875rem;
  background-size: 2.9375rem 3.1875rem;
  background-repeat: no-repeat;
  background-image:  url('../img/compare_series_6_display_large.png?v=4c9f73906f8684e513521c8366ae26ec');
}

.image-compare_series_6 {
  width: 11.5625rem;
  height: 13.875rem;
  background-size: 11.5625rem 13.875rem;
  background-repeat: no-repeat;
  background-image:  url('../img/compare_series_6_large.jpg?v=9a1890b470c9928ec563186e6b0b7511');
}

.image-connected {
  width: 30.125rem;
  height: 36.5625rem;
  background-size: 30.125rem 36.5625rem;
  background-repeat: no-repeat;
  background-image:  url('../img/connected_large.png?v=80e44a27191ad70bcc270d1b03a09bf1');
}

.image-design_face {
  width: 1.9375rem;
  height: 2.3125rem;
  background-size: 1.9375rem 2.3125rem;
  background-repeat: no-repeat;
  background-image:  url('../img/design_face_large.png?v=6541de65f9bdc286c732c165c1473a20');
}

.image-design {
  width: 30.625rem;
  height: 42.5rem;
  background-size: 30.625rem 42.5rem;
  background-repeat: no-repeat;
  background-image:  url('../img/design_large.jpg?v=0beffc4cb89b4150f54a1403adb55532');
}

.image-fitness {
  width: 23.5625rem;
  height: 40.4375rem;
  background-size: 23.5625rem 40.4375rem;
  background-repeat: no-repeat;
  background-image:  url('../img/fitness_large.jpg?v=d90e24259e22c5d13eaf895d282151fe');
}

.image-fitness_workout {
  width: 23.0625rem;
  height: 2.3125rem;
  background-size: 23.0625rem 2.3125rem;
  background-repeat: no-repeat;
  background-image:  url('../img/fitness_workout_large.png?v=cbc9b5c786a542548c008be1eba06b16');
}

.image-health_blood {
  width: 2.3125rem;
  height: 2.3125rem;
  background-size: 2.3125rem 2.3125rem;
  background-repeat: no-repeat;
  background-image:  url('../img/health_blood_large.png?v=7fc653d03defb55c03bc1d7adf79192e');
}

.image-health_ecg {
  width: 2.3125rem;
  height: 2.3125rem;
  background-size: 2.3125rem 2.3125rem;
  background-repeat: no-repeat;
  background-image:  url('../img/health_ecg_large.png?v=14f5ea9bb9db88c2ef9067aefc71065d');
}

.image-health {
  width: 44.375rem;
  height: 39.375rem;
  background-size: 44.375rem 39.375rem;
  background-repeat: no-repeat;
  background-image:  url('../img/health_large.jpg?v=3cb910b76b22f8a0de942d7603f5568b');
}

.image-health_sleep {
  width: 2.3125rem;
  height: 2.3125rem;
  background-size: 2.3125rem 2.3125rem;
  background-repeat: no-repeat;
  background-image:  url('../img/health_sleep_large.png?v=26ae00b2cc05818c1bf668f9fee53582');
}

.image-hero {
  width: 29.75rem;
  height: 36rem;
  background-size: 29.75rem 36rem;
  background-repeat: no-repeat;
  background-image:  url('../img/hero_large.jpg?v=7acbc5d973b5b933a40b69147f819b09');
}

.image-hero_logo {
  width: 10.1875rem;
  height: 3.875rem;
  background-size: 10.1875rem 3.875rem;
  background-repeat: no-repeat;
  background-image:  url('../img/hero_logo_large.png?v=258f5a44afc85e61e67274c1939e554b');
}

.image-multiply_eyebrow {
  width: 10.9375rem;
  height: 1.0625rem;
  background-size: 10.9375rem 1.0625rem;
  background-repeat: no-repeat;
  background-image:  url('../img/multiply_eyebrow_large.png?v=2b662ac8b69daab79c5b4eae71831064');
}

.image-multiply {
  width: 23.9375rem;
  height: 22.5rem;
  background-size: 23.9375rem 22.5rem;
  background-repeat: no-repeat;
  background-image:  url('../img/multiply_large.jpg?v=a0d967145f6d1a8746d73aaea1eb893a');
}

.image-why_connectivity {
  width: 2.375rem;
  height: 2.375rem;
  background-size: 2.375rem 2.375rem;
  background-repeat: no-repeat;
  background-image:  url('../img/why_connectivity_large.png?v=fefdc9c769cef1ef52c9bb30473f42c1');
}

.image-why_fitness {
  width: 2.375rem;
  height: 2.375rem;
  background-size: 2.375rem 2.375rem;
  background-repeat: no-repeat;
  background-image:  url('../img/why_fitness_large.png?v=638a51a20bca2a2b852714bd9f2a8394');
}

.image-why_health {
  width: 2.3125rem;
  height: 2.3125rem;
  background-size: 2.3125rem 2.3125rem;
  background-repeat: no-repeat;
  background-image:  url('../img/why_health_large.png?v=46688b9a853fe418e0ba4efd46765026');
}

.image-why_personalization {
  width: 2.3125rem;
  height: 2.3125rem;
  background-size: 2.3125rem 2.3125rem;
  background-repeat: no-repeat;
  background-image:  url('../img/why_personalization_large.png?v=20ab593b18329bffadd657943cbe7952');
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-applecare {
    width: 13.3125rem;
    height: 18.25rem;
    background-size: 13.3125rem 18.25rem;
    background-repeat: no-repeat;
    background-image:  url('../img/applecare_large_2x.jpg?v=cdabf63af9b904bfa495267649aa5525');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-applecare_tick {
    width: 1.125rem;
    height: 1.5625rem;
    background-size: 1.125rem 1.5625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/applecare_tick_large_2x.png?v=a7386e9177a07dd72e9c693bfab98e51');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-bands {
    width: 25.625rem;
    height: 22.5rem;
    background-size: 25.625rem 22.5rem;
    background-repeat: no-repeat;
    background-image:  url('../img/bands_large_2x.jpg?v=054a9252acf1621cd4dc4d831bd45426');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-compare_42mm_38mm {
    width: 3.1875rem;
    height: 3rem;
    background-size: 3.1875rem 3rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_42mm_38mm_large_2x.png?v=1ff988b50570a31c2593dbe3eb6bb680');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-compare_44mm_40mm {
    width: 3.3125rem;
    height: 3.125rem;
    background-size: 3.3125rem 3.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_44mm_40mm_large_2x.png?v=9c56d5ce0b04b2f04110271f3c6a5226');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-compare_blood {
    width: 3.0625rem;
    height: 3.125rem;
    background-size: 3.0625rem 3.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_blood_large_2x.png?v=46802dc47766a8beeb39228c9e099e4a');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-compare_ecg {
    width: 3.625rem;
    height: 2.9375rem;
    background-size: 3.625rem 2.9375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_ecg_large_2x.png?v=de97ad4a6b4d87dcd3e74a9279f427d5');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-compare_fall {
    width: 3.0625rem;
    height: 3.0625rem;
    background-size: 3.0625rem 3.0625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_fall_large_2x.png?v=b180db0dc08244e7c1507756c5839602');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-compare_heart {
    width: 3.125rem;
    height: 2.875rem;
    background-size: 3.125rem 2.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_heart_large_2x.png?v=f69fabefb8f8276801853adf9d5eb256');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-compare_se_aluminum {
    width: 6rem;
    height: 1.4375rem;
    background-size: 6rem 1.4375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_se_aluminum_large_2x.png?v=264b05480da9e7393e01aed2a1ba093a');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-compare_se_display {
    width: 2.875rem;
    height: 3.1875rem;
    background-size: 2.875rem 3.1875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_se_display_large_2x.png?v=f6bff25eacdbd25c3e55852c3372d6f1');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-compare_se {
    width: 11.5625rem;
    height: 13.875rem;
    background-size: 11.5625rem 13.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_se_large_2x.jpg?v=d43ba1ead396c2373f6bd9281e57301b');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-compare_series_3_aluminum {
    width: 3.75rem;
    height: 1.4375rem;
    background-size: 3.75rem 1.4375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_3_aluminum_large_2x.png?v=c4ced67916eacb6fde7e9ace771adf31');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-compare_series_3_display {
    width: 2.875rem;
    height: 3.1875rem;
    background-size: 2.875rem 3.1875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_3_display_large_2x.png?v=f92d37e36f6f96e5a68f6788cca7cc3c');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-compare_series_3 {
    width: 11.125rem;
    height: 13.8125rem;
    background-size: 11.125rem 13.8125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_3_large_2x.jpg?v=2f70e71e2dc95b2346233599c4cb090d');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-compare_series_6_aluminum {
    width: 11.75rem;
    height: 2.6875rem;
    background-size: 11.75rem 2.6875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_6_aluminum_large_2x.png?v=048727f36693b99f474e6125a4365c05');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-compare_series_6_display {
    width: 2.9375rem;
    height: 3.1875rem;
    background-size: 2.9375rem 3.1875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_6_display_large_2x.png?v=f708d1a1ca3ed8e5dadef132d4de6322');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-compare_series_6 {
    width: 11.5625rem;
    height: 13.875rem;
    background-size: 11.5625rem 13.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_6_large_2x.jpg?v=993bb5c95af349917216b9e61d475c8b');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-connected {
    width: 30.125rem;
    height: 36.5625rem;
    background-size: 30.125rem 36.5625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/connected_large_2x.png?v=140085954f6c18764858c9637cf11953');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-design_face {
    width: 1.9375rem;
    height: 2.3125rem;
    background-size: 1.9375rem 2.3125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/design_face_large_2x.png?v=48b5447e76891fe84491cd24057e2f56');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-design {
    width: 30.625rem;
    height: 42.5rem;
    background-size: 30.625rem 42.5rem;
    background-repeat: no-repeat;
    background-image:  url('../img/design_large_2x.jpg?v=caa9f8a70331adf4e75d07af82322dbd');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-fitness {
    width: 23.5625rem;
    height: 40.4375rem;
    background-size: 23.5625rem 40.4375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/fitness_large_2x.jpg?v=53f794a79760d21f16212bf8eb3c7987');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-fitness_workout {
    width: 23.0625rem;
    height: 2.3125rem;
    background-size: 23.0625rem 2.3125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/fitness_workout_large_2x.png?v=6b3e274b1366bc16ef9a415e48ab499e');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-health_blood {
    width: 2.3125rem;
    height: 2.3125rem;
    background-size: 2.3125rem 2.3125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_blood_large_2x.png?v=5296da0b7d785d431c8110107109753a');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-health_ecg {
    width: 2.3125rem;
    height: 2.3125rem;
    background-size: 2.3125rem 2.3125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_ecg_large_2x.png?v=3b8ecde7bbd7ef66796a98d28f31a07f');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-health {
    width: 44.375rem;
    height: 39.375rem;
    background-size: 44.375rem 39.375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_large_2x.jpg?v=540af07213b949c1e1c61dbd17a8e152');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-health_sleep {
    width: 2.3125rem;
    height: 2.3125rem;
    background-size: 2.3125rem 2.3125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_sleep_large_2x.png?v=83b653be635c2ee3b7241b70f07fa74d');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-hero {
    width: 29.75rem;
    height: 36rem;
    background-size: 29.75rem 36rem;
    background-repeat: no-repeat;
    background-image:  url('../img/hero_large_2x.jpg?v=0a344dc8c4c318fac1d6cc63c7e85d08');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-hero_logo {
    width: 10.1875rem;
    height: 3.875rem;
    background-size: 10.1875rem 3.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/hero_logo_large_2x.png?v=8f5c061204e27ea313985c9710e8cf4e');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-multiply_eyebrow {
    width: 10.9375rem;
    height: 1.0625rem;
    background-size: 10.9375rem 1.0625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/multiply_eyebrow_large_2x.png?v=3b3e73875784db819ac1bb13ea8efac3');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-multiply {
    width: 23.9375rem;
    height: 22.5rem;
    background-size: 23.9375rem 22.5rem;
    background-repeat: no-repeat;
    background-image:  url('../img/multiply_large_2x.jpg?v=65f023b19fb92c1bff20fe3ff7bc3d7b');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-why_connectivity {
    width: 2.375rem;
    height: 2.375rem;
    background-size: 2.375rem 2.375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_connectivity_large_2x.png?v=cdf6f381f7a05df3209ad11b1d195f7f');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-why_fitness {
    width: 2.375rem;
    height: 2.375rem;
    background-size: 2.375rem 2.375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_fitness_large_2x.png?v=6bc635f257d8491f190148bfba3a9b2b');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-why_health {
    width: 2.3125rem;
    height: 2.3125rem;
    background-size: 2.3125rem 2.3125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_health_large_2x.png?v=6a379792f5f94d67958ea37213991d0e');
  }
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx) {
  .image-why_personalization {
    width: 2.3125rem;
    height: 2.3125rem;
    background-size: 2.3125rem 2.3125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_personalization_large_2x.png?v=bf3d3466b4345053f7418417f420fe92');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-applecare {
    width: 10rem;
    height: 13.75rem;
    background-size: 10rem 13.75rem;
    background-repeat: no-repeat;
    background-image:  url('../img/applecare_medium.jpg?v=3aefabef671f90f762c3ba7aad39cd1e');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-applecare_tick {
    width: 0.9375rem;
    height: 1.5625rem;
    background-size: 0.9375rem 1.5625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/applecare_tick_medium.png?v=f0b2c6d2ea5e7b56f95cfd4fa5e11fd8');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-bands {
    width: 19.25rem;
    height: 22.1875rem;
    background-size: 19.25rem 22.1875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/bands_medium.jpg?v=649de911c0e2d0d86dffc32cb21b955c');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-compare_42mm_38mm {
    width: 3.25rem;
    height: 3rem;
    background-size: 3.25rem 3rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_42mm_38mm_medium.png?v=f402fa542a630c0ccdc13ea831bdae81');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-compare_44mm_40mm {
    width: 3.3125rem;
    height: 3.0625rem;
    background-size: 3.3125rem 3.0625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_44mm_40mm_medium.png?v=4f11e78a2b4190807c572b930ff4d236');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-compare_blood {
    width: 3.125rem;
    height: 3.125rem;
    background-size: 3.125rem 3.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_blood_medium.png?v=844970b857c670a3848386f82b0d59c4');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-compare_ecg {
    width: 3.625rem;
    height: 3rem;
    background-size: 3.625rem 3rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_ecg_medium.png?v=90066e27971a2d2dcb7d67f66f0e0d44');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-compare_fall {
    width: 3.125rem;
    height: 3.125rem;
    background-size: 3.125rem 3.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_fall_medium.png?v=6f6512d984b2ef674b82e13a065b6077');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-compare_heart {
    width: 3.125rem;
    height: 2.8125rem;
    background-size: 3.125rem 2.8125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_heart_medium.png?v=6ef6ddcd4937fcc8484ad6e76c366f72');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-compare_se_aluminum {
    width: 6rem;
    height: 1.4375rem;
    background-size: 6rem 1.4375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_se_aluminum_medium.png?v=aba672f7bb67c3ddc30ec42e4994639c');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-compare_se_display {
    width: 2.875rem;
    height: 3.125rem;
    background-size: 2.875rem 3.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_se_display_medium.png?v=8a756fab0b134ba3c44c3f52edb1d8e8');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-compare_se {
    width: 10.25rem;
    height: 12.25rem;
    background-size: 10.25rem 12.25rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_se_medium.jpg?v=a16faba09c642db3d97c50cee9e02992');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-compare_series_3_aluminum {
    width: 3.75rem;
    height: 1.4375rem;
    background-size: 3.75rem 1.4375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_3_aluminum_medium.png?v=8a2ae7c675e66f68cca93b11d7018d1f');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-compare_series_3_display {
    width: 2.9375rem;
    height: 3.1875rem;
    background-size: 2.9375rem 3.1875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_3_display_medium.png?v=646a93b12ac9ee645e6318bd7e5b8223');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-compare_series_3 {
    width: 9.875rem;
    height: 12.25rem;
    background-size: 9.875rem 12.25rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_3_medium.jpg?v=a48f10d60cb0a06dd29438eb1bb156dd');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-compare_series_6_aluminum {
    width: 11.6875rem;
    height: 2.75rem;
    background-size: 11.6875rem 2.75rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_6_aluminum_medium.png?v=2565e4eb431f7aef8f7fbe4d1eb5d974');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-compare_series_6_display {
    width: 2.875rem;
    height: 3.125rem;
    background-size: 2.875rem 3.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_6_display_medium.png?v=231c37aae4be384a7e6db059e42c3e78');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-compare_series_6 {
    width: 10.25rem;
    height: 12.25rem;
    background-size: 10.25rem 12.25rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_6_medium.jpg?v=0cb326fd2316d11f2f68be231042eb2e');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-connected {
    width: 19rem;
    height: 23.625rem;
    background-size: 19rem 23.625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/connected_medium.png?v=ea022673f4f8ea6e8a082b6db16f8bf3');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-design_face {
    width: 1.5625rem;
    height: 1.875rem;
    background-size: 1.5625rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/design_face_medium.png?v=367b0a4d0609616e069fd9d4bd816c00');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-design {
    width: 19.375rem;
    height: 34.375rem;
    background-size: 19.375rem 34.375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/design_medium.jpg?v=f563aea58d661fc59498985d10967785');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-fitness {
    width: 22.75rem;
    height: 26.6875rem;
    background-size: 22.75rem 26.6875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/fitness_medium.jpg?v=dd5f777947941d94faab67bff5b4cc2f');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-fitness_workout {
    width: 18.75rem;
    height: 1.875rem;
    background-size: 18.75rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/fitness_workout_medium.png?v=24e46f627619e8579e298a567d261281');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-health_blood {
    width: 1.875rem;
    height: 1.875rem;
    background-size: 1.875rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_blood_medium.png?v=ce2fff65246924453475f354fec5b656');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-health_ecg {
    width: 1.875rem;
    height: 1.875rem;
    background-size: 1.875rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_ecg_medium.png?v=1978e83d728fd92efb0d090dcea97bb7');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-health {
    width: 18rem;
    height: 28.75rem;
    background-size: 18rem 28.75rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_medium.jpg?v=0f9f1f0dd5f211bf942d09950e3ae46f');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-health_sleep {
    width: 1.875rem;
    height: 1.875rem;
    background-size: 1.875rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_sleep_medium.png?v=8af8c45a300d0dc62652bab521612adb');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-hero_logo {
    width: 6.1875rem;
    height: 2.375rem;
    background-size: 6.1875rem 2.375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/hero_logo_medium.png?v=b133dcdcafe4b2a269628daeea24cd44');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-hero {
    width: 19.6875rem;
    height: 23.8125rem;
    background-size: 19.6875rem 23.8125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/hero_medium.jpg?v=5e730164c0bf0d09831531895cbb7282');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-multiply_eyebrow {
    width: 10.9375rem;
    height: 1rem;
    background-size: 10.9375rem 1rem;
    background-repeat: no-repeat;
    background-image:  url('../img/multiply_eyebrow_medium.png?v=f9c2c407fd4da2607b4e4df44ea52326');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-multiply {
    width: 20.25rem;
    height: 22.1875rem;
    background-size: 20.25rem 22.1875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/multiply_medium.jpg?v=2fd4353e1e5c30b9317814c1833cf7c9');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-why_connectivity {
    width: 1.9375rem;
    height: 1.9375rem;
    background-size: 1.9375rem 1.9375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_connectivity_medium.png?v=214b88234be3f8bcd2259b5154089d8a');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-why_fitness {
    width: 1.9375rem;
    height: 1.9375rem;
    background-size: 1.9375rem 1.9375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_fitness_medium.png?v=fdd037c6b72f4e746851474113b0ab98');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-why_health {
    width: 1.875rem;
    height: 1.875rem;
    background-size: 1.875rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_health_medium.png?v=c45dc13ca5324ed49d38b6062b979fd8');
  }
}

@media only screen and (max-width: 66.75rem) {
  .image-why_personalization {
    width: 1.875rem;
    height: 1.875rem;
    background-size: 1.875rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_personalization_medium.png?v=7823e5be5af5ab5f98aff5cd857848c5');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-applecare {
    width: 10rem;
    height: 13.75rem;
    background-size: 10rem 13.75rem;
    background-repeat: no-repeat;
    background-image:  url('../img/applecare_medium_2x.jpg?v=2142d24d1fd7c0bf5d6f880e2c8d2759');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-applecare_tick {
    width: 0.9375rem;
    height: 1.5625rem;
    background-size: 0.9375rem 1.5625rem;
    background-repeat: no-repeat;
    background-image: url(./img/applecare_tick_medium_2x.png);
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-bands {
    width: 19.25rem;
    height: 22.1875rem;
    background-size: 19.25rem 22.1875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/bands_medium_2x.jpg?v=4494b6c06f0dd4e0429119330e9d8806');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-compare_42mm_38mm {
    width: 3.25rem;
    height: 3rem;
    background-size: 3.25rem 3rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_42mm_38mm_medium_2x.png?v=ef556c60ce511a90bd9ac740705df106');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-compare_44mm_40mm {
    width: 3.3125rem;
    height: 3.0625rem;
    background-size: 3.3125rem 3.0625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_44mm_40mm_medium_2x.png?v=2bf4d2c5b48fea8c2a5082d8f8f1af14');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-compare_blood {
    width: 3.125rem;
    height: 3.125rem;
    background-size: 3.125rem 3.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_blood_medium_2x.png?v=db421a37a3c66839e18740234ce7c596');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-compare_ecg {
    width: 3.625rem;
    height: 3rem;
    background-size: 3.625rem 3rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_ecg_medium_2x.png?v=e13b8097462e3ea1b4e1bf1a805a8326');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-compare_fall {
    width: 3.125rem;
    height: 3.125rem;
    background-size: 3.125rem 3.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_fall_medium_2x.png?v=b0c430c9a881d10483551e31ca81d714');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-compare_heart {
    width: 3.125rem;
    height: 2.8125rem;
    background-size: 3.125rem 2.8125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_heart_medium_2x.png?v=0122559fcd052b753edfe49bb03f0a25');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-compare_se_aluminum {
    width: 6rem;
    height: 1.4375rem;
    background-size: 6rem 1.4375rem;
    background-repeat: no-repeat;
    background-image: url(./img/compare_se_aluminum_medium_2x.png);
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-compare_se_display {
    width: 2.875rem;
    height: 3.125rem;
    background-size: 2.875rem 3.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_se_display_medium_2x.png?v=2c588cdecd93402e8e4d3e425a03bb85');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-compare_se {
    width: 10.25rem;
    height: 12.25rem;
    background-size: 10.25rem 12.25rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_se_medium_2x.jpg?v=16ba4ee96244c414531d937d6e71aeaf');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-compare_series_3_aluminum {
    width: 3.75rem;
    height: 1.4375rem;
    background-size: 3.75rem 1.4375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_3_aluminum_medium_2x.png?v=e554849e15013420ffee10325fdc6987');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-compare_series_3_display {
    width: 2.9375rem;
    height: 3.1875rem;
    background-size: 2.9375rem 3.1875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_3_display_medium_2x.png?v=b4d49421ebeea1c7d519f354618be50e');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-compare_series_3 {
    width: 9.875rem;
    height: 12.25rem;
    background-size: 9.875rem 12.25rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_3_medium_2x.jpg?v=14b47fa79ba305651f55eb3ece405f1d');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-compare_series_6_aluminum {
    width: 11.6875rem;
    height: 2.75rem;
    background-size: 11.6875rem 2.75rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_6_aluminum_medium_2x.png?v=8b1ed4f8487ac3ba4b07f85f4fa68bb5');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-compare_series_6_display {
    width: 2.875rem;
    height: 3.125rem;
    background-size: 2.875rem 3.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_6_display_medium_2x.png?v=9be4c171bf55e78c573022cc7ca75688');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-compare_series_6 {
    width: 10.25rem;
    height: 12.25rem;
    background-size: 10.25rem 12.25rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_6_medium_2x.jpg?v=94278c82f593b876dfc246e1221b57b6');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-connected {
    width: 19rem;
    height: 23.625rem;
    background-size: 19rem 23.625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/connected_medium_2x.png?v=f92c48e92a9c319d96f80edff9c7e7f7');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-design_face {
    width: 1.5625rem;
    height: 1.875rem;
    background-size: 1.5625rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/design_face_medium_2x.png?v=c8da192228d93c8e8265f1be56daa69d');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-design {
    width: 19.375rem;
    height: 34.375rem;
    background-size: 19.375rem 34.375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/design_medium_2x.jpg?v=cea218c3c57a72dbeac1da0f2b663ce1');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-fitness {
    width: 22.75rem;
    height: 26.6875rem;
    background-size: 22.75rem 26.6875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/fitness_medium_2x.jpg?v=6dba1a71513fa609b36d10d241cd25fd');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-fitness_workout {
    width: 18.75rem;
    height: 1.875rem;
    background-size: 18.75rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/fitness_workout_medium_2x.png?v=4c65ff7b6bce84eb27db10620b87b2ad');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-health_blood {
    width: 1.875rem;
    height: 1.875rem;
    background-size: 1.875rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_blood_medium_2x.png?v=cfac50bb9eeda78e423f8eafc93530da');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-health_ecg {
    width: 1.875rem;
    height: 1.875rem;
    background-size: 1.875rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_ecg_medium_2x.png?v=5ee89ee744ad952bb30209624fec7dfb');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-health {
    width: 18rem;
    height: 28.75rem;
    background-size: 18rem 28.75rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_medium_2x.jpg?v=0587c85647027fd5b31c5170ef1a5bdc');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-health_sleep {
    width: 1.875rem;
    height: 1.875rem;
    background-size: 1.875rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_sleep_medium_2x.png?v=1c3be9309d0bf84b292151376643e95f');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-hero_logo {
    width: 6.1875rem;
    height: 2.375rem;
    background-size: 6.1875rem 2.375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/hero_logo_medium_2x.png?v=e16801f8befb5af05bb1d54642334e63');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-hero {
    width: 19.6875rem;
    height: 23.8125rem;
    background-size: 19.6875rem 23.8125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/hero_medium_2x.jpg?v=6152dc0b188b61100fbcf8b8d898f5fe');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-multiply_eyebrow {
    width: 10.9375rem;
    height: 1rem;
    background-size: 10.9375rem 1rem;
    background-repeat: no-repeat;
    background-image:  url('../img/multiply_eyebrow_medium_2x.png?v=080ffc352eef8f0e1ed6c293727dc83d');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-multiply {
    width: 20.25rem;
    height: 22.1875rem;
    background-size: 20.25rem 22.1875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/multiply_medium_2x.jpg?v=70ae79e303fe8b87c4e72fd301d8345d');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-why_connectivity {
    width: 1.9375rem;
    height: 1.9375rem;
    background-size: 1.9375rem 1.9375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_connectivity_medium_2x.png?v=0b60a0d3fa5abb1c26657caf3bf8ffb5');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-why_fitness {
    width: 1.9375rem;
    height: 1.9375rem;
    background-size: 1.9375rem 1.9375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_fitness_medium_2x.png?v=dda7e46bc2674ca6674d3682a8fc6cd5');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-why_health {
    width: 1.875rem;
    height: 1.875rem;
    background-size: 1.875rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_health_medium_2x.png?v=36fc5917dd779c3f77b42bd694bc4f9f');
  }
}

@media only screen and (max-width: 66.75rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 66.75rem) and (min-resolution: 1.5dppx), only screen and (max-width: 66.75rem) and (min-resolution: 144dpi) {
  .image-why_personalization {
    width: 1.875rem;
    height: 1.875rem;
    background-size: 1.875rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_personalization_medium_2x.png?v=05520aabca8a133c8ee986fe9e7b5f40');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-applecare {
    width: 10.625rem;
    height: 14.5625rem;
    background-size: 10.625rem 14.5625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/applecare_small.jpg?v=6bd19112031cb57d7f2eb9d5d421b704');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-applecare_tick {
    width: 0.875rem;
    height: 1.5625rem;
    background-size: 0.875rem 1.5625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/applecare_tick_small.png?v=7e27bbb391c796ed0f3365abc3c45b3e');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-bands {
    width: 20rem;
    height: 19.375rem;
    background-size: 20rem 19.375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/bands_small.jpg?v=baf7f0e10e9f1df97dfc507ea9a3dc20');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-compare_42mm_38mm {
    width: 2.3125rem;
    height: 2.125rem;
    background-size: 2.3125rem 2.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_42mm_38mm_small.png?v=417a190acb4d71b1001228087183b73b');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-compare_44mm_40mm {
    width: 2.3125rem;
    height: 2.125rem;
    background-size: 2.3125rem 2.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_44mm_40mm_small.png?v=417a190acb4d71b1001228087183b73b');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-compare_blood {
    width: 2.0625rem;
    height: 2.125rem;
    background-size: 2.0625rem 2.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_blood_small.png?v=53df4fbc7f43439258d7671bb8632d70');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-compare_ecg {
    width: 2.5625rem;
    height: 2.125rem;
    background-size: 2.5625rem 2.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_ecg_small.png?v=da3c52b02506887acc7da928e13efede');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-compare_fall {
    width: 2.0625rem;
    height: 2.0625rem;
    background-size: 2.0625rem 2.0625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_fall_small.png?v=7f6cb8b478fb22fb059bc6314aa776e0');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-compare_heart {
    width: 2.125rem;
    height: 1.9375rem;
    background-size: 2.125rem 1.9375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_heart_small.png?v=9b481155ec96e228dd12db65d77da88e');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-compare_se_aluminum {
    width: 3rem;
    height: 0.8125rem;
    background-size: 3rem 0.8125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_se_aluminum_small.png?v=11450de536f7c4e48b1be78d6b17b9f4');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-compare_se_display {
    width: 1.9375rem;
    height: 2.0625rem;
    background-size: 1.9375rem 2.0625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_se_display_small.png?v=79b484abb32b72a85bf8b4a961ae5303');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-compare_se {
    width: 4.9375rem;
    height: 5.875rem;
    background-size: 4.9375rem 5.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_se_small.jpg?v=b412e0b9d4a9b823829ebe1cccfdbc60');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-compare_series_3_aluminum {
    width: 1.9375rem;
    height: 0.8125rem;
    background-size: 1.9375rem 0.8125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_3_aluminum_small.png?v=e45d6f80353f474111d8737e0474c5e7');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-compare_series_3_display {
    width: 1.9375rem;
    height: 2.0625rem;
    background-size: 1.9375rem 2.0625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_3_display_small.png?v=eb7d248394d0a5fe37f0cc29057baa5d');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-compare_series_3 {
    width: 4.75rem;
    height: 5.875rem;
    background-size: 4.75rem 5.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_3_small.jpg?v=25cf1d556cda471fd3d3fd10603127d9');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-compare_series_6_aluminum {
    width: 4.4375rem;
    height: 2.0625rem;
    background-size: 4.4375rem 2.0625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_6_aluminum_small.png?v=dfe1e6a57c343315b8f3b7b21452a325');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-compare_series_6_display {
    width: 1.9375rem;
    height: 2.125rem;
    background-size: 1.9375rem 2.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_6_display_small.png?v=1c0d51b91c1ee4069c91294d678fd999');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-compare_series_6 {
    width: 4.9375rem;
    height: 5.875rem;
    background-size: 4.9375rem 5.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_6_small.jpg?v=b8e4c48bbdd78a4888471d51c4730dfa');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-connected {
    width: 15.75rem;
    height: 19.125rem;
    background-size: 15.75rem 19.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/connected_small.png?v=30b8a488c97d8e29266e68109a40f439');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-design_face {
    width: 1.5625rem;
    height: 1.875rem;
    background-size: 1.5625rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/design_face_small.png?v=7f8ac169a71149feca9541548e918848');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-design {
    width: 32.75rem;
    height: 11.125rem;
    background-size: 32.75rem 11.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/design_small.jpg?v=0638e2f93e8a6602f62a1701abc03f9d');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-fitness {
    width: 17.9375rem;
    height: 21rem;
    background-size: 17.9375rem 21rem;
    background-repeat: no-repeat;
    background-image:  url('../img/fitness_small.jpg?v=c58f3f6a0df4496782a3d81883de2175');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-fitness_workout {
    width: 11.9375rem;
    height: 1.9375rem;
    background-size: 11.9375rem 1.9375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/fitness_workout_small.png?v=26475d9aab5d85f84fb68f58d4eed1c2');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-health_blood {
    width: 1.5625rem;
    height: 1.375rem;
    background-size: 1.5625rem 1.375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_blood_small.png?v=41f155f46982b9344be40945892e4d5e');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-health_ecg {
    width: 1.5625rem;
    height: 1.375rem;
    background-size: 1.5625rem 1.375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_ecg_small.png?v=74eceec93d84eeafe5988ca4ef9fca73');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-health_sleep {
    width: 1.875rem;
    height: 1.875rem;
    background-size: 1.875rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_sleep_small.png?v=dba146bc7308b11b4468c6ded2756bbf');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-health {
    width: 20rem;
    height: 16.5625rem;
    background-size: 20rem 16.5625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_small.jpg?v=034539ed30fa9fb4b1592e87bbea4001');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-hero_logo {
    width: 6.5rem;
    height: 2.3125rem;
    background-size: 6.5rem 2.3125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/hero_logo_small.png?v=78bb275d4ee150fa428b0abd08ba52f8');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-hero {
    width: 15.25rem;
    height: 18.4375rem;
    background-size: 15.25rem 18.4375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/hero_small.jpg?v=09cd559b98ca18d3d816da3dc69571a7');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-multiply_eyebrow {
    width: 9.75rem;
    height: 0.9375rem;
    background-size: 9.75rem 0.9375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/multiply_eyebrow_small.png?v=13e4565f82b4e3697ac9f450cd9393a7');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-multiply {
    width: 18rem;
    height: 14.0625rem;
    background-size: 18rem 14.0625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/multiply_small.jpg?v=a5a3cfa6a94e97fb7b7c9a3a98b822ff');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-why_connectivity {
    width: 1.9375rem;
    height: 1.9375rem;
    background-size: 1.9375rem 1.9375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_connectivity_small.png?v=2d6e83e744e58b258315836a463242ce');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-why_fitness {
    width: 1.9375rem;
    height: 1.9375rem;
    background-size: 1.9375rem 1.9375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_fitness_small.png?v=fdd037c6b72f4e746851474113b0ab98');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-why_health {
    width: 1.875rem;
    height: 1.875rem;
    background-size: 1.875rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_health_small.png?v=c45dc13ca5324ed49d38b6062b979fd8');
  }
}

@media only screen and (max-width: 45.875rem) {
  .image-why_personalization {
    width: 1.875rem;
    height: 1.875rem;
    background-size: 1.875rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_personalization_small.png?v=7823e5be5af5ab5f98aff5cd857848c5');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-applecare {
    width: 10.625rem;
    height: 14.5625rem;
    background-size: 10.625rem 14.5625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/applecare_small_2x.jpg?v=815ee52f96938169f355814ef1d3aa20');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-applecare_tick {
    width: 0.875rem;
    height: 1.5625rem;
    background-size: 0.875rem 1.5625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/applecare_tick_small_2x.png?v=5ed340fe8abd0f4e800eb57d9a35cad5');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-bands {
    width: 20rem;
    height: 19.375rem;
    background-size: 20rem 19.375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/bands_small_2x.jpg?v=6c0c67a11a52ee80de023dd500dd0bd9');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-compare_42mm_38mm {
    width: 2.3125rem;
    height: 2.125rem;
    background-size: 2.3125rem 2.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_42mm_38mm_small_2x.png?v=6bb46f8ba084679a564dfb26aad99c15');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-compare_44mm_40mm {
    width: 2.3125rem;
    height: 2.125rem;
    background-size: 2.3125rem 2.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_44mm_40mm_small_2x.png?v=e470406bc87eb0915ec3952161300cd6');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-compare_blood {
    width: 2.0625rem;
    height: 2.125rem;
    background-size: 2.0625rem 2.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_blood_small_2x.png?v=67347158acc254cc4698dede57d611e1');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-compare_ecg {
    width: 2.5625rem;
    height: 2.125rem;
    background-size: 2.5625rem 2.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_ecg_small_2x.png?v=48ac800451b83f715efbc0e7166d205e');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-compare_fall {
    width: 2.0625rem;
    height: 2.0625rem;
    background-size: 2.0625rem 2.0625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_fall_small_2x.png?v=6532e64383e3203c1f4848aa93497034');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-compare_heart {
    width: 2.125rem;
    height: 1.9375rem;
    background-size: 2.125rem 1.9375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_heart_small_2x.png?v=bb80120bb36bcc34270cde635c3efc6e');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-compare_se_aluminum {
    width: 3rem;
    height: 0.8125rem;
    background-size: 3rem 0.8125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_se_aluminum_small_2x.png?v=f855eb541326097a80128325639e2e77');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-compare_se_display {
    width: 1.9375rem;
    height: 2.0625rem;
    background-size: 1.9375rem 2.0625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_se_display_small_2x.png?v=c0cdd13d1399a620252777cb472ea733');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-compare_se {
    width: 4.9375rem;
    height: 5.875rem;
    background-size: 4.9375rem 5.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_se_small_2x.jpg?v=71a498cd14d7583ed5cb818962e8810d');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-compare_series_3_aluminum {
    width: 1.9375rem;
    height: 0.8125rem;
    background-size: 1.9375rem 0.8125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_3_aluminum_small_2x.png?v=7cb2dff7e7c9e676ebf4c0f84172f96a');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-compare_series_3_display {
    width: 1.9375rem;
    height: 2.0625rem;
    background-size: 1.9375rem 2.0625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_3_display_small_2x.png?v=6ecb8e645906549e0633d075f6dd226d');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-compare_series_3 {
    width: 4.75rem;
    height: 5.875rem;
    background-size: 4.75rem 5.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_3_small_2x.jpg?v=7f044c465d46725c68247cb9bfadca90');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-compare_series_6_aluminum {
    width: 4.4375rem;
    height: 2.0625rem;
    background-size: 4.4375rem 2.0625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_6_aluminum_small_2x.png?v=c51423c45ad21ec4eab527e01971756e');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-compare_series_6_display {
    width: 1.9375rem;
    height: 2.125rem;
    background-size: 1.9375rem 2.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_6_display_small_2x.png?v=1b02e880a729cf8a8e82892370db196b');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-compare_series_6 {
    width: 4.9375rem;
    height: 5.875rem;
    background-size: 4.9375rem 5.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/compare_series_6_small_2x.jpg?v=c0c95b07ea433fc34265bf4e80cef36d');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-connected {
    width: 15.75rem;
    height: 19.125rem;
    background-size: 15.75rem 19.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/connected_small_2x.png?v=6497afbd5526db44434f4e973bb38051');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-design_face {
    width: 1.5625rem;
    height: 1.875rem;
    background-size: 1.5625rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/design_face_small_2x.png?v=033f246a47e2e6365e7e7dd96eda20b8');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-design {
    width: 32.75rem;
    height: 11.125rem;
    background-size: 32.75rem 11.125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/design_small_2x.jpg?v=f93a438b54e3fb2d19500f5d1052f434');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-fitness {
    width: 17.9375rem;
    height: 21rem;
    background-size: 17.9375rem 21rem;
    background-repeat: no-repeat;
    background-image:  url('../img/fitness_small_2x.jpg?v=37e88401e7b9441769f5c719e6f497ca');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-fitness_workout {
    width: 11.9375rem;
    height: 1.9375rem;
    background-size: 11.9375rem 1.9375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/fitness_workout_small_2x.png?v=c6a39f4363948867ae16405fc2f4932d');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-health_blood {
    width: 1.5625rem;
    height: 1.375rem;
    background-size: 1.5625rem 1.375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_blood_small_2x.png?v=ba4012409f94cf6897828ac514d880dc');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-health_ecg {
    width: 1.5625rem;
    height: 1.375rem;
    background-size: 1.5625rem 1.375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_ecg_small_2x.png?v=3492a9efcc7a959e5579ec2e838862ef');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-health_sleep {
    width: 1.875rem;
    height: 1.875rem;
    background-size: 1.875rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_sleep_small_2x.png?v=52ba21e8c048005ec6a5f6225392a57e');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-health {
    width: 20rem;
    height: 16.5625rem;
    background-size: 20rem 16.5625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/health_small_2x.jpg?v=7b453bcb3d9b3e07a9041cdc5b1e1628');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-hero_logo {
    width: 6.5rem;
    height: 2.3125rem;
    background-size: 6.5rem 2.3125rem;
    background-repeat: no-repeat;
    background-image:  url('../img/hero_logo_small_2x.png?v=0c2d2c78f4631e76de52d33d39006be0');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-hero {
    width: 15.25rem;
    height: 18.4375rem;
    background-size: 15.25rem 18.4375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/hero_small_2x.jpg?v=66853386c35f1669df88d6d234b92ab6');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-multiply_eyebrow {
    width: 9.75rem;
    height: 0.9375rem;
    background-size: 9.75rem 0.9375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/multiply_eyebrow_small_2x.png?v=9aacce262d7a91380951f9dc0e65a917');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-multiply {
    width: 18rem;
    height: 14.0625rem;
    background-size: 18rem 14.0625rem;
    background-repeat: no-repeat;
    background-image:  url('../img/multiply_small_2x.jpg?v=d81b833d43b0431c4279b18073b2c009');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-why_connectivity {
    width: 1.9375rem;
    height: 1.9375rem;
    background-size: 1.9375rem 1.9375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_connectivity_small_2x.png?v=1189b3506bcf642dcb303fc65055c574');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-why_fitness {
    width: 1.9375rem;
    height: 1.9375rem;
    background-size: 1.9375rem 1.9375rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_fitness_small_2x.png?v=dda7e46bc2674ca6674d3682a8fc6cd5');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-why_health {
    width: 1.875rem;
    height: 1.875rem;
    background-size: 1.875rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_health_small_2x.png?v=36fc5917dd779c3f77b42bd694bc4f9f');
  }
}

@media only screen and (max-width: 45.875rem) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: 45.875rem) and (min-resolution: 1.5dppx), only screen and (max-width: 45.875rem) and (min-resolution: 144dpi) {
  .image-why_personalization {
    width: 1.875rem;
    height: 1.875rem;
    background-size: 1.875rem 1.875rem;
    background-repeat: no-repeat;
    background-image:  url('../img/why_personalization_small_2x.png?v=05520aabca8a133c8ee986fe9e7b5f40');
  }
}

.channel-html {
  background-color: #f5f5f7;
}

.channel-html .t37df53 {
  background-color: #000000;
  padding-top: 5.625rem;
  padding-bottom: 5.8125rem;
  overflow: hidden;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .t37df53 {
    padding-top: 4.0625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .t37df53 {
    padding-top: 3.125rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .t37df53 {
    padding-bottom: 4.0625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .t37df53 {
    padding-bottom: 2.1875rem;
  }
}

.channel-html .t3426d3 {
  align-items: center;
}

.channel-html .r14622c {
  padding-right: 3.125rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .r14622c {
    margin-bottom: 2.6875rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .r14622c {
    padding-right: 1.25rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .r14622c {
    padding-right: 0rem;
  }
}

.channel-html .affea35 {
  justify-content: center;
  margin-bottom: 2.5rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .affea35 {
    margin-bottom: 1.5625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .affea35 {
    margin-bottom: 0.625rem;
  }
}

.channel-html .y80fb3c {
  margin-bottom: 3.125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .y80fb3c {
    margin-bottom: 2.5rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .y80fb3c {
    margin-bottom: 0rem;
  }
}

.channel-html .t320e2f {
  text-align: center;
}

.channel-html .z9b1326 {
  color: #f5f5f7;
  margin-bottom: 2.5rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .z9b1326 {
    margin-bottom: 3.125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z9b1326 {
    margin-bottom: 0rem;
  }
}

.channel-html .t309054 {
  color: #a1a1a6;
  margin-bottom: 2.8125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .t309054 {
    margin-bottom: 2.1875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .t309054 {
    margin-bottom: 1.5625rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .t309054 {
    padding-left: 1.25rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .t309054 {
    padding-left: 0rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .t309054 {
    padding-right: 1.25rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .t309054 {
    padding-right: 0rem;
  }
}

.channel-html .z99156a {
  color: #a1a1a6;
}

.channel-html .q03f9d7 {
  justify-content: center;
  margin-top: 1.875rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q03f9d7 {
    margin-top: 2.8125rem;
  }
}

.channel-html .w68c37f {
  text-align: center;
}

.channel-html .a30d585 {
  color: #86868b;
  border: solid 0.0625rem #86868b;
}

.channel-html .v59ff9c {
  justify-content: flex-end;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v59ff9c {
    justify-content: center;
  }
}

.channel-html .f063a40 {
  padding-left: 0.9375rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .f063a40 {
    padding-left: 0rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .f063a40 {
    padding-left: 0.9375rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .s2fc000 {
    margin-left: -0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .s2fc000 {
    margin-left: 0.125rem;
  }
}

.channel-html .u421128 {
  background-color: #111111;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  overflow: hidden;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .u421128 {
    padding-top: 2.8125rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .u421128 {
    padding-bottom: 2.5rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u421128 {
    padding-bottom: 3.125rem;
  }
}

.channel-html .r1067f9 {
  align-items: center;
}

.channel-html .v50f148 {
  margin-left: -45%;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .v50f148 {
    margin-left: 0rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v50f148 {
    margin-left: 0rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .t3a37a0 {
    padding-left: 0rem;
  }
}

.channel-html .y850698 {
  color: #86868b;
  margin-bottom: 0.75rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .y850698 {
    margin-bottom: 0.625rem;
  }
}

.channel-html .q051f4a {
  color: #f5f5f7;
  margin-bottom: 1.875rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q051f4a {
    margin-bottom: 1.875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q051f4a {
    padding-right: 3.125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x7cf5f3 {
    justify-content: center;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x7cf5f3 {
    margin-bottom: 1.875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x722285 {
    margin-left: -1.25rem;
  }
}

.channel-html .c124224 {
  align-items: flex-start;
  margin-bottom: 1.875rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .c124224 {
    margin-bottom: 1.25rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .t3934a6 {
    padding-top: 0.1875rem;
  }
}

.channel-html .f8fd241 {
  padding-left: 1.25rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .f8fd241 {
    padding-left: 1.125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .f8fd241 {
    padding-left: 1.25rem;
  }
}

.channel-html .e35a9e8 {
  color: #a1a1a6;
}

.channel-html .s2afc82 {
  align-items: flex-start;
  margin-bottom: 1.875rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .s2afc82 {
    margin-bottom: 1.25rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .t3c074d {
    padding-top: 0.1875rem;
  }
}

.channel-html .r188f39 {
  padding-left: 1.25rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .r188f39 {
    padding-left: 1.125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .r188f39 {
    padding-left: 1.25rem;
  }
}

.channel-html .u49cc77 {
  color: #a1a1a6;
}

.channel-html .y811f4d {
  align-items: flex-start;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z91f7ee {
    padding-top: 0.1875rem;
  }
}

.channel-html .f0cd377 {
  padding-left: 1.25rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .f0cd377 {
    padding-left: 1.125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .f0cd377 {
    padding-left: 1.25rem;
  }
}

.channel-html .s22432a {
  color: #a1a1a6;
}

.channel-html .y8bbff8 {
  background-color: #000000;
  padding-top: 0rem;
  padding-bottom: 0rem;
  overflow: hidden;
}

.channel-html .w64759a {
  align-items: center;
}

.channel-html .y880e7e {
  padding-right: 1.25rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .y880e7e {
    padding-top: 5rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .y880e7e {
    padding-top: 2.5rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .y880e7e {
    padding-bottom: 3.125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .y880e7e {
    padding-bottom: 0rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .y880e7e {
    padding-right: 0.3125rem;
  }
}

.channel-html .x75ce8e {
  color: #86868b;
  margin-bottom: 0.625rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .x75ce8e {
    margin-bottom: 0.5rem;
  }
}

.channel-html .a078277 {
  color: #f5f5f7;
  margin-bottom: 1.625rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .a078277 {
    margin-bottom: 1.5625rem;
  }
}

.channel-html .f2268d9 {
  color: #a1a1a6;
  margin-bottom: 3rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .f2268d9 {
    margin-bottom: 2.8125rem;
  }
}

.channel-html .c84778b {
  margin-bottom: 1.125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .c84778b {
    margin-bottom: 0.9375rem;
  }
}

.channel-html .b70e6f9 {
  color: #a1a1a6;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z9d54dc {
    margin-top: -0.5rem;
  }
}

.channel-html .e6e2961 {
  justify-content: center;
}

.channel-html .w61f445 {
  background-color: #111111;
  padding-top: 2rem;
  padding-bottom: 1.875rem;
  overflow: hidden;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .w61f445 {
    padding-top: 5.3125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .w61f445 {
    padding-top: 2.5rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .w61f445 {
    padding-bottom: 5rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .w61f445 {
    padding-bottom: 2.5rem;
  }
}

.channel-html .x7c586d {
  align-items: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z9fbd63 {
    padding-left: 0.875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z9fbd63 {
    order: 2;
  }
}

.channel-html .eca1458 {
  margin-left: -0.8125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .eca1458 {
    margin-left: -0.9375rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .eca1458 {
    margin-left: 0rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .eca1458 {
    margin-right: 0rem;
  }
}

.channel-html .t37da9f {
  padding-left: 0.9375rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .t37da9f {
    margin-bottom: 1.875rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .t37da9f {
    padding-left: 0rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .t37da9f {
    order: 1;
  }
}

.channel-html .v5328dd {
  color: #86868b;
  margin-bottom: 0.75rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .v5328dd {
    margin-bottom: 0.5rem;
  }
}

.channel-html .t376260 {
  color: #f5f5f7;
  margin-bottom: 1.875rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .t376260 {
    margin-bottom: 1.4375rem;
  }
}

.channel-html .v5b73b7 {
  color: #a1a1a6;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v5b73b7 {
    padding-right: 1.5625rem;
  }
}

.channel-html .u4adaf5 {
  background-color: #000000;
  padding-top: 0rem;
  padding-bottom: 0rem;
  overflow: hidden;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u4adaf5 {
    padding-top: 2.8125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u4adaf5 {
    padding-bottom: 1.875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u4adaf5 {
    overflow: hidden;
  }
}

.channel-html .b0c1b9f {
  align-items: center;
}

.channel-html .s27cc02 {
  padding-right: 2.8125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .s27cc02 {
    padding-right: 1.25rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .s27cc02 {
    padding-right: 0rem;
  }
}

.channel-html .w6a2576 {
  color: #86868b;
  margin-bottom: 0.75rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .w6a2576 {
    margin-bottom: 0.5rem;
  }
}

.channel-html .t3d5069 {
  color: #f5f5f7;
  margin-bottom: 1.875rem;
}

.channel-html .s294eb6 {
  color: #a1a1a6;
  margin-bottom: 2.6875rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .s294eb6 {
    margin-bottom: 1.875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .s294eb6 {
    margin-bottom: 2.125rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .s294eb6 {
    padding-right: 1.25rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .s294eb6 {
    padding-right: 0.3125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .t3ee537 {
    justify-content: center;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .t3ee537 {
    margin-bottom: 1.875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .t395c82 {
    margin-left: -6.25rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .f255d08 {
    margin-left: -1.0625rem;
  }
}

.channel-html .v5159b5 {
  padding-top: 0.3125rem;
}

.channel-html .ea0d0ef {
  padding-left: 1rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .ea0d0ef {
    padding-left: 0.875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .ea0d0ef {
    padding-left: 1.125rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .ea0d0ef {
    padding-right: 0.9375rem;
  }
}

.channel-html .u4435f6 {
  color: #a1a1a6;
}

.channel-html .v5842f1 {
  background-color: #111111;
  padding-top: 4.0625rem;
  padding-bottom: 3.75rem;
  overflow: hidden;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .v5842f1 {
    padding-top: 2.8125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v5842f1 {
    padding-top: 2.5rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .v5842f1 {
    padding-bottom: 2.8125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v5842f1 {
    padding-bottom: 2.8125rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .s20639b {
    align-items: center;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .s20639b {
    justify-content: center;
  }
}

.channel-html .d04e8f4 {
  margin-bottom: 3.125rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .d04e8f4 {
    margin-bottom: 1.75rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .d04e8f4 {
    order: 2;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .d04e8f4 {
    order: 1;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .s291da6 {
    align-items: center;
  }
}

.channel-html .z9cdd99 {
  margin-bottom: 0.3125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .z9cdd99 {
    margin-bottom: 0rem;
  }
}

.channel-html .c87d4fd {
  color: #86868b;
}

.channel-html .f96ac88 {
  color: #f5f5f7;
  margin-bottom: 1.25rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .f96ac88 {
    margin-bottom: 1.5625rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .f96ac88 {
    margin-right: 0rem;
  }
}

.channel-html .cc6a170 {
  color: #a1a1a6;
  padding-right: 3.125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .cc6a170 {
    padding-right: 1.875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .cc6a170 {
    padding-right: 0rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .c7b19e3 {
    order: 1;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .c7b19e3 {
    order: 2;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .d2fdd54 {
    margin-left: -6%;
  }
}

.channel-html .c1956db {
  background-color: #ffffff;
  align-items: center;
  min-height: 33.75rem;
  margin-top: 0rem;
  margin-bottom: 1.875rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .c1956db {
    align-items: center;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .c1956db {
    min-height: 34.375rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .c1956db {
    margin-top: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .c1956db {
    margin-top: 0rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .c1956db {
    margin-bottom: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .c1956db {
    padding-bottom: 2.5rem;
  }
}

.channel-html .f7e8090 {
  margin-bottom: 2.8125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .f7e8090 {
    margin-bottom: 2.5rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .f7e8090 {
    margin-bottom: 2.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .c5690a4 {
    padding-top: 2.75rem;
  }
}

.channel-html .x7e39d3 {
  color: #86868b;
  margin-bottom: 0.375rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .x7e39d3 {
    margin-bottom: 0.625rem;
  }
}

.channel-html .y8909f6 {
  color: #1d1d1f;
}

.channel-html .w66ebd5 {
  padding-right: 1.25rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .w66ebd5 {
    margin-bottom: 2.1875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .w66ebd5 {
    margin-bottom: 2.375rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .w66ebd5 {
    padding-right: 0.625rem;
  }
}

.channel-html .ac94c01 {
  margin-bottom: 1.125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .ac94c01 {
    margin-bottom: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .ac94c01 {
    margin-bottom: 0.75rem;
  }
}

.channel-html .adaac9c {
  color: #6e6e73;
  margin-top: 0rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .adaac9c {
    margin-top: -0.0625rem;
  }
}

.channel-html .s25bb3b {
  padding-right: 1.25rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .s25bb3b {
    margin-bottom: 2.1875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .s25bb3b {
    margin-bottom: 2.375rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .s25bb3b {
    padding-right: 0.625rem;
  }
}

.channel-html .a663f9d {
  margin-bottom: 1.125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .a663f9d {
    margin-bottom: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .a663f9d {
    margin-bottom: 0.75rem;
  }
}

.channel-html .z904bf8 {
  color: #6e6e73;
  margin-top: 0rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z904bf8 {
    margin-top: -0.0625rem;
  }
}

.channel-html .c3d511c {
  padding-right: 1.25rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .c3d511c {
    padding-right: 0.625rem;
  }
}

.channel-html .v5b9c4b {
  margin-bottom: 1.125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .v5b9c4b {
    margin-bottom: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v5b9c4b {
    margin-bottom: 0.75rem;
  }
}

.channel-html .x7d9a8f {
  color: #6e6e73;
  margin-top: 0rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x7d9a8f {
    margin-top: -0.0625rem;
  }
}

.channel-html .v531116 {
  padding-right: 1.25rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v531116 {
    padding-right: 0.625rem;
  }
}

.channel-html .f86426a {
  margin-bottom: 1.125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .f86426a {
    margin-bottom: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .f86426a {
    margin-bottom: 0.75rem;
  }
}

.channel-html .q0138c1 {
  color: #6e6e73;
  margin-top: 0rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q0138c1 {
    margin-top: -0.0625rem;
  }
}

.channel-html .db95fa1 {
  background-color: #ffffff;
  margin-bottom: 4.6875rem;
  padding-top: 3.75rem;
  padding-bottom: 5.3125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .db95fa1 {
    margin-bottom: 3.125rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .db95fa1 {
    padding-top: 3.4375rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .db95fa1 {
    padding-top: 2.25rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .db95fa1 {
    padding-bottom: 3.4375rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .db95fa1 {
    padding-bottom: 2.6875rem;
  }
}

.channel-html .q03e738 {
  text-align: center;
}

.channel-html .ce1e324 {
  color: #1d1d1f;
  margin-bottom: 5.3125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .ce1e324 {
    margin-bottom: 3.75rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .ce1e324 {
    margin-bottom: 2.5rem;
  }
}

.channel-html .z99bc73 {
  margin-top: 5rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .z99bc73 {
    margin-top: 3.75rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z99bc73 {
    margin-top: 2.1875rem;
  }
}

.channel-html .e11a900 {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .e11a900 {
    text-align: start;
  }
}

.channel-html .u4639af {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u4639af {
    justify-content: start;
  }
}

.channel-html .w67aa8c {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .w67aa8c {
    justify-content: start;
  }
}

.channel-html .u464a03 {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u464a03 {
    justify-content: start;
  }
}

.channel-html .z90dffb {
  margin-top: 5.3125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .z90dffb {
    margin-top: 3.125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z90dffb {
    margin-top: 2.5rem;
  }
}

.channel-html .t333f51 {
  text-align: center;
}

.channel-html .q0012ea {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q0012ea {
    justify-content: start;
  }
}

.channel-html .q0298c6 {
  color: #1d1d1f;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q0298c6 {
    margin-bottom: 0.125rem;
  }
}

.channel-html .t38d4fc {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .t38d4fc {
    justify-content: start;
  }
}

.channel-html .s28b8bf {
  color: #1d1d1f;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .s28b8bf {
    margin-bottom: 0.125rem;
  }
}

.channel-html .w6842a9 {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .w6842a9 {
    justify-content: start;
  }
}

.channel-html .c5e8b2e {
  color: #1d1d1f;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .c5e8b2e {
    margin-bottom: 0.125rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .q0c6bd8 {
    margin-top: 0.125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q0c6bd8 {
    margin-top: 0rem;
  }
}

.channel-html .w68582f {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .w68582f {
    justify-content: flex-start;
  }
}

.channel-html .w68582f .liner {
  background-color: #1d1d1f;
  width: 80%;
  height: 0.125rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .w68582f .liner {
    width: 85%;
  }
}

.channel-html .s2e0890 {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .s2e0890 {
    justify-content: flex-start;
  }
}

.channel-html .s2e0890 .liner {
  background-color: #1d1d1f;
  width: 80%;
  height: 0.125rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .s2e0890 .liner {
    width: 85%;
  }
}

.channel-html .z987164 {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z987164 {
    justify-content: flex-start;
  }
}

.channel-html .z987164 .liner {
  background-color: #1d1d1f;
  width: 80%;
  height: 0.125rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z987164 .liner {
    width: 85%;
  }
}

.channel-html .z95b729 {
  margin-top: 3.125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .z95b729 {
    margin-top: 1.875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z95b729 {
    margin-top: 1.3125rem;
  }
}

.channel-html .v5be4a9 {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v5be4a9 {
    padding-right: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v5be4a9 {
    text-align: start;
  }
}

.channel-html .cefc75a {
  color: #1d1d1f;
}

.channel-html .dd99a9b {
  color: #1d1d1f;
  margin-top: 0rem;
}

.channel-html .a8fbf5c {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .a8fbf5c {
    padding-right: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .a8fbf5c {
    text-align: start;
  }
}

.channel-html .u4eb5e0 {
  color: #1d1d1f;
}

.channel-html .e6d6411 {
  color: #1d1d1f;
  margin-top: 0rem;
}

.channel-html .z9a8683 {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z9a8683 {
    padding-right: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z9a8683 {
    text-align: start;
  }
}

.channel-html .s2f98fe {
  color: #1d1d1f;
}

.channel-html .ef912a2 {
  color: #1d1d1f;
  margin-top: 0rem;
}

.channel-html .b290da5 {
  align-items: center;
  margin-top: 2.3125rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .b290da5 {
    margin-top: 1.5rem;
  }
}

.channel-html .abc557d {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .abc557d {
    padding-right: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .abc557d {
    text-align: start;
  }
}

.channel-html .r16967a {
  color: #c81f1f;
}

.channel-html .w62f389 {
  color: #1d1d1f;
  margin-top: 0rem;
}

.channel-html .c189775 {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .c189775 {
    padding-right: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .c189775 {
    text-align: start;
  }
}

.channel-html .b5b5df8 {
  color: #ca1f1f;
}

.channel-html .s21f2f8 {
  color: #1d1d1f;
  margin-top: 0rem;
}

.channel-html .y8e53fe {
  margin-bottom: 0.3125rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .y8e53fe {
    text-align: start;
  }
}

.channel-html .a1c0dc1 {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .a1c0dc1 {
    justify-content: start;
  }
}

.channel-html .w64843e {
  margin-bottom: 0.3125rem;
}

.channel-html .cd27883 {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .cd27883 {
    justify-content: flex-start;
  }
}

.channel-html .cd27883 .liner {
  background-color: #000000;
  width: 1.875rem;
  height: 0.1875rem;
  opacity: 1;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .cd27883 .liner {
    width: 1.1875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .cd27883 .liner {
    height: 0.125rem;
  }
}

.channel-html .a9a61b6 {
  margin-top: 2.8125rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .a9a61b6 {
    margin-top: 1.875rem;
  }
}

.channel-html .ff4bd27 {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .ff4bd27 {
    text-align: start;
  }
}

.channel-html .ea45d71 {
  color: #6e6e73;
  border: solid 0.0625rem #6e6e73;
}

.channel-html .fb6adaf {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .fb6adaf {
    text-align: start;
  }
}

.channel-html .z960f28 {
  color: #6e6e73;
  border: solid 0.0625rem #6e6e73;
}

.channel-html .fc0f325 {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .fc0f325 {
    text-align: start;
  }
}

.channel-html .r14abc8 {
  color: #6e6e73;
  border: solid 0.0625rem #6e6e73;
}

.channel-html .w6942e5 {
  margin-top: 4.1875rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .w6942e5 {
    margin-top: 3.75rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .w6942e5 {
    margin-top: 3.5625rem;
  }
}

.channel-html .z925fc2 {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z925fc2 {
    text-align: start;
  }
}

.channel-html .y8363c7 {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .y8363c7 {
    justify-content: start;
  }
}

.channel-html .c9f3067 {
  margin-top: 0.0625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .c9f3067 {
    padding-right: 0.625rem;
  }
}

.channel-html .e4aef0b {
  color: #1d1d1f;
}

.channel-html .v5839f8 {
  margin-top: 0.5625rem;
  margin-bottom: 0.625rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .v5839f8 {
    margin-top: 0.5rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v5839f8 {
    margin-top: 0.4375rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v5839f8 {
    margin-bottom: 0.3125rem;
  }
}

.channel-html .s2d1a1e {
  margin-left: 1.3125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .s2d1a1e {
    margin-left: 1.1875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .s2d1a1e {
    margin-left: 0rem;
  }
}

.channel-html .fc89cdb {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .fc89cdb {
    text-align: start;
  }
}

.channel-html .x7f4fca {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x7f4fca {
    justify-content: start;
  }
}

.channel-html .x77901c {
  margin-top: 0.0625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x77901c {
    padding-right: 0.625rem;
  }
}

.channel-html .r1d2a93 {
  color: #1d1d1f;
}

.channel-html .u47f78d {
  margin-top: 0.5625rem;
  margin-bottom: 0.625rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .u47f78d {
    margin-top: 0.5rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u47f78d {
    margin-top: 0.4375rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u47f78d {
    margin-bottom: 0.3125rem;
  }
}

.channel-html .fd6b143 {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .fd6b143 {
    text-align: start;
  }
}

.channel-html .s2e824e {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .s2e824e {
    justify-content: start;
  }
}

.channel-html .afe2832 {
  margin-top: 0.0625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .afe2832 {
    padding-right: 0.625rem;
  }
}

.channel-html .b53117b {
  color: #1d1d1f;
}

.channel-html .y846cfd {
  margin-top: 0.5625rem;
  margin-bottom: 0.625rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .y846cfd {
    margin-top: 0.5rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .y846cfd {
    margin-top: 0.4375rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .y846cfd {
    margin-bottom: 0.3125rem;
  }
}

.channel-html .q0f3425 {
  align-items: center;
  margin-top: 0.9375rem;
}

.channel-html .fef0b1f {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .fef0b1f {
    text-align: start;
  }
}

.channel-html .f12d02c {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .f12d02c {
    justify-content: start;
  }
}

.channel-html .w69e11d {
  margin-top: 0.4375rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .w69e11d {
    margin-top: 0.0625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .w69e11d {
    padding-right: 0.625rem;
  }
}

.channel-html .s2f07ec {
  color: #1d1d1f;
}

.channel-html .v5120f9 {
  margin-top: 0.5625rem;
  margin-bottom: 0.25rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .v5120f9 {
    margin-top: 0.5rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v5120f9 {
    margin-top: 0.4375rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v5120f9 {
    margin-bottom: 0.3125rem;
  }
}

.channel-html .aa69f78 {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .aa69f78 {
    text-align: start;
  }
}

.channel-html .z92fd60 {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z92fd60 {
    justify-content: start;
  }
}

.channel-html .v5bd029 {
  margin-bottom: 0.3125rem;
}

.channel-html .z9da039 {
  justify-content: center;
}

.channel-html .z9da039 .liner {
  background-color: #000000;
  width: 1.875rem;
  height: 0.1875rem;
  opacity: 1;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z9da039 .liner {
    width: 1.1875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z9da039 .liner {
    height: 0.125rem;
  }
}

.channel-html .q03f0bd {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q03f0bd {
    text-align: start;
  }
}

.channel-html .v57a24f {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v57a24f {
    justify-content: start;
  }
}

.channel-html .s29bb6a {
  margin-bottom: 0.3125rem;
}

.channel-html .dedbf60 {
  justify-content: center;
}

.channel-html .dedbf60 .liner {
  background-color: #000000;
  width: 1.875rem;
  height: 0.1875rem;
  opacity: 1;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .dedbf60 .liner {
    width: 1.1875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .dedbf60 .liner {
    height: 0.125rem;
  }
}

.channel-html .v58c699 {
  margin-top: 3.375rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v58c699 {
    margin-top: 2.1875rem;
  }
}

.channel-html .u409ac5 {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u409ac5 {
    text-align: start;
  }
}

.channel-html .c73ae2d {
  justify-content: center;
  margin-bottom: 0.625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .c73ae2d {
    justify-content: start;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .c73ae2d {
    margin-bottom: 0.375rem;
  }
}

.channel-html .z9743b7 {
  color: #1d1d1f;
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z9743b7 {
    padding-left: 0rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z9743b7 {
    padding-right: 0.625rem;
  }
}

.channel-html .r10df63 {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .r10df63 {
    text-align: start;
  }
}

.channel-html .b37cba8 {
  justify-content: center;
  margin-bottom: 0.625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .b37cba8 {
    justify-content: start;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .b37cba8 {
    margin-bottom: 0.375rem;
  }
}

.channel-html .x73b098 {
  color: #1d1d1f;
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x73b098 {
    padding-left: 0rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x73b098 {
    padding-right: 0.625rem;
  }
}

.channel-html .u4bc5d5 {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u4bc5d5 {
    text-align: start;
  }
}

.channel-html .ca6bf56 {
  justify-content: center;
  margin-bottom: 0.625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .ca6bf56 {
    justify-content: start;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .ca6bf56 {
    margin-bottom: 0.375rem;
  }
}

.channel-html .d60d210 {
  color: #1d1d1f;
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .d60d210 {
    padding-left: 0rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .d60d210 {
    padding-right: 0.625rem;
  }
}

.channel-html .r1debc7 {
  margin-top: 3.125rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .r1debc7 {
    margin-top: 2.3125rem;
  }
}

.channel-html .r1a2664 {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .r1a2664 {
    padding-right: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .r1a2664 {
    text-align: start;
  }
}

.channel-html .q0c0bca {
  justify-content: center;
  margin-bottom: 0.625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q0c0bca {
    justify-content: start;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q0c0bca {
    margin-bottom: 0.375rem;
  }
}

.channel-html .c4f16d2 {
  color: #1d1d1f;
}

.channel-html .u41b17b {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u41b17b {
    padding-right: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u41b17b {
    text-align: start;
  }
}

.channel-html .q036842 {
  justify-content: center;
  margin-bottom: 0.625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q036842 {
    justify-content: start;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q036842 {
    margin-bottom: 0.375rem;
  }
}

.channel-html .u4888b4 {
  color: #1d1d1f;
}

.channel-html .u45f013 {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u45f013 {
    padding-right: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u45f013 {
    text-align: start;
  }
}

.channel-html .r1f5ea8 {
  justify-content: center;
  margin-bottom: 0.625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .r1f5ea8 {
    justify-content: start;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .r1f5ea8 {
    margin-bottom: 0.375rem;
  }
}

.channel-html .w622564 {
  color: #1d1d1f;
}

.channel-html .x7e186c {
  margin-top: 3.125rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x7e186c {
    margin-top: 2.3125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .e2fbfa5 {
    text-align: start;
  }
}

.channel-html .x7f5680 {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x7f5680 {
    justify-content: start;
  }
}

.channel-html .y8c51be {
  margin-bottom: 0.625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .y8c51be {
    margin-bottom: 0.375rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .y8c51be {
    text-align: center;
  }
}

.channel-html .w6633a5 {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .w6633a5 {
    padding-right: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .w6633a5 {
    text-align: start;
  }
}

.channel-html .x72518e {
  color: #1d1d1f;
}

.channel-html .x7edcc4 {
  align-items: center;
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x7edcc4 {
    justify-content: start;
  }
}

.channel-html .u472abb {
  margin-bottom: 0.3125rem;
}

.channel-html .ccce5fe {
  justify-content: center;
  margin-top: 0.9375rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .ccce5fe {
    justify-content: flex-start;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .ccce5fe {
    margin-top: 0.4375rem;
  }
}

.channel-html .ccce5fe .liner {
  background-color: #000000;
  width: 1.875rem;
  height: 0.1875rem;
  opacity: 1;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .ccce5fe .liner {
    width: 1.1875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .ccce5fe .liner {
    height: 0.125rem;
  }
}

.channel-html .q092e10 {
  align-items: center;
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q092e10 {
    justify-content: start;
  }
}

.channel-html .dadc417 {
  margin-bottom: 0.3125rem;
}

.channel-html .u438bea {
  justify-content: center;
  margin-top: 0.9375rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u438bea {
    justify-content: flex-start;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u438bea {
    margin-top: 0.4375rem;
  }
}

.channel-html .u438bea .liner {
  background-color: #000000;
  width: 1.875rem;
  height: 0.1875rem;
  opacity: 1;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u438bea .liner {
    width: 1.1875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u438bea .liner {
    height: 0.125rem;
  }
}

.channel-html .r157b3f {
  margin-top: 3.125rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .r157b3f {
    margin-top: 2.3125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .y81b138 {
    text-align: start;
  }
}

.channel-html .q0137fb {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q0137fb {
    justify-content: start;
  }
}

.channel-html .v5b5c75 {
  margin-bottom: 0.625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v5b5c75 {
    margin-bottom: 0.375rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .v5b5c75 {
    text-align: center;
  }
}

.channel-html .q0f2324 {
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q0f2324 {
    padding-right: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q0f2324 {
    text-align: start;
  }
}

.channel-html .ab4cfb7 {
  color: #1d1d1f;
}

.channel-html .r1c098f {
  align-items: center;
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .r1c098f {
    justify-content: start;
  }
}

.channel-html .a9b87d5 {
  margin-bottom: 0.3125rem;
}

.channel-html .s2b869c {
  justify-content: center;
  margin-top: 0.8125rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .s2b869c {
    justify-content: flex-start;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .s2b869c {
    margin-top: 0.875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .s2b869c {
    margin-top: 0.4375rem;
  }
}

.channel-html .s2b869c .liner {
  background-color: #000000;
  width: 1.875rem;
  height: 0.1875rem;
  opacity: 1;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .s2b869c .liner {
    width: 1.1875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .s2b869c .liner {
    height: 0.125rem;
  }
}

.channel-html .x70b127 {
  align-items: center;
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x70b127 {
    justify-content: start;
  }
}

.channel-html .u4d92b3 {
  margin-bottom: 0.3125rem;
}

.channel-html .u425e8c {
  justify-content: center;
  margin-top: 0.8125rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u425e8c {
    justify-content: flex-start;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .u425e8c {
    margin-top: 0.875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u425e8c {
    margin-top: 0.4375rem;
  }
}

.channel-html .u425e8c .liner {
  background-color: #000000;
  width: 1.875rem;
  height: 0.1875rem;
  opacity: 1;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u425e8c .liner {
    width: 1.1875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u425e8c .liner {
    height: 0.125rem;
  }
}

.channel-html .dbd0dfa {
  margin-top: 3.375rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .dbd0dfa {
    margin-top: 2.3125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z921e48 {
    text-align: start;
  }
}

.channel-html .v508d7a {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v508d7a {
    justify-content: start;
  }
}

.channel-html .x712205 {
  margin-bottom: 0.75rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x712205 {
    margin-bottom: 0.375rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .x712205 {
    text-align: center;
  }
}

.channel-html .v513d6b {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v513d6b {
    padding-left: 0rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v513d6b {
    padding-right: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v513d6b {
    text-align: start;
  }
}

.channel-html .w6c6d42 {
  color: #1d1d1f;
  margin-bottom: 1rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .w6c6d42 {
    margin-bottom: 0.875rem;
  }
}

.channel-html .r1c1c55 {
  color: #1d1d1f;
}

.channel-html .ea4862f {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .ea4862f {
    justify-content: start;
  }
}

.channel-html .q0a760c {
  margin-bottom: 0.75rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q0a760c {
    margin-bottom: 0.375rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .q0a760c {
    text-align: center;
  }
}

.channel-html .bf169b2 {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .bf169b2 {
    padding-left: 0rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .bf169b2 {
    padding-right: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .bf169b2 {
    text-align: start;
  }
}

.channel-html .v512936 {
  color: #1d1d1f;
  margin-bottom: 1rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v512936 {
    margin-bottom: 0.875rem;
  }
}

.channel-html .f371eac {
  color: #1d1d1f;
}

.channel-html .x709f73 {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x709f73 {
    justify-content: start;
  }
}

.channel-html .da9fd79 {
  margin-bottom: 0.75rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .da9fd79 {
    margin-bottom: 0.375rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .da9fd79 {
    text-align: center;
  }
}

.channel-html .v58c9d6 {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v58c9d6 {
    padding-left: 0rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v58c9d6 {
    padding-right: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v58c9d6 {
    text-align: start;
  }
}

.channel-html .e1a2238 {
  color: #1d1d1f;
  margin-bottom: 1rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .e1a2238 {
    margin-bottom: 0.875rem;
  }
}

.channel-html .dadd9b9 {
  color: #1d1d1f;
}

.channel-html .v53a620 {
  margin-top: 3.125rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v53a620 {
    margin-top: 2.3125rem;
  }
}

.channel-html .z922644 {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z922644 {
    justify-content: start;
  }
}

.channel-html .e71c9cf {
  margin-bottom: 0.625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .e71c9cf {
    margin-bottom: 0.375rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .e71c9cf {
    text-align: center;
  }
}

.channel-html .w6bf229 {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .w6bf229 {
    padding-left: 0rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .w6bf229 {
    padding-right: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .w6bf229 {
    text-align: start;
  }
}

.channel-html .x7dda5a {
  color: #1d1d1f;
}

.channel-html .z95fb39 {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z95fb39 {
    justify-content: start;
  }
}

.channel-html .c6d216d {
  margin-bottom: 0.625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .c6d216d {
    margin-bottom: 0.375rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .c6d216d {
    text-align: center;
  }
}

.channel-html .u43fad8 {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u43fad8 {
    padding-left: 0rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u43fad8 {
    padding-right: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u43fad8 {
    text-align: start;
  }
}

.channel-html .x71457b {
  color: #1d1d1f;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .t3e10e4 {
    text-align: start;
  }
}

.channel-html .x7c1965 {
  align-items: center;
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x7c1965 {
    justify-content: start;
  }
}

.channel-html .e739e83 {
  margin-bottom: 0.625rem;
}

.channel-html .d58ae44 {
  justify-content: center;
  margin-top: 0.875rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .d58ae44 {
    justify-content: flex-start;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .d58ae44 {
    margin-top: 0.9375rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .d58ae44 {
    margin-top: 0.375rem;
  }
}

.channel-html .d58ae44 .liner {
  background-color: #000000;
  width: 1.875rem;
  height: 0.1875rem;
  opacity: 1;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .d58ae44 .liner {
    width: 1.1875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .d58ae44 .liner {
    height: 0.125rem;
  }
}

.channel-html .u48fbb9 {
  margin-top: 3.125rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u48fbb9 {
    margin-top: 2.3125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z9d48e3 {
    text-align: start;
  }
}

.channel-html .q03c864 {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q03c864 {
    justify-content: start;
  }
}

.channel-html .y86b834 {
  margin-bottom: 0.625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .y86b834 {
    margin-bottom: 0.375rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .y86b834 {
    text-align: center;
  }
}

.channel-html .s215b4e {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .s215b4e {
    padding-left: 0rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .s215b4e {
    padding-right: 0.3125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .s215b4e {
    text-align: start;
  }
}

.channel-html .w644efe {
  color: #1d1d1f;
}

.channel-html .q04306a {
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .q04306a {
    justify-content: start;
  }
}

.channel-html .u43ce1d {
  margin-bottom: 0.625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .u43ce1d {
    margin-bottom: 0.375rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .u43ce1d {
    text-align: center;
  }
}

.channel-html .z93227e {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
  text-align: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z93227e {
    padding-left: 0rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z93227e {
    padding-right: 0.3125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .z93227e {
    text-align: start;
  }
}

.channel-html .t35b678 {
  color: #1d1d1f;
}

.channel-html .b87f0fa {
  align-items: center;
  justify-content: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .b87f0fa {
    justify-content: start;
  }
}

.channel-html .cd1f4bd {
  margin-bottom: 0.3125rem;
}

.channel-html .x77b537 {
  justify-content: center;
  margin-top: 0.625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x77b537 {
    justify-content: flex-start;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x77b537 {
    margin-top: 0.25rem;
  }
}

.channel-html .x77b537 .liner {
  background-color: #000000;
  width: 1.875rem;
  height: 0.1875rem;
  opacity: 1;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x77b537 .liner {
    width: 1.1875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x77b537 .liner {
    height: 0.125rem;
  }
}

.channel-html .cc7daa8 {
  margin-bottom: 4.6875rem;
  overflow: hidden;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .cc7daa8 {
    margin-bottom: 3.125rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .cc7daa8 {
    overflow: hidden;
  }
}

.channel-html .r1a94fa {
  background-color: #ffffff;
  align-items: center;
  margin-bottom: 0.625rem;
}

.channel-html .r1a94fa.large-display-bleed::before,
.channel-html .r1a94fa.large-display-bleed::after {
  background-color: #ffffff;
}

.channel-html .r1a94fa.medium-display-bleed::before,
.channel-html .r1a94fa.medium-display-bleed::after {
  background-color: #ffffff;
}

.channel-html .r1a94fa.small-display-bleed::before,
.channel-html .r1a94fa.small-display-bleed::after {
  background-color: #ffffff;
}

.channel-html .r16002b {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .r16002b {
    margin-bottom: 1.5625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .r16002b {
    padding-top: 2.8125rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .r16002b {
    padding-left: 0.9375rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .r16002b {
    padding-left: 0rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .r16002b {
    padding-right: 0.9375rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .r16002b {
    padding-right: 0rem;
  }
}

.channel-html .b54703e {
  margin-bottom: 0.75rem;
}

.channel-html .e8e7f59 {
  color: #1d1d1f;
}

.channel-html .x7ae27a {
  color: #1d1d1f;
  margin-bottom: 0.3125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .x7ae27a {
    margin-bottom: 0rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x7ae27a {
    margin-bottom: 0.125rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .e17d719 {
    padding-left: 0.625rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .x7cab7f {
    margin-left: -0.625rem;
  }
}

.channel-html .t3bbabd {
  background-color: #ffffff;
  align-items: center;
  margin-bottom: 0.625rem;
}

.channel-html .t3bbabd.large-display-bleed::before,
.channel-html .t3bbabd.large-display-bleed::after {
  background-color: #ffffff;
}

.channel-html .t3bbabd.medium-display-bleed::before,
.channel-html .t3bbabd.medium-display-bleed::after {
  background-color: #ffffff;
}

.channel-html .t3bbabd.small-display-bleed::before,
.channel-html .t3bbabd.small-display-bleed::after {
  background-color: #ffffff;
}

.channel-html .ad7e675 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .ad7e675 {
    margin-bottom: 2.5rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .ad7e675 {
    padding-top: 2.625rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .ad7e675 {
    padding-left: 0.9375rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .ad7e675 {
    padding-left: 0rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .ad7e675 {
    padding-right: 0.9375rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .ad7e675 {
    padding-right: 0rem;
  }
}

.channel-html .z99f743 {
  color: #86868b;
  margin-bottom: 0.3125rem;
}

.channel-html .v5057e1 {
  color: #1d1d1f;
}

.channel-html .z9473e2 {
  color: #1d1d1f;
  margin-bottom: 0.3125rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .z9473e2 {
    margin-bottom: 0rem;
  }
}

.channel-html .u4b7ee9 {
  text-align: start;
}

.channel-html .e7b52f5 {
  margin-left: 3.75rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .e7b52f5 {
    margin-left: 0.6875rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .e7b52f5 {
    margin-left: -1.25rem;
  }
}

.channel-html .t39adb8 {
  background-color: #ffffff;
  min-height: 22.5rem;
  align-items: center;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .t39adb8 {
    min-height: 22.1875rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .t39adb8 {
    align-items: center;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .t39adb8 {
    padding-bottom: 2.5rem;
  }
}

.channel-html .t39adb8.large-display-bleed::before,
.channel-html .t39adb8.large-display-bleed::after {
  background-color: #ffffff;
}

.channel-html .t39adb8.medium-display-bleed::before,
.channel-html .t39adb8.medium-display-bleed::after {
  background-color: #ffffff;
}

.channel-html .t39adb8.small-display-bleed::before,
.channel-html .t39adb8.small-display-bleed::after {
  background-color: #ffffff;
}

.channel-html .e78fd44 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .e78fd44 {
    padding-top: 2.625rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .e78fd44 {
    padding-left: 0.9375rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .e78fd44 {
    padding-left: 0rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .e78fd44 {
    padding-bottom: 2.8125rem;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .e78fd44 {
    padding-right: 0rem;
  }
}

.channel-html .e525f1c {
  color: #86868b;
  margin-bottom: 0.3125rem;
}

.channel-html .e2cde1a {
  color: #1d1d1f;
  margin-bottom: 1.0625rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .e2cde1a {
    margin-bottom: 1.125rem;
  }
}

.channel-html .be8d0e2 {
  align-items: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .be8d0e2 {
    align-items: flex-start;
  }
}

.channel-html .x7f5a2a {
  padding-left: 0.5625rem;
}

.channel-html .z91c3b1 {
  color: #1d1d1f;
}

.channel-html .c8b46f7 {
  align-items: center;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .c8b46f7 {
    align-items: flex-start;
  }
}

.channel-html .r1e5b12 {
  padding-left: 0.5625rem;
}

.channel-html .a5a81c6 {
  color: #1d1d1f;
}

.channel-html .c5ed073 {
  align-items: center;
  margin-bottom: 1.0625rem;
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .c5ed073 {
    align-items: flex-start;
  }
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .c5ed073 {
    margin-bottom: 0.75rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .c5ed073 {
    margin-bottom: 0.9375rem;
  }
}

.channel-html .y8e8eb7 {
  padding-left: 0.5625rem;
}

.channel-html .q02a444 {
  color: #1d1d1f;
}

.channel-html .ec716ae {
  justify-content: center;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .ec716ae {
    justify-content: start;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .ec716ae {
    justify-content: center;
  }
}

.channel-html .e80750c {
  margin-right: -5.625rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .e80750c {
    margin-left: -0.375rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .e80750c {
    margin-left: 0rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .e80750c {
    margin-right: -1.5625rem;
  }
}

.channel-html .z93c59a {
  background-color: #ffffff;
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
}

@media only screen and (max-width: 66.75rem) {
  .channel-html .v560ab1 {
    margin-left: 0;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v560ab1 {
    margin-left: 0rem;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .v560ab1 {
    margin-right: 0rem;
  }
}

.channel-html .d12b94f {
  color: #888888;
}

.channel-html .e60a2bc {
  color: #888888;
}

.channel-html .d1d8f0f {
  color: #888888;
}

.channel-html .a4b3758 {
  color: #888888;
}

.channel-html,
.channel-html:before,
.channel-html:after,
.channel-html *,
.channel-html *:before,
.channel-html *:after {
  pointer-events: auto;
}

.channel-html .t37df53 .typography-body,
.channel-html .u4adaf5 .typography-body span,
.channel-html .u421128 .typography-body span,
.channel-html .y8bbff8 .typography-body span,
.channel-html .c1956db .typography-body span,
.channel-html .db95fa1 .custom-17-body-reduced {
  font-weight: 500;
}

.channel-html .section sup {
  font-size: 0.6em;
  position: relative;
  bottom: -0.2em;
}

h1 .channel-html sup,
h2 .channel-html sup,
h3 .channel-html sup {
  font-size: 0.4em;
}

.channel-html .section sup a {
  vertical-align: inherit;
  color: inherit;
}

.channel-html .section sup a:hover {
  color: #0066cc;
  text-decoration: none;
}

@media only screen and (min-width: 66.8125rem) {
  .channel-html .w61f445 .typography-intro {
    letter-spacing: 0.005em;
  }
  .channel-html .y8bbff8 .typography-intro {
    letter-spacing: 0.005em;
  }
}

@media only screen and (max-width: 66.75rem) and (min-width: 45.9375rem) {
  .channel-html .c1956db .typography-headline {
    letter-spacing: -0.01em;
  }
  .channel-html .y8bbff8 .typography-intro {
    letter-spacing: 0.005em;
  }
}

@media only screen and (max-width: 45.875rem) {
  .channel-html .db95fa1 .typography-body,
  .channel-html .u421128 .typography-body,
  .channel-html .y8bbff8 .typography-body,
  .channel-html .u4adaf5 .typography-body,
  .channel-html .c1956db .typography-body,
  .channel-html .db95fa1 .typography-body,
  .channel-html .db95fa1 .custom-17-body-reduced,
  .channel-html .db95fa1 .typography-body-tight {
    font-size: 0.875rem;
    line-height: 1.4285914286;
    letter-spacing: -0.016em;
  }
  .channel-html .t37df53 .typography-headline-super {
    font-size: 2rem;
    letter-spacing: -0.008em;
    line-height: 1.125;
  }
  .channel-html .t37df53 .typography-intro-elevated {
    font-size: 1.1875rem;
    line-height: 1.4211026316;
  }
  .channel-html .typography-headline-super + .typography-intro-elevated {
    margin-top: 1.2em;
  }
  .channel-html .t37df53 .button {
    font-size: 1.0625rem;
    font-weight: 400;
    line-height: 1.1764805882;
    letter-spacing: -0.022em;
    padding: 0.5rem 1.0625rem;
  }
  .channel-html .y8bbff8 .t3f8357 {
    z-index: 10;
  }
  .channel-html .y8bbff8 .z9d54dc {
    height: 18rem;
  }
  .channel-html .u4adaf5 .typography-headline {
    letter-spacing: -0.009em;
  }
  .channel-html .v5842f1 .typography-intro {
    letter-spacing: -0.012em;
  }
  .channel-html .c1956db .typography-eyebrow,
  .channel-html .db95fa1 .typography-eyebrow-elevated {
    font-size: 1.1875rem;
    line-height: 1.2105263158;
    font-weight: 600;
    letter-spacing: 0.012em;
  }
  .channel-html .c1956db .typography-headline {
    font-size: 1.75rem;
    line-height: 1.1428571429;
    font-weight: 600;
    letter-spacing: -0.01em;
  }
  .channel-html .db95fa1 .typography-headline {
    letter-spacing: -0.01em;
  }
  .channel-html .db95fa1 .custom-17-body-reduced,
  .channel-html .db95fa1 .typography-body-tight,
  .channel-html .db95fa1 .typography-body {
    line-height: 1.28;
  }
  .channel-html .db95fa1 {
    font-size: 0.75rem;
    line-height: 1.3333733333;
    font-weight: 400;
    letter-spacing: -0.01em;
  }
}

#vf-buttonHero, #vf-buttonProduct1, #vf-buttonProduct2 {
  padding: 0.5rem 1.25rem;
  font-size: 1.25rem;
  color: #fff;
  box-sizing: border-box;
  width: auto;
}

#vf-buttonHero:hover, #vf-buttonProduct1:hover, #vf-buttonProduct2:hover {
  text-decoration: none;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
