/**
 * Vodafone Reboot Framework: Version 2.4.0. Generation Date: 2020-08-27T12:47:58.547Z
 */

.vfes-colours--turqoise {
  color: #007C92;
}

.vfes-colours--anthracite {
  color: #666;
}

.vfes-text--strikethrough-turqoise {
  text-decoration: line-through;
  color: #007C92;
}

.vfs-margin-flex-right {
  margin-right: 0.375rem;
}

.vfs-margin-flex-left {
  margin-left: 0.375rem;
}

@media only screen and (min-width: 64rem) {
  .debug .vfes-ms-content {
    min-height: 125rem;
  }
}

.vfes-ms-content {
  background-color: #e5e5e5;
  padding-top: 3rem;
  /* 
    
    
    */
}

@media only screen and (min-width: 64rem) {
  .vfes-ms-content {
    padding-top: 4.875rem;
  }
}

.vfes-ms-content .vf-fl {
  display: block;
  width: 3.125rem;
  float: left;
  margin-right: 0.625rem;
  margin-top: -0.3125rem;
}

.vfes-ms-content .vfes-modal {
  background-color: rgba(0, 0, 0, 0.45);
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfes-overlay {
    padding-top: 1.25rem !important;
    padding-bottom: 1.25rem !important;
  }
}

.vfes-ms-content .bf-modal-item .modal-oferta__icon {
  float: left;
}

@media only screen and (min-width: 48.4375rem) {
  .vfes-ms-content .bf-modal-item .modal-oferta__icon {
    float: none;
  }
}

.vfes-ms-content .bf-modal-item .vfes-layout__item {
  margin-top: 1.25rem;
}

.vfes-ms-content .vfes-ms-content-filete {
  display: none;
  width: 100%;
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  z-index: 1;
  padding: 1rem 0;
}

.vfes-ms-content .vfes-ms-content-filete__notice {
  font-size: 0.875rem;
  text-align: center;
}

.vfes-ms-content .vfes-ms-content-filete .vfes-layout__nopadding {
  padding: 0;
}

.vfes-ms-content .performance-hero {
  background:  url('../img/banner/bts-movil/background.png?v=0e746875440f0d6fdaf3fec647936e94') no-repeat;
  background-size: cover;
  padding: 1rem 0;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .performance-hero {
    background:  url('../img/banner/bts-tablet/background.png?v=b48758d92e2afe1c4be9cad3fefaa980') no-repeat;
    background-size: cover;
  }
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .performance-hero {
    background:  url('../img/banner/bts/background.jpg?v=a9b2eebd76c92cd7c1feed21b9440ff3') no-repeat;
    padding-bottom: 3rem;
    height: 30rem;
  }
}

.vfes-ms-content .performance-hero__bolus {
  display: none;
  position: absolute;
  color: #fff;
}

@media only screen and (min-width: 48.4375rem) {
  .vfes-ms-content .performance-hero__bolus {
    display: flex;
    justify-content: center;
    height: 100%;
  }
}

.vfes-ms-content .performance-hero__bolus__percentage {
  font-size: 9.375rem;
}

.vfes-ms-content .performance-hero__bolus__percentage-simbol {
  font-size: 5.9375rem;
}

.vfes-ms-content .performance-hero__bolus__extra {
  font-size: 3.125rem;
  margin-top: -2.5rem;
}

.vfes-ms-content .performance-hero__title {
  text-align: center;
  padding: 0 0.9375rem;
  font-size: 1.25rem;
  padding: 0 0 0.75rem 0;
  margin-bottom: 0;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .performance-hero__title {
    display: none;
  }
}

.vfes-ms-content .performance-hero__clain {
  display: none;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .performance-hero__clain {
    position: absolute;
    bottom: 0;
    left: 2rem;
    color: #fff;
    display: flex;
    flex-direction: column;
  }
}

.vfes-ms-content .performance-hero .bonus-mid-reference {
  display: none;
}

.vfes-ms-content .performance-card {
  color: #333;
  padding: 0.875rem;
  text-align: left;
  margin: 0 auto;
  max-width: 100%;
  background-color: #fff;
  position: relative;
  border-radius: 0.625rem;
  box-shadow: 0.125rem 0.125rem 0.5rem 0 rgba(0, 0, 0, 0.16);
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .performance-card {
    max-width: 70%;
  }
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .performance-card {
    max-width: 44%;
    margin-right: 20rem;
  }
}

.vfes-ms-content .performance-card__content {
  display: flex;
  flex-flow: column;
  align-items: center;
}

@media screen and (min-width: 31.25rem) {
  .vfes-ms-content .performance-card__content {
    flex-flow: row;
    align-items: flex-end;
    justify-content: space-between;
  }
}

.vfes-ms-content .performance-card__maincol {
  width: 100%;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .performance-card__maincol {
    width: auto;
  }
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .performance-card__list {
    margin-top: 1.25rem;
  }
}

.vfes-ms-content .performance-card__list-item {
  display: flex;
  margin-bottom: 0.75rem;
}

.vfes-ms-content .performance-card__list-item-description {
  margin-left: 0.25rem;
  margin-bottom: 0;
}

.vfes-ms-content .performance-card__list-item-description .list-item-description__title {
  font-size: 1.125rem;
  margin-bottom: 0.25rem;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .performance-card__list-item-description .list-item-description__title {
    font-size: 1.25rem;
  }
}

.vfes-ms-content .performance-card__list-item-description .list-item-description__title--align {
  margin-top: 0.25rem;
}

.vfes-ms-content .performance-card__list-item-description .list-item-description__text {
  font-size: 1rem;
  margin-bottom: 0;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .performance-card__list-item-description .list-item-description__text {
    font-size: 1.125rem;
  }
}

.vfes-ms-content .performance-card__title {
  margin-bottom: 0.9375rem;
  font-size: 1.25rem;
  line-height: 1.5625rem;
  display: flex;
  flex-direction: column;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .performance-card__title {
    display: inline;
    font-size: 1.5rem;
    line-height: 1.5rem;
  }
}

@media screen and (min-width: 80rem) {
  .vfes-ms-content .performance-card__title {
    font-size: 1.75rem;
  }
}

.vfes-ms-content .performance-card__details-button {
  font-size: 0.875rem;
  margin: 0.75rem 0;
  text-align: right;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .performance-card__details-button {
    margin-bottom: 0;
    margin-top: 1.25rem;
    text-align: left;
  }
}

.vfes-ms-content .performance-card__details-button .vfms-offer-details-link {
  text-decoration: underline;
}

.vfes-ms-content .performance-card__details {
  width: 100%;
  display: flex;
  flex-direction: column;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .performance-card__details {
    margin: 0;
    text-align: left;
    width: auto;
  }
}

.vfes-ms-content .performance-card__details .performance-card__price-old {
  display: flex;
  flex-direction: column;
  line-height: 1.4;
}

.vfes-ms-content .performance-card__details .performance-card__price-old .performance-card__price-old-text {
  font-size: 0.875rem;
}

.vfes-ms-content .performance-card__details .performance-card__price-old .performance-card__price-old-number {
  font-size: 0.875rem;
}

.vfes-ms-content .performance-card__details .performance-card__price-new {
  display: flex;
  flex-direction: column;
}

.vfes-ms-content .performance-card__details .performance-card__price-new .performance-card__price {
  font-size: 1.75rem;
  line-height: 1;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .performance-card__details .performance-card__price-new .performance-card__price {
    font-size: 2.5rem;
  }
}

.vfes-ms-content .performance-card__details .performance-card__price-new .performance-card__text-small {
  font-size: 1.25rem;
}

.vfes-ms-content .performance-card__details .performance-card__price-new-features {
  display: flex;
  flex-direction: column;
  font-size: 0.8125rem;
}

.vfes-ms-content .performance-card__detailscol {
  border-top: 0.0625rem solid #cccccc;
  padding-top: 0.5rem;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .performance-card__detailscol {
    border-top: none;
  }
}

.vfes-ms-content .performance-card__deadline {
  font-size: 0.875rem;
  display: flex;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .performance-card__deadline {
    flex-direction: column;
  }
}

.vfes-ms-content .performance-card__deadline-item:first-child {
  margin-right: 0.125rem;
}

.vfes-ms-content .performance-card__text-small {
  font-size: 1.75rem;
}

@media only screen and (min-width: 48.4375rem) {
  .vfes-ms-content .performance-card__text-small {
    font-size: 1.25rem;
  }
}

.vfes-ms-content .performance-card__text-smaller {
  font-size: 0.875rem;
}

.vfes-ms-content .wg-form-trigger {
  position: absolute;
  right: 0.3125rem;
  top: 0.125rem;
  bottom: 0.125rem;
  padding-left: 0.625rem;
  padding-right: 0.9375rem;
  width: auto;
}

.vfes-ms-content .wg-form-trigger svg {
  display: inline-block;
  vertical-align: middle;
}

@media only screen and (min-width: 64rem) {
  .vfes-ms-content .wg-form-trigger {
    display: none;
  }
}

.vfes-ms-content .wg-form-trigger--circle {
  display: none;
}

.vfes-ms-content .vfms-modal-title {
  padding-bottom: 0.625rem;
  border-bottom: solid #333 0.0625rem;
  margin-bottom: 1rem;
}

.vfes-ms-content .vfms-fibraMovil .vfes-modal__content {
  padding: 1.75rem;
}

.vfes-ms-content .vfms-fibraMovil .vfms-offer-details-features-container {
  display: flex;
  flex-wrap: wrap;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .vfms-fibraMovil .vfms-offer-details-features-container .vfms-offer-details-features-item {
    width: 50%;
  }
}

.vfes-ms-content .vfms-fibraMovil .vfms-offer-details-features-container .vfms-offer-details-features-item .vfms-feature-header {
  display: flex;
  align-items: center;
}

.vfes-ms-content .vfms-fibraMovil .vfms-offer-details-features-container .vfms-offer-details-features-item .vfms-feature-header .vfms-feature-title {
  margin-bottom: 0;
  margin-left: 1rem;
}

.vfes-ms-content .vfms-fibraMovil .vfms-offer-details-features-container .vfms-offer-details-features-item .vfms-feature-content {
  list-style: disc;
  padding: 0 3.125rem 0.875rem;
  font-size: 0.875rem;
  line-height: 1.3;
}

.vfes-ms-content .vfms-fibraMovil .vfms-offer-details-conditions {
  display: flex;
  border-top: #333 solid 0.0625rem;
}

.vfes-ms-content .vfms-fibraMovil .vfms-offer-details-conditions .vfms-feature-title {
  margin-bottom: 0;
  padding-top: 0.625rem;
}

.vfes-ms-content .vfms-fibraMovil .vfms-offer-details-conditions .vfms-offer-details-conditions-container {
  list-style: none;
  font-size: 0.875rem;
  margin-top: 0.625rem;
  margin-left: 0.625rem;
}

.vfes-ms-content .vfms-fibraMovil .vfms-offer-details-conditions .vfms-offer-details-conditions-container__item {
  margin-bottom: 0.5rem;
}

.vfes-ms-content .vfms-fibraMovil .vfms-offer-details-conditions .vfms-offer-details-conditions-container__item-features {
  list-style: disc;
  padding: 0.625rem 1.875rem;
}

.vfes-ms-content .wg-form-sticky {
  display: none;
  position: fixed;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
}

@media only screen and (min-width: 64rem) {
  .vfes-ms-content .wg-form-sticky {
    display: block;
    width: calc(100% - 2.5rem);
    max-width: 18.75rem;
    background: none;
    position: absolute;
    left: auto;
    right: 1.25rem;
    top: 0;
    bottom: auto;
  }
}

.vfes-ms-content .wg-form-sticky__overlay {
  position: absolute;
  background-color: rgba(0, 0, 0, 0.6);
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

@media only screen and (min-width: 64rem) {
  .vfes-ms-content .wg-form-sticky__overlay {
    position: relative;
    background-color: transparent;
  }
}

.vfes-ms-content .wg-form-sticky p {
  font-size: 1.25rem;
}

.vfes-ms-content .wg-form-sticky__wrapper {
  position: relative;
  background-color: #fff;
  color: #333;
  box-shadow: 0 0.125rem 0.25rem 0 rgba(0, 0, 0, 0.5);
  width: calc(100% - 2.5rem);
  max-width: 18.75rem;
  border-radius: 0.375rem;
  position: fixed;
  left: 50%;
  transform: translate(-50%, -50%);
  top: 50%;
  transition: all 1s;
  padding: 1.875rem 1.25rem 1.25rem;
}

@media only screen and (min-width: 64rem) {
  .vfes-ms-content .wg-form-sticky__wrapper {
    color: white;
    background-color: #333;
    border-radius: 0;
    position: static;
    width: 100%;
    display: block;
    transform: none;
    left: auto;
    right: 1.25rem;
    top: 0;
    bottom: auto;
    transition: all 0.5s ease-in-out;
    overflow: hidden;
    max-height: 4.9375rem;
    padding: 0.625rem 1.25rem 1.25rem;
  }
}

.vfes-ms-content .wg-form-sticky--on {
  display: block;
}

@media only screen and (min-width: 64rem) {
  .vfes-ms-content .wg-form-sticky--on .wg-form-sticky__wrapper {
    bottom: auto;
    border-radius: 0 0 0.375rem 0.375rem;
    max-height: 31.25rem;
    transition: all 0.5s ease-in-out;
  }
  .vfes-ms-content .wg-form-sticky--on .wg-form-sticky__collapse-btn:before {
    transform: translate(-50%, -20%) scaleY(-1) rotate(135deg);
  }
}

.vfes-ms-content .wg-form-sticky__collapse-btn {
  display: none;
}

@media only screen and (min-width: 64rem) {
  .vfes-ms-content .wg-form-sticky__collapse-btn {
    outline: none;
    width: 2.625rem;
    height: 1.3125rem;
    border-radius: 0 0 2.625rem 2.625rem;
    background-color: #333;
    display: block;
    visibility: hidden;
    position: absolute;
    bottom: -1.3125rem;
    left: 50%;
    transform: translateX(-50%) scale(0);
    transform-origin: center top;
    transition: all 0.3s ease-out;
    color: white;
  }
  .vfes-ms-content .wg-form-sticky__collapse-btn--show {
    visibility: visible;
    transform: translateX(-50%) scale(1);
  }
  .vfes-ms-content .wg-form-sticky__collapse-btn:before {
    content: '';
    width: 0.9375rem;
    height: 0.9375rem;
    border: 0.0625rem solid #fff;
    border-left: none;
    border-bottom: none;
    position: absolute;
    left: 50%;
    top: 10%;
    transition: transform 0.5s;
    transform-origin: center center;
    transform: translate(-50%, -50%) scaleY(1) rotate(135deg);
  }
}

.vfes-ms-content .wg-form-sticky__close-btn {
  position: absolute;
  right: 0.625rem;
  top: 0.625rem;
  color: black;
}

@media only screen and (min-width: 64rem) {
  .vfes-ms-content .wg-form-sticky__close-btn {
    color: white;
    display: none;
  }
}

.vfes-ms-content .wg-form-sticky hr {
  width: 85%;
  height: 0.0625rem;
  border: none;
  background-color: #333;
  margin: 0.9375rem auto;
}

@media only screen and (min-width: 64rem) {
  .vfes-ms-content .wg-form-sticky hr {
    width: auto;
    background-color: white;
  }
}

.vfes-ms-content .wg-form-sticky .vfes-button {
  padding: 0.75rem;
  font-size: 1.25rem;
  width: 100%;
  margin: 0.625rem 0 0 0;
  box-shadow: none;
}

.vfes-ms-content .wg-form-sticky .phone-number {
  font-size: 1.75rem;
  display: block;
  color: inherit;
}

.vfes-ms-content .wg-form-sticky .phone-number svg {
  vertical-align: middle;
  margin-right: 0.1875rem;
  width: 1.5rem;
  height: 1.5rem;
}

.vfes-ms-content .wg-form-sticky .phone-number a {
  text-decoration: none;
  color: inherit;
}

.vfes-ms-content .wg-form-sticky .vfes-form__input {
  margin-bottom: 0.9375rem;
  color: #333;
}

.vfes-ms-content .wg-form-sticky .vfes-form__box {
  margin-bottom: 0.3125rem;
}

.vfes-ms-content .wg-form-sticky .vfes-form__checkbox + .vfes-form__label {
  font-size: 0.875rem;
}

.vfes-ms-content .wg-form-sticky .vfes-form__checkbox + .vfes-form__label button {
  display: contents;
  text-decoration: underline;
  color: inherit;
}

.vfes-ms-content {
  z-index: 0;
}

.vfes-ms-content .performance-header {
  background-color: #fff;
  box-shadow: 0 0.375rem 0.375rem -0.25rem #999;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 10;
  /*  &>* {
            display: inline-block;
        } */
}

.vfes-ms-content .performance-header svg {
  width: 1.5rem;
  height: 1.5rem;
}

.vfes-ms-content .performance-header__content {
  position: relative;
  padding: 0.625rem;
  margin: 0 auto;
  width: 100%;
  max-width: 80rem;
  height: 3rem;
}

@media only screen and (min-width: 64rem) {
  .vfes-ms-content .performance-header__content {
    padding-left: 3.125rem;
    padding-right: 2.5rem;
    height: 4.875rem;
  }
}

.vfes-ms-content .performance-header__title {
  display: none;
}

@media screen and (min-width: 48rem) {
  .vfes-ms-content .performance-header__title {
    display: flex;
    height: 100%;
    align-items: center;
    font-size: 1.5rem;
    margin-left: 3.125rem;
    margin-bottom: 0;
  }
  .vfes-ms-content .performance-header__title strong {
    font-family: "VodafoneRegular", Helvetica, Arial, sans-serif;
  }
}

@media screen and (min-width: 80rem) {
  .vfes-ms-content .performance-header__title {
    font-size: 2.5rem;
    margin-left: 6.25rem;
  }
}

.vfes-ms-content .performance-header__logo {
  position: absolute;
  left: 0.625rem;
  top: 0.625rem;
  width: 1.5625rem;
}

@media only screen and (min-width: 64rem) {
  .vfes-ms-content .performance-header__logo {
    left: 3.125rem;
    top: 0.9375rem;
    width: 3.0625rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyIsIl9mb3JtLnNjc3MiLCJfaGVhZGVyLnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQXF1aSBzZSBwdWVkZW4gaW1wb3J0YXIgbGlicmVyw61hcyBleHRlcm5hc1xuLy8gZWo6IEBpbXBvcnQgJy90b29scy9mdW5jdGlvbnMnO1xuQGltcG9ydCBcIm1pY3JvXCI7XG5AaW1wb3J0IFwiZm9ybVwiO1xuQGltcG9ydCBcImhlYWRlclwiOyIsIiRoaG1vYmlsZTogNDhweDtcbiRoaHRhYmxldDogNzhweDtcbiRicmVha3BvaW50LWRlc2t0b3A6IDEyMDBweDtcbiRicmVha3BvaW50LXRhYmxldDogMTAyNHB4O1xuJGJyZWFrcG9pbnQtbW92OiA3NzVweDsgLy83NjhweDsgLy82NDBweDtcbiRicmVha3BvaW50LW1vdi1zbWFsbDogMzYycHg7XG4vLyBHZW5lcmFsZXNcbi52ZmVzLWNvbG91cnMtLXR1cnFvaXNlIHtcbiAgICBjb2xvcjogIzAwN0M5Mjtcbn1cblxuLnZmZXMtY29sb3Vycy0tYW50aHJhY2l0ZSB7XG4gICAgY29sb3I6ICM2NjY7XG59XG5cbi52ZmVzLXRleHQtLXN0cmlrZXRocm91Z2gtdHVycW9pc2Uge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xuICAgIGNvbG9yOiAjMDA3QzkyO1xufVxuXG4udmZzLW1hcmdpbi1mbGV4LXJpZ2h0IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDZweDtcbn1cblxuLnZmcy1tYXJnaW4tZmxleC1sZWZ0IHtcbiAgICBtYXJnaW4tbGVmdDogNnB4O1xufVxuXG5AbWl4aW4gbXEtaHVnZSB7XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkYnJlYWtwb2ludC1kZXNrdG9wKSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuQG1peGluIG1xLWRlc2t0b3Age1xuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQtdGFibGV0KSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuQG1peGluIG1xLXRhYmxldC1kZXNrdG9wIHtcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRicmVha3BvaW50LW1vdikge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbkBtaXhpbiBtcS10YWJsZXQge1xuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQtbW92KSBhbmQgKG1heC13aWR0aDogJGJyZWFrcG9pbnQtdGFibGV0KSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuQG1peGluIG1xLXBob25lIHtcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICRicmVha3BvaW50LW1vdikge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbkBtaXhpbiBtcS1waG9uZS1zbWFsbCB7XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkYnJlYWtwb2ludC1tb3Ytc21hbGwpIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxufVxuXG4uZGVidWcgLnZmZXMtbXMtY29udGVudCB7XG4gICAgQGluY2x1ZGUgbXEtZGVza3RvcCB7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDIwMDBweDtcbiAgICB9XG59XG5cbi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50IHtcbiAgICAvL21pbi1oZWlnaHQ6IDIwMDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTVlNWU1O1xuICAgIHBhZGRpbmctdG9wOiAkaGhtb2JpbGU7XG4gICAgQGluY2x1ZGUgbXEtZGVza3RvcCB7XG4gICAgICAgIHBhZGRpbmctdG9wOiAkaGh0YWJsZXQ7XG4gICAgfVxuICAgIC52Zi1mbCB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogNTBweDtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICAgICAgbWFyZ2luLXRvcDogLTVweDtcbiAgICB9XG4gICAgLnZmZXMtbW9kYWwge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNDUpO1xuICAgIH1cbiAgICAudmZlcy1vdmVybGF5IHtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAyMHB4ICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweCAhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgfVxuICAgIC5iZi1tb2RhbC1pdGVtIHtcbiAgICAgICAgLm1vZGFsLW9mZXJ0YV9faWNvbiB7XG4gICAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1xLXRhYmxldC1kZXNrdG9wIHtcbiAgICAgICAgICAgICAgICBmbG9hdDogbm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAudmZlcy1sYXlvdXRfX2l0ZW0ge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZlcy1tcy1jb250ZW50LWZpbGV0ZSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgIHBhZGRpbmc6IDE2cHggMDtcbiAgICAgICAgJl9fbm90aWNlIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgfVxuICAgICAgICAudmZlcy1sYXlvdXRfX25vcGFkZGluZyB7XG4gICAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICB9XG4gICAgfVxuICAgIC5wZXJmb3JtYW5jZS1oZXJvIHtcbiAgICAgICAgYmFja2dyb3VuZDogdXJsKC4uL2ltZy9iYW5uZXIvYnRzLW1vdmlsL2JhY2tncm91bmQucG5nKSBuby1yZXBlYXQ7XG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICAgIHBhZGRpbmc6IDE2cHggMDtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHVybCguLi9pbWcvYmFubmVyL2J0cy10YWJsZXQvYmFja2dyb3VuZC5wbmcpIG5vLXJlcGVhdDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICAgIH1cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1nL2Jhbm5lci9idHMvYmFja2dyb3VuZC5qcGcpIG5vLXJlcGVhdDtcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiA0OHB4O1xuICAgICAgICAgICAgaGVpZ2h0OiAzMHJlbTtcbiAgICAgICAgfVxuICAgICAgICAmX19ib2x1cyB7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICBAaW5jbHVkZSBtcS10YWJsZXQtZGVza3RvcCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmX19wZXJjZW50YWdlIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE1MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJl9fcGVyY2VudGFnZS1zaW1ib2wge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogOTVweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICZfX2V4dHJhIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDUwcHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogLTQwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJl9fdGl0bGUge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgcGFkZGluZzogMCAxNXB4O1xuICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgcGFkZGluZzogMCAwIDEycHggMDtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmX19jbGFpbiB7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICAgICAgICAgIGxlZnQ6IDMycHg7XG4gICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC5ib251cy1taWQtcmVmZXJlbmNlIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnBlcmZvcm1hbmNlLWNhcmQge1xuICAgICAgICBjb2xvcjogIzMzMztcbiAgICAgICAgcGFkZGluZzogMTRweDtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwLjYyNXJlbTtcbiAgICAgICAgYm94LXNoYWRvdzogMC4xMjVyZW0gMC4xMjVyZW0gMC41cmVtIDAgcmdiYSgwLCAwLCAwLCAwLjE2KTtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgICAgIG1heC13aWR0aDogNzAlO1xuICAgICAgICB9XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA0NCU7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDMyMHB4O1xuICAgICAgICB9XG4gICAgICAgICZfX2NvbnRlbnQge1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGZsZXgtZmxvdzogY29sdW1uO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDUwMHB4KSB7XG4gICAgICAgICAgICAgICAgZmxleC1mbG93OiByb3c7XG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmX19tYWluY29sIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZfX2xpc3Qge1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZfX2xpc3QtaXRlbSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgICAgICAgfVxuICAgICAgICAmX19saXN0LWl0ZW0tZGVzY3JpcHRpb24ge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDRweDtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICAubGlzdC1pdGVtLWRlc2NyaXB0aW9uX190aXRsZSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDRweDtcbiAgICAgICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICYtLWFsaWduIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC5saXN0LWl0ZW0tZGVzY3JpcHRpb25fX3RleHQge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJl9fdGl0bGUge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjEyODBweCkge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmX19kZXRhaWxzLWJ1dHRvbiB7XG4gICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgICAgICBtYXJnaW46IDEycHggMDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC52Zm1zLW9mZmVyLWRldGFpbHMtbGluayB7XG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJl9fZGV0YWlscyB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC5wZXJmb3JtYW5jZS1jYXJkX19wcmljZS1vbGQge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMS40O1xuICAgICAgICAgICAgICAgIC5wZXJmb3JtYW5jZS1jYXJkX19wcmljZS1vbGQtdGV4dCB7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnBlcmZvcm1hbmNlLWNhcmRfX3ByaWNlLW9sZC1udW1iZXIge1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLnBlcmZvcm1hbmNlLWNhcmRfX3ByaWNlLW5ldyB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgICAgIC5wZXJmb3JtYW5jZS1jYXJkX19wcmljZSB7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgICAgICAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDQwcHg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnBlcmZvcm1hbmNlLWNhcmRfX3RleHQtc21hbGwge1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLnBlcmZvcm1hbmNlLWNhcmRfX3ByaWNlLW5ldy1mZWF0dXJlcyB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmX19kZXRhaWxzY29sIHtcbiAgICAgICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjY2NjY2NjO1xuICAgICAgICAgICAgcGFkZGluZy10b3A6IDhweDtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgICAgICAgICBib3JkZXItdG9wOiBub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZfX2RlYWRsaW5lIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJl9fZGVhZGxpbmUtaXRlbTpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDJweDtcbiAgICAgICAgfVxuICAgICAgICAmX190ZXh0LXNtYWxsIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1xLXRhYmxldC1kZXNrdG9wIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJl9fdGV4dC1zbWFsbGVyIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKiBcbiAgICBcbiAgICBcbiAgICAqL1xuICAgIC53Zy1mb3JtLXRyaWdnZXIge1xuICAgICAgICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiAjZTYwMDAwO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiA1cHg7XG4gICAgICAgIHRvcDogMnB4O1xuICAgICAgICBib3R0b206IDJweDtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xuICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgc3ZnIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgICAgIH1cbiAgICAgICAgQGluY2x1ZGUgbXEtZGVza3RvcCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICB9XG4gICAgICAgICYtLWNpcmNsZSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgLy8gcGFkZGluZzogMDtcbiAgICAgICAgICAgIC8vIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgIC8vIHRvcDogYXV0bztcbiAgICAgICAgICAgIC8vIGJvdHRvbTogNXB4O1xuICAgICAgICAgICAgLy8gcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAvLyBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgICAgICAvLyB3aWR0aDogNTBweDtcbiAgICAgICAgICAgIC8vIGhlaWdodDogNTBweDtcbiAgICAgICAgICAgIC8vIGJveC1zaGFkb3c6IDAgMnB4IDRweCAwIHJnYmEoMCwgMCwgMCwgMC4zNSk7XG4gICAgICAgICAgICAvLyBib3JkZXI6IHNvbGlkIDJweCAjZTAyMDIwO1xuICAgICAgICAgICAgLy8gYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgICAgICAgICAgIC8vIHN2ZyB7XG4gICAgICAgICAgICAvLyAgICAgd2lkdGg6IDMwcHg7XG4gICAgICAgICAgICAvLyAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgICAgICAgLy8gICAgIHBhdGgge1xuICAgICAgICAgICAgLy8gICAgICAgICBmaWxsOiAjZTYwMDAwO1xuICAgICAgICAgICAgLy8gICAgIH1cbiAgICAgICAgICAgIC8vIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBFc3RpbG9zIHBhcmEgbG9zIG1vZGFsZXNcbiAgICAudmZtcy1tb2RhbC10aXRsZSB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgICAgICBib3JkZXItYm90dG9tOiBzb2xpZCAjMzMzIDFweDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTZweDtcbiAgICB9XG4gICAgLnZmbXMtZmlicmFNb3ZpbCB7XG4gICAgICAgIC52ZmVzLW1vZGFsX19jb250ZW50IHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDI4cHg7XG4gICAgICAgIH1cbiAgICAgICAgLnZmbXMtb2ZmZXItZGV0YWlscy1mZWF0dXJlcy1jb250YWluZXIge1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgICAgIC52Zm1zLW9mZmVyLWRldGFpbHMtZmVhdHVyZXMtaXRlbSB7XG4gICAgICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnZmbXMtZmVhdHVyZS1oZWFkZXIge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgICAgICAgICAvLyAudmZtcy1mZWF0dXJlLWljb24ge1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICAgICAgLnZmbXMtZmVhdHVyZS10aXRsZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gYWxpZ24tc2VsZjogZmxleC1lbmQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMTZweDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudmZtcy1mZWF0dXJlLWNvbnRlbnQge1xuICAgICAgICAgICAgICAgICAgICBsaXN0LXN0eWxlOiBkaXNjO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwIDUwcHggMTRweDtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMS4zO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAudmZtcy1vZmZlci1kZXRhaWxzLWNvbmRpdGlvbnMge1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGJvcmRlci10b3A6ICMzMzMgc29saWQgMXB4O1xuICAgICAgICAgICAgLnZmbXMtZmVhdHVyZS10aXRsZSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC52Zm1zLW9mZmVyLWRldGFpbHMtY29uZGl0aW9ucy1jb250YWluZXIge1xuICAgICAgICAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgJl9faXRlbSB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDhweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgJl9faXRlbS1mZWF0dXJlcyB7XG4gICAgICAgICAgICAgICAgICAgIGxpc3Qtc3R5bGU6IGRpc2M7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggMzBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiLnZmZXMtbXMtY29udGVudCB7XG4gICAgLndnLWZvcm0tc3RpY2t5IHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIEBpbmNsdWRlIG1xLWRlc2t0b3Age1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAvL3Bvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIC8vbGVmdDogYXV0bztyaWdodDogYXV0bzt0b3A6IGF1dG87Ym90dG9tOiBhdXRvO1xuICAgICAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDQwcHgpO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAzMDBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBsZWZ0OiBhdXRvO1xuICAgICAgICAgICAgcmlnaHQ6IDIwcHg7XG4gICAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgICBib3R0b206IGF1dG87XG4gICAgICAgIH1cbiAgICAgICAgJl9fb3ZlcmxheSB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNik7XG4gICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgICAgICBib3R0b206IDA7XG4gICAgICAgICAgICBAaW5jbHVkZSBtcS1kZXNrdG9wIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcCB7XG4gICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIH1cbiAgICAgICAgJl9fd3JhcHBlciB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgICAgICBib3gtc2hhZG93OiAwIDJweCA0cHggMCByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gICAgICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gNDBweCk7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDMwMHB4O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgICAgICB0b3A6IDUwJTsgLy8tMTAwJTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAxcztcbiAgICAgICAgICAgIHBhZGRpbmc6IDMwcHggMjBweCAyMHB4O1xuICAgICAgICAgICAgQGluY2x1ZGUgbXEtZGVza3RvcCB7XG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgICAgICAgICAgICAgICBsZWZ0OiBhdXRvO1xuICAgICAgICAgICAgICAgIHJpZ2h0OiAyMHB4O1xuICAgICAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgICAgICBib3R0b206IGF1dG87XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuNXMgZWFzZS1pbi1vdXQ7XG4gICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiA3OXB4O1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggMjBweCAyMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZfX2NvbGxhcHNhYmxlIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1xLWRlc2t0b3Age31cbiAgICAgICAgfVxuICAgICAgICAmLS1vbiB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIEBpbmNsdWRlIG1xLWRlc2t0b3Age1xuICAgICAgICAgICAgICAgIC53Zy1mb3JtLXN0aWNreV9fd3JhcHBlciB7XG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTogYXV0bztcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMCAwIDZweCA2cHg7XG4gICAgICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDUwMHB4O1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC41cyBlYXNlLWluLW91dC8qIDAuNXMgKi9cbiAgICAgICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAud2ctZm9ybS1zdGlja3lfX2NvbGxhcHNlLWJ0bjpiZWZvcmUge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtMjAlKSBzY2FsZVkoLTEpIHJvdGF0ZSgxMzVkZWcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmX19jb2xsYXBzZS1idG4ge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1xLWRlc2t0b3Age1xuICAgICAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDQycHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAyMXB4O1xuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDAgMCA0MnB4IDQycHg7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIGJvdHRvbTogLTIxcHg7XG4gICAgICAgICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSBzY2FsZSgwKTtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgdG9wO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2Utb3V0LyogMC40cyAqL1xuICAgICAgICAgICAgICAgIDtcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgJi0tc2hvdyB7XG4gICAgICAgICAgICAgICAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSBzY2FsZSgxKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDE1cHg7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTVweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IG5vbmU7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgICAgICAgICAgICB0b3A6IDEwJTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNXM7XG4gICAgICAgICAgICAgICAgICAgIC8vdHJhbnNpdGlvbi1kZWxheTogMC41cztcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgc2NhbGVZKDEpIHJvdGF0ZSgxMzVkZWcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmX19jbG9zZS1idG4ge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICB0b3A6IDEwcHg7XG4gICAgICAgICAgICBjb2xvcjogYmxhY2s7XG4gICAgICAgICAgICBAaW5jbHVkZSBtcS1kZXNrdG9wIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBociB7XG4gICAgICAgICAgICB3aWR0aDogODUlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICAgICAgICAgICAgbWFyZ2luOiAxNXB4IGF1dG87XG4gICAgICAgICAgICBAaW5jbHVkZSBtcS1kZXNrdG9wIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAudmZlcy1idXR0b24ge1xuICAgICAgICAgICAgcGFkZGluZzogMTJweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgbWFyZ2luOiAxMHB4IDAgMCAwO1xuICAgICAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgfVxuICAgICAgICAucGhvbmUtbnVtYmVyIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgICAgICAgICBzdmcge1xuICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAzcHg7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDI0cHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAyNHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgICAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC52ZmVzLWZvcm1fX2lucHV0IHtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gICAgICAgICAgICBjb2xvcjogIzMzMztcbiAgICAgICAgfVxuICAgICAgICAudmZlcy1mb3JtX19ib3gge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICAgICAgICB9XG4gICAgICAgIC52ZmVzLWZvcm1fX2NoZWNrYm94Ky52ZmVzLWZvcm1fX2xhYmVsIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICAgIGJ1dHRvbiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogY29udGVudHM7XG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICAgICAgICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiLnZmZXMtbXMtY29udGVudCB7XG4gICAgei1pbmRleDogMDtcbiAgICAucGVyZm9ybWFuY2UtaGVhZGVyIHtcbiAgICAgICAgLy9wb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgNnB4IDZweCAtNHB4ICM5OTk7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIHotaW5kZXg6IDEwO1xuICAgICAgICAvL21hcmdpbi1ib3R0b206ICRoaG1vYmlsZTtcbiAgICAgICAgc3ZnIHtcbiAgICAgICAgICAgIHdpZHRoOiAyNHB4O1xuICAgICAgICAgICAgaGVpZ2h0OiAyNHB4O1xuICAgICAgICB9XG4gICAgICAgICZfX2NvbnRlbnQge1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDEyODBweDtcbiAgICAgICAgICAgIGhlaWdodDogJGhobW9iaWxlO1xuICAgICAgICAgICAgQGluY2x1ZGUgbXEtZGVza3RvcCB7XG4gICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiA1MHB4O1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDQwcHg7XG4gICAgICAgICAgICAgICAgLy9tYXJnaW4tYm90dG9tOiAkaGh0YWJsZXQ7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAkaGh0YWJsZXQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJl9fdGl0bGUge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDUwcHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgICAgICAgICBzdHJvbmcge1xuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJWb2RhZm9uZVJlZ3VsYXJcIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjgwcHgpIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDQwcHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDEwMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZfX2xvZ28ge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgbGVmdDogMTBweDtcbiAgICAgICAgICAgIHRvcDogMTBweDtcbiAgICAgICAgICAgIHdpZHRoOiAyNXB4O1xuICAgICAgICAgICAgQGluY2x1ZGUgbXEtZGVza3RvcCB7XG4gICAgICAgICAgICAgICAgbGVmdDogNTBweDtcbiAgICAgICAgICAgICAgICB0b3A6IDE1cHg7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDQ5cHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLyogICY+KiB7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIH0gKi9cbiAgICB9XG59Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ09BLEFBQUEsdUJBQXVCLENBQUM7RUFDcEIsS0FBSyxFQUFFLE9BQU87Q0FDakI7O0FBRUQsQUFBQSx5QkFBeUIsQ0FBQztFQUN0QixLQUFLLEVBQUUsSUFBSTtDQUNkOztBQUVELEFBQUEsa0NBQWtDLENBQUM7RUFDL0IsZUFBZSxFQUFFLFlBQVk7RUFDN0IsS0FBSyxFQUFFLE9BQU87Q0FDakI7O0FBRUQsQUFBQSxzQkFBc0IsQ0FBQztFQUNuQixZQUFZLEVBQUUsR0FBRztDQUNwQjs7QUFFRCxBQUFBLHFCQUFxQixDQUFDO0VBQ2xCLFdBQVcsRUFBRSxHQUFHO0NBQ25COztBQVNHLE1BQU0sTUFBTSxNQUFNLE1BQU0sU0FBUyxFQUFFLE1BQU07RUE2QjdDLEFBQUEsTUFBTSxDQUFDLGdCQUFnQixDQUFDO0lBRWhCLFVBQVUsRUFBRSxNQUFNO0dBRXpCOzs7QUFHRCxBQUFBLGdCQUFnQixDQUFDO0VBRWIsZ0JBQWdCLEVBQUUsT0FBTztFQUN6QixXQUFXLEVBMUVKLElBQUk7RUFnVlg7OztNQUdFO0NBcUdMOztBQXJaRyxNQUFNLE1BQU0sTUFBTSxNQUFNLFNBQVMsRUFBRSxNQUFNO0VBb0M3QyxBQUFBLGdCQUFnQixDQUFDO0lBS1QsV0FBVyxFQTNFUixJQUFJO0dBdWJkOzs7QUFqWEQsQUFPSSxnQkFQWSxDQU9aLE1BQU0sQ0FBQztFQUNILE9BQU8sRUFBRSxLQUFLO0VBQ2QsS0FBSyxFQUFFLElBQUk7RUFDWCxLQUFLLEVBQUUsSUFBSTtFQUNYLFlBQVksRUFBRSxJQUFJO0VBQ2xCLFVBQVUsRUFBRSxJQUFJO0NBQ25COztBQWJMLEFBY0ksZ0JBZFksQ0FjWixXQUFXLENBQUM7RUFDUixnQkFBZ0IsRUFB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 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
