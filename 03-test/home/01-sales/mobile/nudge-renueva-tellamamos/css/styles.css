/**
 * Vodafone Reboot Framework: Version 2.7.1. Generation Date: 2021-01-20T12:41:27.936Z
 */

.vfes-ms-content {
  background-image: url("https://www.vodafone.es/c/statics/imagen/bd-mobile-basesales-renueva.png");
  background-size: cover;
  background-position: center;
  color: #fff;
  margin-top: 3.125rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content {
    margin-top: 3.75rem;
    background-image: url("https://www.vodafone.es/c/statics/imagen/bd-tablet-basesales-renueva.png");
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content {
    margin-top: 0;
    background-image: url("https://www.vodafone.es/c/statics/imagen/bd-dsk-basesales-renueva.png");
  }
}

.vfes-ms-content .vfms-device {
  max-width: 10rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-device {
    max-width: none;
  }
}

.vfes-ms-content .vfms-text {
  font-size: 1.375rem;
  max-width: 17.5rem;
  margin: 0 auto;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-text {
    font-size: 1.5rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-text {
    font-size: 2rem;
    margin: 0;
    max-width: 25rem;
  }
}

.vfes-ms-content .vfms-text--align {
  text-align: center;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-text--align {
    text-align: left;
  }
}

.vfes-ms-content .vfms-title {
  font-size: 2.5rem;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-title {
    font-size: 3rem;
  }
}

.vfes-ms-content .vfms-flex--container {
  flex-direction: column;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-flex--container {
    flex-direction: row;
    justify-content: space-around;
  }
}

.vfes-ms-content .vfms-flex--item:nth-of-type(1) {
  order: 2;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-flex--item:nth-of-type(1) {
    order: 1;
    display: flex;
    align-items: center;
  }
}

.vfes-ms-content .vfms-flex--item:nth-of-type(2) {
  order: 1;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-flex--item:nth-of-type(2) {
    order: 2;
  }
}

.vfes-ms-content .vfms-button {
  text-align: center;
  border: 0;
  text-decoration: none;
  cursor: pointer;
  display: inline-block;
  box-sizing: border-box;
  border-radius: .375rem;
  line-height: 1.25;
  width: 100%;
  margin-right: 0;
  margin-left: 0;
  padding: .5625rem .875rem .6875rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-button {
    width: auto;
  }
}

.vfes-ms-content .vfms-button--tertiary {
  background-color: #fff;
  color: #333;
  font-size: 1.125rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-button--tertiary {
    font-size: 1.25rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-button--tertiary {
    font-size: 1.625rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50e1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iZC1tb2JpbGUtYmFzZXNhbGVzLXJlbnVldmEucG5nJyk7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgbWFyZ2luLXRvcDogNTBweDtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICBtYXJnaW4tdG9wOiA2MHB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmQtdGFibGV0LWJhc2VzYWxlcy1yZW51ZXZhLnBuZycpO1xuICAgIH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmQtZHNrLWJhc2VzYWxlcy1yZW51ZXZhLnBuZycpO1xuICAgIH1cbiAgICAudmZtcy1kZXZpY2Uge1xuICAgICAgICBtYXgtd2lkdGg6IDE2MHB4O1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiBub25lO1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLXRleHR7XG4gICAgICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICAgICAgbWF4LXdpZHRoOiAyODBweDtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgIH1cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgIG1heC13aWR0aDogNDAwcHg7XG4gICAgICAgIH1cbiAgICAgICAgJi0tYWxpZ24ge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLXRpdGxlIHtcbiAgICAgICAgZm9udC1zaXplOiA0MHB4O1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgZm9udC1zaXplOiA0OHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLWZsZXh7XG4gICAgICAgICYtLWNvbnRhaW5lciB7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICYtLWl0ZW06bnRoLW9mLXR5cGUoMSkgeyBvcmRlcjogMjtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgb3JkZXI6IDE7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICYtLWl0ZW06bnRoLW9mLXR5cGUoMikgeyBvcmRlcjogMTtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgb3JkZXI6IDI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9IFxuICAgIC52Zm1zLWJ1dHRvbiB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAuMzc1cmVtO1xuICAgICAgICBsaW5lLWhlaWdodDogMS4yNTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICAgIHBhZGRpbmc6IC41NjI1cmVtIC44NzVyZW0gLjY4NzVyZW07XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgfVxuICAgICAgICAmLS10ZXJ0aWFyeSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNnB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9IFxuICAgIH1cbn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFDQ0EsQUFBQSxnQkFBZ0IsQ0FBQTtFQUNaLGdCQUFnQixFQUFFLCtFQUErRTtFQUNqRyxlQUFlLEVBQUUsS0FBSztFQUN0QixtQkFBbUIsRUFBRSxNQUFNO0VBQzNCLEtBQUssRUFBRSxJQUFJO0VBQ1gsVUFBVSxFQUFFLElBQUk7Q0F5Rm5COztBQXhGRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBTnZDLEFBQUEsZ0JBQWdCLENBQUE7SUFPUixVQUFVLEVBQUUsSUFBSTtJQUNoQixnQkFBZ0IsRUFBRSwrRUFBK0U7R0FzRnhHOzs7QUFwRkcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQVZ2QyxBQUFBLGdCQUFnQixDQUFBO0lBV1IsVUFBVSxFQUFFLENBQUM7SUFDYixnQkFBZ0IsRUFBRSw0RUFBNEU7R0FrRnJHOzs7QUE5RkQsQUFjSSxnQkFkWSxDQWNaLFlBQVksQ0FBQztFQUNULFNBQVMsRUFBRSxLQUFLO0NBSW5COztBQUhHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFoQjNDLEFBY0ksZ0JBZFksQ0FjWixZQUFZLENBQUM7SUFHTCxTQUFTLEVBQUUsSUFBSTtHQUV0Qjs7O0FBbkJMLEFBb0JJLGdCQXBCWSxDQW9CWixVQUFV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 */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50e1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iZC1tb2JpbGUtYmFzZXNhbGVzLXJlbnVldmEucG5nJyk7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgbWFyZ2luLXRvcDogNTBweDtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICBtYXJnaW4tdG9wOiA2MHB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmQtdGFibGV0LWJhc2VzYWxlcy1yZW51ZXZhLnBuZycpO1xuICAgIH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmQtZHNrLWJhc2VzYWxlcy1yZW51ZXZhLnBuZycpO1xuICAgIH1cbiAgICAudmZtcy1kZXZpY2Uge1xuICAgICAgICBtYXgtd2lkdGg6IDE2MHB4O1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiBub25lO1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLXRleHR7XG4gICAgICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICAgICAgbWF4LXdpZHRoOiAyODBweDtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgIH1cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgIG1heC13aWR0aDogNDAwcHg7XG4gICAgICAgIH1cbiAgICAgICAgJi0tYWxpZ24ge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLXRpdGxlIHtcbiAgICAgICAgZm9udC1zaXplOiA0MHB4O1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgZm9udC1zaXplOiA0OHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLWZsZXh7XG4gICAgICAgICYtLWNvbnRhaW5lciB7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICYtLWl0ZW06bnRoLW9mLXR5cGUoMSkgeyBvcmRlcjogMjtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgb3JkZXI6IDE7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICYtLWl0ZW06bnRoLW9mLXR5cGUoMikgeyBvcmRlcjogMTtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgb3JkZXI6IDI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9IFxuICAgIC52Zm1zLWJ1dHRvbiB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAuMzc1cmVtO1xuICAgICAgICBsaW5lLWhlaWdodDogMS4yNTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICAgIHBhZGRpbmc6IC41NjI1cmVtIC44NzVyZW0gLjY4NzVyZW07XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgfVxuICAgICAgICAmLS10ZXJ0aWFyeSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNnB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9IFxuICAgIH1cbn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFDQ0EsQUFBQSxnQkFBZ0IsQ0FBQTtFQUNaLGdCQUFnQixFQUFFLCtFQUErRTtFQUNqRyxlQUFlLEVBQUUsS0FBSztFQUN0QixtQkFBbUIsRUFBRSxNQUFNO0VBQzNCLEtBQUssRUFBRSxJQUFJO0VBQ1gsVUFBVSxFQUFFLElBQUk7Q0F5Rm5COztBQXhGRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBTnZDLEFBQUEsZ0JBQWdCLENBQUE7SUFPUixVQUFVLEVBQUUsSUFBSTtJQUNoQixnQkFBZ0IsRUFBRSwrRUFBK0U7R0FzRnhHOzs7QUFwRkcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQVZ2QyxBQUFBLGdCQUFnQixDQUFBO0lBV1IsVUFBVSxFQUFFLENBQUM7SUFDYixnQkFBZ0IsRUFBRSw0RUFBNEU7R0FrRnJHOzs7QUE5RkQsQUFjSSxnQkFkWSxDQWNaLFlBQVksQ0FBQztFQUNULFNBQVMsRUFBRSxLQUFLO0NBSW5COztBQUhHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFoQjNDLEFBY0ksZ0JBZFksQ0FjWixZQUFZLENBQUM7SUFHTCxTQUFTLEVBQUUsSUFBSTtHQUV0Qjs7O0FBbkJMLEFBb0JJLGdCQXBCWSxDQW9CWixVQUFV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 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
