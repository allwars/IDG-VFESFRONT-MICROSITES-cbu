/**
 * Vodafone Reboot Framework: Version 2.2.2. Generation Date: 2020-06-03T14:06:35.502Z
 */

.vfes-ms-content-ficha-movil {
  scroll-behavior: smooth;
}

.vfes-ms-content-ficha-movil .vfms-main .vfms-title--4 {
  text-align: center;
  margin-bottom: 0.625rem;
  font-size: 1.25rem;
  line-height: 1.23;
  font-weight: 400;
}

.vfes-ms-content-ficha-movil .vfms-main .vfms-paragraph {
  text-align: center;
}

.vfes-ms-content-ficha-movil .vfms-main .vfms-title-cta {
  margin-top: 1.875rem;
}

.vfes-ms-content-ficha-movil .vfms-main .vfms-button {
  font-family: "VodafoneRegular",Helvetica,Arial,sans-serif;
  text-align: center;
  border: 0;
  text-decoration: none;
  cursor: pointer;
  display: inline-block;
  box-sizing: border-box;
  border-radius: 0.375rem;
  line-height: 1.25;
  width: 100%;
  margin-right: 0;
  margin-left: 0;
  font-size: 1.125rem;
  padding: 0.5625rem 0.875rem 0.6875rem;
}

.vfes-ms-content-ficha-movil .vfms-main .vfms-button--green {
  background-color: #090;
  color: #fff;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-ficha-movil .vfms-main .vfms-title--4 {
    text-align: left;
    font-size: 1.5rem;
  }
  .vfes-ms-content-ficha-movil .vfms-main .vfms-paragraph {
    text-align: left;
  }
  .vfes-ms-content-ficha-movil .vfms-main .vfms-title-cta {
    margin-top: 0;
  }
  .vfes-ms-content-ficha-movil .vfms-main .vfms-button {
    padding: 0.625rem 1.25rem 0.75rem;
    font-size: 1.25rem;
    line-height: 1.75rem;
    width: auto;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-ficha-movil .vfms-main .vfms-title--4 {
    font-size: 1.625rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LWZpY2hhLW1vdmlse1xuICAgIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xuICAgIC52Zm1zLW1haW4ge1xuICAgICAgICAudmZtcy10aXRsZS0tNCB7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjM7XG4gICAgICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICB9IFxuICAgICAgICAudmZtcy1wYXJhZ3JhcGh7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIH0gXG4gICAgICAgIC52Zm1zLXRpdGxlLWN0YXtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gICAgICAgIH0gIFxuICAgICAgICAudmZtcy1idXR0b24ge1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiVm9kYWZvbmVSZWd1bGFyXCIsSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWY7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMC4zNzVyZW07XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS4yNTtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICAgICAgICBmb250LXNpemU6IDEuMTI1cmVtO1xuICAgICAgICAgICAgcGFkZGluZzogMC41NjI1cmVtIDAuODc1cmVtIDAuNjg3NXJlbTtcbiAgICAgICAgfSAgICAgICAgICAgICBcbiAgICAgICAgLnZmbXMtYnV0dG9uLS1ncmVlbiB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDkwO1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIH0gICAgXG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAudmZtcy10aXRsZS0tNCB7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgICAgICAgIH0gIFxuICAgICAgICAgICAgLnZmbXMtcGFyYWdyYXBoe1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgICAgICB9ICBcbiAgICAgICAgICAgIC52Zm1zLXRpdGxlLWN0YXtcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICAgICAgfSBcbiAgICAgICAgICAgIC52Zm1zLWJ1dHRvbiB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMC42MjVyZW0gMS4yNXJlbSAwLjc1cmVtO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMS43NXJlbTtcbiAgICAgICAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgLnZmbXMtdGl0bGUtLTQge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42MjVyZW07XG4gICAgICAgICAgICB9IFxuICAgICAgICB9XG4gICAgfVxufSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNDQSxBQUFBLDRCQUE0QixDQUFBO0VBQ3hCLGVBQWUsRUFBRSxNQUFNO0NBMkQxQjs7QUE1REQsQUFHUSw0QkFIb0IsQ0FFeEIsVUFBVSxDQUNOLGNBQWMsQ0FBQztFQUNYLFVBQVUsRUFBRSxNQUFNO0VBQ2xCLGFBQWEsRUFBRSxJQUFJO0VBQ25CLFNBQVMsRUFBRSxPQUFPO0VBQ2xCLFdBQVcsRUFBRSxJQUFJO0VBQ2pCLFdBQVcsRUFBRSxHQUFHO0NBQ25COztBQVRULEFBVVEsNEJBVm9CLENBRXhCLFVBQVUsQ0FRTixlQUFlLENBQUE7RUFDWCxVQUFVLEVBQUUsTUFBTTtDQUNyQjs7QUFaVCxBQWFRLDRCQWJvQixDQUV4QixVQUFVLENBV04sZUFBZSxDQUFBO0VBQ1gsVUFBVSxFQUFFLElBQUk7Q0FDbkI7O0FBZlQsQUFnQlEsNEJBaEJvQixDQUV4QixVQUFVLENBY04sWUFBWSxDQUFDO0VBQ1QsV0FBVyxFQUFFLDRDQUE0QztFQUN6RCxVQUFVLEVBQUUsTUFBTTtFQUNsQixNQUFNLEVBQUUsQ0FBQztFQUNULGVBQWUsRUFBRSxJQUFJO0VBQ3JCLE1BQU0sRUFBRSxPQUFPO0VBQ2YsT0FBTyxFQUFFLFlBQVk7RUFDckIsVUFBVSxFQUFFLFVBQVU7RUFDdEIsYUFBYSxFQUFFLFFBQVE7RUFDdkIsV0FBVyxFQUFFLElBQUk7RUFDakIsS0FBSyxFQUFFLElBQUk7RUFDWCxZQUFZLEVBQUUsQ0FBQztFQUNmLFdBQVcsRUFBRSxDQUFDO0VBQ2QsU0FBUyxFQUFFLFFBQVE7RUFDbkIsT0FBTyxFQUFFLDRCQUE0QjtDQUN4Qzs7QUEvQlQsQUFnQ1EsNEJBaENvQixDQUV4QixVQUFVLENBOEJOLG1CQUFtQixDQUFDO0VBQ2hCLGdCQUFnQixFQUFFLElBQUk7RUFDdEIsS0FBSyxFQUFFLElBQUk7Q0FDZDs7QUFDRCxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBcEMzQyxBQXFDWSw0QkFyQ2dCLENBRXhCLFVBQVUsQ0FtQ0YsY0FBYyxDQUFDO0lBQ1gsVUFBVSxFQUFFLElBQUk7SUFDaEIsU0FBUyxFQUFFLE1BQU07R0FDcEI7RUF4Q2IsQUF5Q1ksNEJBekNnQixDQUV4QixVQUFVLENBdUNGLGVBQWUsQ0FBQTtJQUNYLFVBQVUsRUFBRSxJQUFJO0dBQ25CO0VBM0NiLEFBNENZLDRCQTVDZ0IsQ0FFeEIsVUFBVSxDQTBDRixlQUFlLENBQUE7SUFDWCxVQUFVLEVBQUUsQ0FBQztHQUNoQjtFQTlDYixBQStDWSw0QkEvQ2dCLENBRXhCLFVBQVUsQ0E2Q0YsWUFBWSxDQUFDO0lBQ1QsT0FBTyxFQUFFLHdCQUF3QjtJQUNqQyxTQUFTLEVBQUUsT0FBTztJQUNsQixXQUFXLEVBQUUsT0FBTztJQUNwQixLQUFLLEVBQUUsSUFBSTtHQUNkOzs7QUFFTCxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBdEQzQyxBQXVEWSw0QkF2RGdCLENBRXhCLFVBQVUsQ0FxREYsY0FBYyxDQUFDO0lBQ1gsU0FBUyxFQUFFLFFBQVE7R0FDdEIifQ== */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LWZpY2hhLW1vdmlse1xuICAgIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xuICAgIC52Zm1zLW1haW4ge1xuICAgICAgICAudmZtcy10aXRsZS0tNCB7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjM7XG4gICAgICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICB9IFxuICAgICAgICAudmZtcy1wYXJhZ3JhcGh7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIH0gXG4gICAgICAgIC52Zm1zLXRpdGxlLWN0YXtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gICAgICAgIH0gIFxuICAgICAgICAudmZtcy1idXR0b24ge1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiVm9kYWZvbmVSZWd1bGFyXCIsSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWY7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMC4zNzVyZW07XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS4yNTtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICAgICAgICBmb250LXNpemU6IDEuMTI1cmVtO1xuICAgICAgICAgICAgcGFkZGluZzogMC41NjI1cmVtIDAuODc1cmVtIDAuNjg3NXJlbTtcbiAgICAgICAgfSAgICAgICAgICAgICBcbiAgICAgICAgLnZmbXMtYnV0dG9uLS1ncmVlbiB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDkwO1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIH0gICAgXG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAudmZtcy10aXRsZS0tNCB7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgICAgICAgIH0gIFxuICAgICAgICAgICAgLnZmbXMtcGFyYWdyYXBoe1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgICAgICB9ICBcbiAgICAgICAgICAgIC52Zm1zLXRpdGxlLWN0YXtcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICAgICAgfSBcbiAgICAgICAgICAgIC52Zm1zLWJ1dHRvbiB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMC42MjVyZW0gMS4yNXJlbSAwLjc1cmVtO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMS43NXJlbTtcbiAgICAgICAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgLnZmbXMtdGl0bGUtLTQge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42MjVyZW07XG4gICAgICAgICAgICB9IFxuICAgICAgICB9XG4gICAgfVxufSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNDQSxBQUFBLDRCQUE0QixDQUFBO0VBQ3hCLGVBQWUsRUFBRSxNQUFNO0NBMkQxQjs7QUE1REQsQUFHUSw0QkFIb0IsQ0FFeEIsVUFBVSxDQUNOLGNBQWMsQ0FBQztFQUNYLFVBQVUsRUFBRSxNQUFNO0VBQ2xCLGFBQWEsRUFBRSxJQUFJO0VBQ25CLFNBQVMsRUFBRSxPQUFPO0VBQ2xCLFdBQVcsRUFBRSxJQUFJO0VBQ2pCLFdBQVcsRUFBRSxHQUFHO0NBQ25COztBQVRULEFBVVEsNEJBVm9CLENBRXhCLFVBQVUsQ0FRTixlQUFlLENBQUE7RUFDWCxVQUFVLEVBQUUsTUFBTTtDQUNyQjs7QUFaVCxBQWFRLDRCQWJvQixDQUV4QixVQUFVLENBV04sZUFBZSxDQUFBO0VBQ1gsVUFBVSxFQUFFLElBQUk7Q0FDbkI7O0FBZlQsQUFnQlEsNEJBaEJvQixDQUV4QixVQUFVLENBY04sWUFBWSxDQUFDO0VBQ1QsV0FBVyxFQUFFLDRDQUE0QztFQUN6RCxVQUFVLEVBQUUsTUFBTTtFQUNsQixNQUFNLEVBQUUsQ0FBQztFQUNULGVBQWUsRUFBRSxJQUFJO0VBQ3JCLE1BQU0sRUFBRSxPQUFPO0VBQ2YsT0FBTyxFQUFFLFlBQVk7RUFDckIsVUFBVSxFQUFFLFVBQVU7RUFDdEIsYUFBYSxFQUFFLFFBQVE7RUFDdkIsV0FBVyxFQUFFLElBQUk7RUFDakIsS0FBSyxFQUFFLElBQUk7RUFDWCxZQUFZLEVBQUUsQ0FBQztFQUNmLFdBQVcsRUFBRSxDQUFDO0VBQ2QsU0FBUyxFQUFFLFFBQVE7RUFDbkIsT0FBTyxFQUFFLDRCQUE0QjtDQUN4Qzs7QUEvQlQsQUFnQ1EsNEJBaENvQixDQUV4QixVQUFVLENBOEJOLG1CQUFtQixDQUFDO0VBQ2hCLGdCQUFnQixFQUFFLElBQUk7RUFDdEIsS0FBSyxFQUFFLElBQUk7Q0FDZDs7QUFDRCxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBcEMzQyxBQXFDWSw0QkFyQ2dCLENBRXhCLFVBQVUsQ0FtQ0YsY0FBYyxDQUFDO0lBQ1gsVUFBVSxFQUFFLElBQUk7SUFDaEIsU0FBUyxFQUFFLE1BQU07R0FDcEI7RUF4Q2IsQUF5Q1ksNEJBekNnQixDQUV4QixVQUFVLENBdUNGLGVBQWUsQ0FBQTtJQUNYLFVBQVUsRUFBRSxJQUFJO0dBQ25CO0VBM0NiLEFBNENZLDRCQTVDZ0IsQ0FFeEIsVUFBVSxDQTBDRixlQUFlLENBQUE7SUFDWCxVQUFVLEVBQUUsQ0FBQztHQUNoQjtFQTlDYixBQStDWSw0QkEvQ2dCLENBRXhCLFVBQVUsQ0E2Q0YsWUFBWSxDQUFDO0lBQ1QsT0FBTyxFQUFFLHdCQUF3QjtJQUNqQyxTQUFTLEVBQUUsT0FBTztJQUNsQixXQUFXLEVBQUUsT0FBTztJQUNwQixLQUFLLEVBQUUsSUFBSTtHQUNkOzs7QUFFTCxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBdEQzQyxBQXVEWSw0QkF2RGdCLENBRXhCLFVBQVUsQ0FxREYsY0FBYyxDQUFDO0lBQ1gsU0FBUyxFQUFFLFFBQVE7R0FDdEIifQ== */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
