/**
 * Vodafone Reboot Framework: Version 13.0.2. Generation Date: 2019-10-02T12:28:20.492Z
 */

.vfms-overlay {
  background: rgba(0, 0, 0, 0.85);
  position: fixed;
  z-index: 3;
  height: 100vh;
  width: 100vw;
}

.vfes-ms-content {
  display: none;
}

@media all and (min-width: 40rem) {
  .vfes-ms-content {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .vfes-ms-content .vfms-popup {
    width: 37.375rem;
    height: 21.875rem;
    background: #fff;
    background-size: cover;
    background-repeat: no-repeat;
    border-radius: 0.375rem;
    padding: 0 1.625rem;
  }
  .vfes-ms-content .vfms-popup .vfms-close {
    position: absolute;
    right: 0;
    top: -1.875rem;
  }
  .vfes-ms-content .vfms-popup .vfms-device {
    display: flex;
    justify-content: center;
    max-height: 14.9375rem;
  }
  .vfes-ms-content .vfms-popup .vfms-special--size {
    font-size: 1.25rem;
  }
  .vfes-ms-content .vfms-popup .vfes-button {
    width: 16rem;
    height: 2.75rem;
    font-size: 1.125rem;
  }
}

@media all and (min-width: 64rem) {
  .vfes-ms-content .vfms-popup {
    width: 43.125rem;
    height: 21.875rem;
    background: #fff;
    background-size: cover;
    background-repeat: no-repeat;
    border-radius: 0.375rem;
    padding: 0 3.5625rem;
  }
  .vfes-ms-content .vfms-popup .vfms-close {
    position: absolute;
    right: -1.875rem;
    top: -2.5rem;
  }
  .vfes-ms-content .vfms-popup .vfms-info {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  .vfes-ms-content .vfms-popup .vfms-info {
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  .vfes-ms-content .vfms-popup .vfms-device {
    display: flex;
    justify-content: center;
    max-height: 15.5rem;
  }
  .vfes-ms-content .vfms-popup .vfms-special--size {
    font-size: 1.25rem;
  }
  .vfes-ms-content .vfms-popup .vfes-button {
    width: 16rem;
    height: 2.75rem;
    font-size: 1.125rem;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZtcy1vdmVybGF5IHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLC44NSk7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHotaW5kZXg6IDM7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICB3aWR0aDogMTAwdnc7XG59XG4udmZlcy1tcy1jb250ZW50e1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIC52Zm1zLXBvcHVwe1xuICAgICAgICAgICAgd2lkdGg6IDU5OHB4O1xuICAgICAgICAgICAgaGVpZ2h0OiAzNTBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgMjZweDtcbiAgICBcbiAgICAgICAgICAgIC52Zm1zLWNsb3Nle1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICByaWdodDogMDtcbiAgICAgICAgICAgICAgICB0b3A6IC0zMHB4O1xuICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgLnZmbXMtZGV2aWNlIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDIzOXB4O1xuICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgLnZmbXMtc3BlY2lhbC0tc2l6ZSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgLnZmZXMtYnV0dG9ue1xuICAgICAgICAgICAgICAgIHdpZHRoOiAyNTZweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDQ0cHg7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICB9ICBcbiAgICB9XG4gICAgQG1lZGlhIGFsbCBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgIC52Zm1zLXBvcHVwe1xuICAgICAgICAgICAgd2lkdGg6IDY5MHB4O1xuICAgICAgICAgICAgaGVpZ2h0OiAzNTBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgNTdweDtcbiAgICBcbiAgICAgICAgICAgIC52Zm1zLWNsb3Nle1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICByaWdodDogLTMwcHg7XG4gICAgICAgICAgICAgICAgdG9wOiAtNDBweDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLnZmbXMtaW5mbyB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC52Zm1zLWluZm8ge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAudmZtcy1kZXZpY2Uge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgbWF4LWhlaWdodDogMjQ4cHg7XG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAudmZtcy1zcGVjaWFsLS1zaXplIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAudmZlcy1idXR0b257XG4gICAgICAgICAgICAgICAgd2lkdGg6IDI1NnB4O1xuICAgICAgICAgICAgICAgIGhlaWdodDogNDRweDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgIH0gIFxuICAgIH1cbn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFDQ0EsQUFBQSxhQUFhLENBQUM7RUFDVixVQUFVLEVBQUUsbUJBQWU7RUFDM0IsUUFBUSxFQUFFLEtBQUs7RUFDZixPQUFPLEVBQUUsQ0FBQztFQUNWLE1BQU0sRUFBRSxLQUFLO0VBQ2IsS0FBSyxFQUFFLEtBQUs7Q0FDZjs7QUFDRCxBQUFBLGdCQUFnQixDQUFBO0VBQ1osT0FBTyxFQUFFLElBQUk7Q0FxRmhCOztBQXBGRyxNQUFNLENBQUMsR0FBRyxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBRnBDLEFBQUEsZ0JBQWdCLENBQUE7SUFHUixPQUFPLEVBQUUsSUFBSTtJQUNiLFdBQVcsRUFBRSxNQUFNO0lBQ25CLGVBQWUsRUFBRSxNQUFNO0dBaUY5QjtFQXRGRCxBQU1RLGdCQU5RLENBTVIsV0FBVyxDQUFBO0lBQ1AsS0FBSyxFQUFFLEtBQUs7SUFDWixNQUFNLEVBQUUsS0FBSztJQUNiLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLGVBQWUsRUFBRSxLQUFLO0lBQ3RCLGlCQUFpQixFQUFFLFNBQVM7SUFDNUIsYUFBYSxFQUFFLEdBQUc7SUFDbEIsT0FBTyxFQUFFLE1BQU07R0F3QmxCO0VBckNULEFBZVksZ0JBZkksQ0FNUixXQUFXLENBU1AsV0FBVyxDQUFBO0lBQ1AsUUFBUSxFQUFFLFFBQVE7SUFDbEIsS0FBSyxFQUFFLENBQUM7SUFDUixHQUFHLEVBQUUsS0FBSztHQUNiO0VBbkJiLEFBcUJZLGdCQXJCSSxDQU1SLFdBQVcsQ0FlUCxZQUFZLENBQUM7SUFDVCxPQUFPLEVBQUUsSUFBSTtJQUNiLGVBQWUsRUFBRSxNQUFNO0lBQ3ZCLFVBQVUsRUFBRSxLQUFLO0dBQ3BCO0VBekJiLEFBMkJZLGdCQTNCSSxDQU1SLFdBQVcsQ0FxQlAsbUJBQW1CLENBQUM7SUFDaEIsU0FBUyxFQUFFLElBQUk7R0FDbEI7RUE3QmIsQUErQlksZ0JBL0JJLENBTVIsV0FBVyxDQXlCUCxZQUFZLENBQUE7SUFDUixLQUFLLEVBQUUsS0FBSztJQUNaLE1BQU0sRUFBRSxJQUFJO0lBQ1osU0FBUyxFQUFFLElBQUk7R0FDbEI7OztBQUlULE1BQU0sQ0FBQyxHQUFHLE1BQU0sU0FBUyxFQUFFLE1BQU07RUF2Q3JDLEFBd0NRLGdCQXhDUSxDQXdDUixXQUFXLENBQUE7SUFDUCxLQUFLLEVBQUUsS0FBSztJQUNaLE1BQU0sRUFBRSxLQUFLO0lBQ2IsVUFBVSxFQUFFLElBQUk7SUFDaEIsZUFBZSxFQUFFLEtBQUs7SUFDdEIsaUJBQWlCLEVBQUUsU0FBUztJQUM1QixhQUFhLEVBQUUsR0FBRztJQUNsQixPQUFPLEVBQUUsTUFBTTtHQXFDbEI7RUFwRlQsQUFpRFksZ0JBakRJLENBd0NSLFdBQVcsQ0FTUCxXQUFXLENBQUE7SUFDUCxRQUFRLEVBQUUsUUFBUTtJQUNsQixLQUFLLEVBQUUsS0FBSztJQUNaLEdBQUcsRUFBRSxLQUFLO0dBQ2I7RUFyRGIsQUF1RFksZ0JBdkRJLENBd0NSLFdBQVcsQ0FlUCxVQUFVLENBQUM7SUFDUCxPQUFPLEVBQUUsSUFBSTtJQUNiLGNBQWMsRUFBRSxNQUFNO0lBQ3RCLFdBQVcsRUFBRSxNQUFNO0dBQ3RCO0VBM0RiLEFBNkRZLGdCQTdESSxDQXdDUixXQUFXLENBcUJQLFVBQVUsQ0FBQztJQUNQLE9BQU8sRUFBRSxDQUFDO0lBQ1YsT0FBTyxFQUFFLElBQUk7SUFDYixjQUFjLEVBQUUsTUFBTTtJQUN0QixXQUFXLEVBQUUsTUFBTTtHQUN0QjtFQWxFYixBQW9FWSxnQkFwRUksQ0F3Q1IsV0FBVyxDQTRCUCxZQUFZLENBQUM7SUFDVCxPQUFPLEVBQUUsSUFBSTtJQUNiLGVBQWUsRUFBRSxNQUFNO0lBQ3ZCLFVBQVUsRUFBRSxLQUFLO0dBQ3BCO0VBeEViLEFBMEVZLGdCQTFFSSxDQXdDUixXQUFXLENBa0NQLG1CQUFtQixDQUFDO0lBQ2hCLFNBQVMsRUFBRSxJQUFJO0dBQ2xCO0VBNUViLEFBOEVZLGdCQTlFSSxDQXdDUixXQUFXLENBc0NQLFlBQVksQ0FBQTtJQUNSLEtBQUssRUFBRSxLQUFLO0lBQ1osTUFBTSxFQUFFLElBQUk7SUFDWixTQUFTLEVBQUUsSUFBSTtHQUNsQiJ9 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
