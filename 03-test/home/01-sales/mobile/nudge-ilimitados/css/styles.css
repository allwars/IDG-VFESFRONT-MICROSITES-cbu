/**
 * Vodafone Reboot Framework: Version 2.2.2. Generation Date: 2020-05-25T11:48:38.861Z
 */

.vfes-ms-content-ilimitados .vfms-nudge {
  width: 100%;
  background-image: url("https://www.vodafone.es/c/statics/imagen/nudge-lineas-adicionaes-datos-ilimitados-mobile.png");
  background-size: cover;
  background-position: bottom;
  background-repeat: no-repeat;
  border-radius: 0.375rem 0.375rem 0 0;
  padding: 0 1.25rem;
  height: 26.375rem;
  position: fixed;
  top: 0;
  z-index: 3;
}

.vfes-ms-content-ilimitados .vfms-nudge p {
  margin-bottom: 0;
}

.vfes-ms-content-ilimitados .vfms-nudge .vfms-close {
  position: absolute;
  right: 1.25rem;
  top: 1.25rem;
}

.vfes-ms-content-ilimitados .vfms-nudge .vfms-title {
  font-size: 1.5rem;
}

.vfes-ms-content-ilimitados .vfms-nudge .vfms-special--size {
  font-size: 1.25rem;
}

.vfes-ms-content-ilimitados .vfms-nudge-itemblock {
  display: block;
  font-size: 2.25rem;
}

.vfes-ms-content-ilimitados .vfms-nudge .vfes-button {
  height: 2.75rem;
  font-size: 1.125rem;
  width: 13.25rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-ilimitados {
    display: flex;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .vfes-ms-content-ilimitados .vfes-layout__item {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 0 auto;
  }
  .vfes-ms-content-ilimitados .vfes-layout {
    padding-top: 1.875rem;
  }
  .vfes-ms-content-ilimitados .vfms-nudge {
    width: 100%;
    height: 25rem;
    background-image: url("https://www.vodafone.es/c/statics/imagen/nudge-lineas-adicionales-datos-ilimitados-tablet.png");
    background-size: cover;
    background-repeat: no-repeat;
    background-position: bottom;
  }
  .vfes-ms-content-ilimitados .vfms-nudge p {
    margin-bottom: 0.625rem;
  }
  .vfes-ms-content-ilimitados .vfms-nudge .vfms-title {
    font-size: 2.125rem;
  }
  .vfes-ms-content-ilimitados .vfms-nudge .vfms-special--size {
    font-size: 1.5rem;
  }
  .vfes-ms-content-ilimitados .vfms-nudge .vfes-button {
    margin-top: 1.25rem;
    height: 2.75rem;
    width: 15.625rem;
    font-size: 1.125rem;
  }
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content-ilimitados {
    display: flex;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .vfes-ms-content-ilimitados .vfms-nudge {
    background-image: url("https://www.vodafone.es/c/statics/imagen/nudge-lineas-adicionales-datos-ilimitados-desktop.png");
    background-size: cover;
    background-repeat: no-repeat;
    background-position: bottom;
  }
  .vfes-ms-content-ilimitados .vfms-nudge .vfms-title {
    font-size: 2.5rem;
  }
  .vfes-ms-content-ilimitados .vfms-nudge .vfms-special--size {
    font-size: 1.75rem;
  }
  .vfes-ms-content-ilimitados .vfms-nudge .vfms-width {
    max-width: 25rem;
    margin: 0 auto;
  }
  .vfes-ms-content-ilimitados .vfms-nudge .vfes-button {
    margin-top: 0.625rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LWlsaW1pdGFkb3N7XG4gICAgLnZmbXMtbnVkZ2V7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vbnVkZ2UtbGluZWFzLWFkaWNpb25hZXMtZGF0b3MtaWxpbWl0YWRvcy1tb2JpbGUucG5nJyk7XG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGJvdHRvbTtcbiAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4IDZweCAwIDA7XG4gICAgICAgIHBhZGRpbmc6IDAgMjBweDtcbiAgICAgICAgaGVpZ2h0OiA0MjJweDtcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHotaW5kZXg6IDM7XG4gICAgICAgIHAge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgfVxuICAgICAgICAudmZtcy1jbG9zZXtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHJpZ2h0OiAyMHB4O1xuICAgICAgICAgICAgdG9wOiAyMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLnZmbXMtdGl0bGUge1xuICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLnZmbXMtc3BlY2lhbC0tc2l6ZSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIH1cblxuICAgICAgICAmLWl0ZW1ibG9ja3tcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgZm9udC1zaXplOiAzNnB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLnZmZXMtYnV0dG9ue1xuICAgICAgICAgICAgaGVpZ2h0OiA0NHB4O1xuICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICAgICAgd2lkdGg6IDIxMnB4O1xuICAgICAgICB9XG5cbiAgICB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cbiAgICAgICAgLnZmZXMtbGF5b3V0X19pdGVtIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICB9XG5cbiAgICAgICAgLnZmZXMtbGF5b3V0IHtcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAzMHB4O1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAudmZtcy1udWRnZXtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiA0MDBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9udWRnZS1saW5lYXMtYWRpY2lvbmFsZXMtZGF0b3MtaWxpbWl0YWRvcy10YWJsZXQucG5nJyk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGJvdHRvbTtcbiAgICAgICAgXG5cbiAgICAgICAgICAgIHAge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAudmZtcy10aXRsZSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAzNHB4O1xuICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgLnZmbXMtc3BlY2lhbC0tc2l6ZSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgLnZmZXMtYnV0dG9ue1xuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA0NHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiAyNTBweDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgIH1cbiAgICB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gICAgICAgIC52Zm1zLW51ZGdle1xuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL251ZGdlLWxpbmVhcy1hZGljaW9uYWxlcy1kYXRvcy1pbGltaXRhZG9zLWRlc2t0b3AucG5nJyk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGJvdHRvbTtcbiAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAudmZtcy10aXRsZSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiA0MHB4O1xuICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgLnZmbXMtc3BlY2lhbC0tc2l6ZSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyOHB4O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAudmZtcy13aWR0aCB7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLnZmZXMtYnV0dG9uIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNDQSxBQUNJLDJCQUR1QixDQUN2QixXQUFXLENBQUE7RUFDUCxLQUFLLEVBQUUsSUFBSTtFQUNYLGdCQUFnQixFQUFFLG1HQUFtRztFQUNySCxlQUFlLEVBQUUsS0FBSztFQUN0QixtQkFBbUIsRUFBRSxNQUFNO0VBQzNCLGlCQUFpQixFQUFFLFNBQVM7RUFDNUIsYUFBYSxFQUFFLFdBQVc7RUFDMUIsT0FBTyxFQUFFLE1BQU07RUFDZixNQUFNLEVBQUUsS0FBSztFQUNiLFFBQVEsRUFBRSxLQUFLO0VBQ2YsR0FBRyxFQUFFLENBQUM7RUFDTixPQUFPLEVBQUUsQ0FBQztDQTZCYjs7QUF6Q0wsQUFhUSwyQkFibUIsQ0FDdkIsV0FBVyxDQVlQLENBQUMsQ0FBQztFQUNFLGFBQWEsRUFBRSxDQUFDO0NBQ25COztBQWZULEFBZ0JRLDJCQWhCbUIsQ0FDdkIsV0FBVyxDQWVQLFdBQVcsQ0FBQTtFQUNQLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLEtBQUssRUFBRSxJQUFJO0VBQ1gsR0FBRyxFQUFFLElBQUk7Q0FDWjs7QUFwQlQsQUFzQlEsMkJBdEJtQixDQUN2QixXQUFXLENBcUJQLFdBQVcsQ0FBQztFQUNSLFNBQVMsRUFBRSxJQUFJO0NBQ2xCOztBQXhCVCxBQTBCUSwyQkExQm1CLENBQ3ZCLFdBQVcsQ0F5QlAsbUJBQW1CLENBQUM7RUFDaEIsU0FBUyxFQUFFLElBQUk7Q0FDbEI7O0FBNUJULEFBOEJRLDJCQTlCbUIsQ0E4QmxCLHFCQUFVLENBQUE7RUFDUCxPQUFPLEVBQUUsS0FBSztFQUNkLFNBQVMsRUFBRSxJQUFJO0NBQ2xCOztBQWpDVCxBQW1DUSwyQkFuQ21CLENBQ3ZCLFdBQVcsQ0FrQ1AsWUFBWSxDQUFBO0VBQ1IsTUFBTSxFQUFFLElBQUk7RUFDWixTQUFTLEVBQUUsSUFBSTtFQUNmLEtBQUssRUFBRSxLQUFLO0NBQ2Y7O0FBR0wsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQTFDdkMsQUFBQSwyQkFBMkIsQ0FBQTtJQTJDbkIsT0FBTyxFQUFFLElBQUk7SUFDYixPQUFPLEVBQUUsSUFBSTtJQUNiLFdBQVcsRUFBRSxNQUFNO0lBQ25CLGVBQWUsRUFBRSxNQUFNO0dBeUU5QjtFQXZIRCxBQWdEUSwyQkFoRG1CLENBZ0RuQixrQkFBa0IsQ0FBQztJQUNmLE9BQU8sRUFBRSxJQUFJO0lBQ2IsY0FBYyxFQUFFLE1BQU07SUFDdEIsV0FBVyxFQUFFLE1BQU07SUFDbkIsTUFBTSxFQUFFLE1BQU07R0FDakI7RUFyRFQsQUF1RFEsMkJBdkRtQixDQXVEbkIsWUFBWSxDQUFDO0lBQ1QsV0FBVyxFQUFFLElBQUk7R0FDcEI7RUF6RFQsQUEyRFEsMkJBM0RtQixDQTJEbkIsV0FBVyxDQUFBO0lBQ1AsS0FBSyxFQUFFLElBQUk7SUFDWCxNQUFNLEVBQUUsS0FBSztJQUNiLGdCQUFnQixFQUFFLG9HQUFvRztJQUN0SCxlQUFlLEVBQUUsS0FBSztJQUN0QixpQkFBaUIsRUFBRSxTQUFTO0lBQzVCLG1CQUFtQixFQUFFLE1BQU07R0FxQjlCO0VBdEZULEFBb0VZLDJCQXBFZSxDQTJEbkIsV0FBVyxDQVNQLENBQUMsQ0FBQztJQUNFLGFBQWEsRUFBRSxJQUFJO0dBQ3RCO0VBdEViLEFBdUVZLDJCQXZFZSxDQTJEbkIsV0FBVyxDQVlQLFdBQVcsQ0FBQztJQUNSLFNBQVMsRUFBRSxJQUFJO0dBQ2xCO0VBekViLEFBMkVZLDJCQTNFZSxDQTJEbkIsV0FBVyxDQWdCUCxtQkFBbUIsQ0FBQztJQUNoQixTQUFTLEVBQUUsSUFBSTtHQUNsQjtFQTdFYixBQStFWSwyQkEvRWUsQ0EyRG5CLFdBQVcsQ0FvQlAsWUFBWSxDQUFBO0lBQ1IsVUFBVSxFQUFFLElBQUk7SUFDaEIsTUFBTSxFQUFFLElBQUk7SUFDWixLQUFLLEVBQUUsS0FBSztJQUNaLFNBQVMsRUFBRSxJQUFJO0dBQ2xCOzs7QUFJVCxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxNQUFNO0VBeEZ4QyxBQUFBLDJCQUEyQixDQUFBO0lBeUZuQixPQUFPLEVBQUUsSUFBSTtJQUNiLE9BQU8sRUFBRSxJQUFJO0lBQ2IsV0FBVyxFQUFFLE1BQU07SUFDbkIsZUFBZSxFQUFFLE1BQU07R0EyQjlCO0VBdkhELEFBOEZRLDJCQTlGbUIsQ0E4Rm5CLFdBQVcsQ0FBQTtJQUNQLGdCQUFnQixFQUFFLHFHQUFxRztJQUN2SCxlQUFlLEVBQUUsS0FBSztJQUN0QixpQkFBaUIsRUFBRSxTQUFTO0lBQzVCLG1CQUFtQixFQUFFLE1BQU07R0FtQjlCO0VBckhULEFBcUdZLDJCQXJHZSxDQThGbkIsV0FBVyxDQU9QLFdBQVcsQ0FBQztJQUNSLFNBQVMsRUFBRSxJQUFJO0dBQ2xCO0VBdkdiLEFBeUdZLDJCQXpHZSxDQThGbkIsV0FBVyxDQVdQLG1CQUFtQixDQUFDO0lBQ2hCLFNBQVMsRUFBRSxJQUFJO0dBQ2xCO0VBM0diLEFBNkdZLDJCQTdHZSxDQThGbkIsV0FBVyxDQWVQLFdBQVcsQ0FBQztJQUNSLFNBQVMsRUFBRSxLQUFLO0lBQ2hCLE1BQU0sRUFBRSxNQUFNO0dBQ2pCO0VBaEhiLEFBa0hZLDJCQWxIZSxDQThGbkIsV0FBVyxDQW9CUCxZQUFZLENBQUM7SUFDVCxVQUFVLEVBQUUsSUFBSTtHQUNuQiJ9 */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LWlsaW1pdGFkb3N7XG4gICAgLnZmbXMtbnVkZ2V7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vbnVkZ2UtbGluZWFzLWFkaWNpb25hZXMtZGF0b3MtaWxpbWl0YWRvcy1tb2JpbGUucG5nJyk7XG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGJvdHRvbTtcbiAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4IDZweCAwIDA7XG4gICAgICAgIHBhZGRpbmc6IDAgMjBweDtcbiAgICAgICAgaGVpZ2h0OiA0MjJweDtcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHotaW5kZXg6IDM7XG4gICAgICAgIHAge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgfVxuICAgICAgICAudmZtcy1jbG9zZXtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHJpZ2h0OiAyMHB4O1xuICAgICAgICAgICAgdG9wOiAyMHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLnZmbXMtdGl0bGUge1xuICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLnZmbXMtc3BlY2lhbC0tc2l6ZSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIH1cblxuICAgICAgICAmLWl0ZW1ibG9ja3tcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgZm9udC1zaXplOiAzNnB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLnZmZXMtYnV0dG9ue1xuICAgICAgICAgICAgaGVpZ2h0OiA0NHB4O1xuICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICAgICAgd2lkdGg6IDIxMnB4O1xuICAgICAgICB9XG5cbiAgICB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cbiAgICAgICAgLnZmZXMtbGF5b3V0X19pdGVtIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICB9XG5cbiAgICAgICAgLnZmZXMtbGF5b3V0IHtcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAzMHB4O1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAudmZtcy1udWRnZXtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiA0MDBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9udWRnZS1saW5lYXMtYWRpY2lvbmFsZXMtZGF0b3MtaWxpbWl0YWRvcy10YWJsZXQucG5nJyk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGJvdHRvbTtcbiAgICAgICAgXG5cbiAgICAgICAgICAgIHAge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAudmZtcy10aXRsZSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAzNHB4O1xuICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgLnZmbXMtc3BlY2lhbC0tc2l6ZSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgLnZmZXMtYnV0dG9ue1xuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA0NHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiAyNTBweDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgIH1cbiAgICB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gICAgICAgIC52Zm1zLW51ZGdle1xuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL251ZGdlLWxpbmVhcy1hZGljaW9uYWxlcy1kYXRvcy1pbGltaXRhZG9zLWRlc2t0b3AucG5nJyk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGJvdHRvbTtcbiAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAudmZtcy10aXRsZSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiA0MHB4O1xuICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgLnZmbXMtc3BlY2lhbC0tc2l6ZSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyOHB4O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAudmZtcy13aWR0aCB7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLnZmZXMtYnV0dG9uIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNDQSxBQUNJLDJCQUR1QixDQUN2QixXQUFXLENBQUE7RUFDUCxLQUFLLEVBQUUsSUFBSTtFQUNYLGdCQUFnQixFQUFFLG1HQUFtRztFQUNySCxlQUFlLEVBQUUsS0FBSztFQUN0QixtQkFBbUIsRUFBRSxNQUFNO0VBQzNCLGlCQUFpQixFQUFFLFNBQVM7RUFDNUIsYUFBYSxFQUFFLFdBQVc7RUFDMUIsT0FBTyxFQUFFLE1BQU07RUFDZixNQUFNLEVBQUUsS0FBSztFQUNiLFFBQVEsRUFBRSxLQUFLO0VBQ2YsR0FBRyxFQUFFLENBQUM7RUFDTixPQUFPLEVBQUUsQ0FBQztDQTZCYjs7QUF6Q0wsQUFhUSwyQkFibUIsQ0FDdkIsV0FBVyxDQVlQLENBQUMsQ0FBQztFQUNFLGFBQWEsRUFBRSxDQUFDO0NBQ25C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 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
