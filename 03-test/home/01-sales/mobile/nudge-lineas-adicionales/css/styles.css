/**
 * Vodafone Reboot Framework: Version 2.3.3. Generation Date: 2020-08-04T07:31:06.729Z
 */

.vfes-ms-content-adicionales {
  background-image: url("https://www.vodafone.es/c/statics/imagen/bg-resp-nudge-lineas-adicionales.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  padding-top: 0;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales {
    background-image: url("https://www.vodafone.es/c/statics/imagen/bg-tablet-nudge-lineas-adicionales.png");
    padding-top: 3.5rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-adicionales {
    background-image: url("https://www.vodafone.es/c/statics/imagen/bg-desktop-nudge-lineas-adicionales.png");
    padding-top: 3.75rem;
  }
}

.vfes-ms-content-adicionales .vfes-colours--dark-grey {
  color: #333;
}

.vfes-ms-content-adicionales .vfms-title {
  font-size: 1.75rem;
  text-align: center;
  margin-top: 4.375rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales .vfms-title {
    font-size: 2.3125rem;
    text-align: left;
    margin-top: 0;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-adicionales .vfms-title {
    font-size: 3.1875rem;
  }
}

.vfes-ms-content-adicionales .vfms-title__max {
  font-size: 2rem;
  text-align: center;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales .vfms-title__max {
    font-size: 2.875rem;
    text-align: left;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-adicionales .vfms-title__max {
    font-size: 3.6875rem;
  }
}

.vfes-ms-content-adicionales .vfes-align--center {
  text-align: center;
}

.vfes-ms-content-adicionales .vfes-button {
  text-align: center;
  border: 0;
  text-decoration: none;
  cursor: pointer;
  display: inline-block;
  box-sizing: border-box;
  border-radius: .375rem;
  line-height: 1.25;
  width: 100%;
  margin-right: 0;
  margin-left: 0;
  padding: .5625rem .875rem .6875rem;
}

.vfes-ms-content-adicionales .vfes-button:visited {
  color: #fff;
}

.vfes-ms-content-adicionales .vfes-button--primary {
  font-size: 1.25rem;
  background-color: #e60000;
  color: #fff;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales .vfes-button--primary {
    min-width: 14.25rem;
  }
}

.vfes-ms-content-adicionales .vfes-button--secondary {
  font-size: 1.25rem;
  background-color: #666;
  color: #fff;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-adicionales .vfes-button--secondary {
    background-color: transparent;
    color: #333;
    padding-left: 0;
    text-align: left;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales .vfes-flex__direction--row-column-sm {
    flex-direction: row;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales .vfms-tel__text {
    min-width: 7.5rem;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales .vfms-button__align {
    align-items: center;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales .vfms-item__tablet {
    min-height: 15.625rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-adicionales .vfms-bold__desktop {
    font-family: VodafoneRegularBold,Helvetica,Arial,sans-serif;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales .vfms-hide__tabletonly {
    display: none;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-adicionales .vfms-hide__tabletonly {
    display: block;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
