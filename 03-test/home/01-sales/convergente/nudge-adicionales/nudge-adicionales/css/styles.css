/**
 * Vodafone Reboot Framework: Version 15.5.0. Generation Date: 2020-01-08T11:48:24.936Z
 */

.vfes-ms-content .vfms-banner {
  background-image: url("https://www.vodafone.es/c/statics/imagen/Fondo_lineas_adicionales_mobile.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  height: 31.25rem;
}

.vfes-ms-content .vfms-banner-content {
  padding: 2.5rem 1.25rem 1.25rem 1.25rem;
}

.vfes-ms-content .vfms-banner-content .vfms-text-block {
  display: block;
  font-size: 1.375rem;
}

.vfes-ms-content .vfms-banner-content .vfms-text__size {
  font-size: 1.5rem;
}

.vfes-ms-content .vfms-banner-content .vfms-text-itemblock {
  font-size: 2.25rem;
}

.vfes-ms-content .vfms-banner-content .vfms-text__width {
  max-width: 16.875rem;
  margin: 0 auto;
}

.vfes-ms-content .vfms-banner-content .vfms-button {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-align: center;
          align-items: center;
}

.vfes-ms-content .vfms-banner-content .vfms-button .vfes-button {
  margin-bottom: 0.625rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-banner {
    background-image: url("https://www.vodafone.es/c/statics/imagen/Fondo_lineas_adicionales_tablet.jpg");
  }
  .vfes-ms-content .vfms-banner-content .vfms-button {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
    -webkit-box-pack: center;
            justify-content: center;
  }
  .vfes-ms-content .vfms-banner-content .vfms-button .vfms-button__size {
    width: 19.5625rem;
  }
  .vfes-ms-content .vfms-banner-content .vfms-button .vfes-button {
    margin-right: 0.625rem;
  }
  .vfes-ms-content .vfms-banner-content .vfms-text-block {
    display: block;
    font-size: 2.875rem;
  }
  .vfes-ms-content .vfms-banner-content .vfms-text__size {
    font-size: 2.125rem;
  }
  .vfes-ms-content .vfms-banner-content .vfms-text-itemblock {
    font-size: 2.5rem;
  }
  .vfes-ms-content .vfms-banner-content .vfms-text__width {
    max-width: 36.25rem;
    margin: 0 auto;
  }
  .vfes-ms-content .vfms-banner-content .vfms-main__text {
    font-size: 1.75rem;
    font-family: "VodafoneLight";
    font-weight: 400;
    max-width: 36.25rem;
    margin: 0 auto;
  }
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vfms-banner {
    background-image: url("https://www.vodafone.es/c/statics/imagen/Fondo_lineas_adicionales_desktop.jpg");
  }
  .vfes-ms-content .vfms-banner-content {
    padding: 1.25rem 0;
  }
  .vfes-ms-content .vfms-banner-content .vfms-text-block {
    display: block;
    font-size: 2.1875rem;
  }
  .vfes-ms-content .vfms-banner-content .vfms-text-margin {
    margin-bottom: 0;
  }
  .vfes-ms-content .vfms-banner-content .vfms-text__size {
    font-size: 2.125rem;
  }
  .vfes-ms-content .vfms-banner-content .vfms-text__width {
    max-width: none;
  }
  .vfes-ms-content .vfms-banner-content .vfms-main__text {
    font-size: 1.75rem;
    max-width: none;
    margin-bottom: 0;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50e1xuICAgIC52Zm1zLWJhbm5lcntcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL0ZvbmRvX2xpbmVhc19hZGljaW9uYWxlc19tb2JpbGUuanBnJyk7XG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICAgIGhlaWdodDogNTAwcHg7XG5cbiAgICAgICAgJi1jb250ZW50e1xuICAgICAgICAgICAgcGFkZGluZzogNDBweCAyMHB4IDIwcHggMjBweDtcblxuICAgICAgICAgICAgLnZmbXMtdGV4dHtcblxuICAgICAgICAgICAgICAgICYtYmxvY2t7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDIycHg7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgJl9fc2l6ZSB7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgJi1pdGVtYmxvY2t7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMzZweDtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAmX193aWR0aCB7XG4gICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDogMjcwcHg7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC52ZmVzLXRpdGxle1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLnZmbXMtYnV0dG9ue1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC52ZmVzLWJ1dHRvbntcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH1cbiAgICBcblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgIC52Zm1zLWJhbm5lcntcbiAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9Gb25kb19saW5lYXNfYWRpY2lvbmFsZXNfdGFibGV0LmpwZycpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmLWNvbnRlbnR7XG4gICAgICAgICAgICAgICAgLnZmbXMtYnV0dG9ue1xuICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC52Zm1zLWJ1dHRvbl9fc2l6ZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMzEzcHg7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAudmZlcy1idXR0b257XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnZmbXMtdGV4dHtcblxuICAgICAgICAgICAgICAgICAgICAmLWJsb2Nre1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDQ2cHg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICBcbiAgICAgICAgICAgICAgICAgICAgJl9fc2l6ZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDM0cHg7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAmLWl0ZW1ibG9ja3tcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNDBweDtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICZfX3dpZHRoIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDogNTgwcHg7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudmZtcy1tYWluX190ZXh0IHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAyOHB4O1xuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJWb2RhZm9uZUxpZ2h0XCI7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDogNTgwcHg7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICAgIFxuICAgIH1cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAgICAgICAudmZtcy1iYW5uZXJ7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vRm9uZG9fbGluZWFzX2FkaWNpb25hbGVzX2Rlc2t0b3AuanBnJyk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICYtY29udGVudHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAyMHB4IDA7XG4gICAgICAgICAgICAgICAgLnZmbXMtdGV4dHtcblxuICAgICAgICAgICAgICAgICAgICAmLWJsb2Nre1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDM1cHg7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAmLW1hcmdpbiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAgICAgICAgICZfX3NpemUge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAzNHB4O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICZfX3dpZHRoIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudmZtcy1tYWluX190ZXh0IHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAyOHB4O1xuICAgICAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgfVxuXG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0NBLEFBQ0ksZ0JBRFksQ0FDWixZQUFZLENBQUE7RUFDUixnQkFBZ0IsRUFBRSxtRkFBbUY7RUFDckcsaUJBQWlCLEVBQUUsU0FBUztFQUM1QixlQUFlLEVBQUUsS0FBSztFQUN0QixNQUFNLEVBQUUsS0FBSztDQXdDaEI7O0FBN0NMLEFBT1EsZ0JBUFEsQ0FPUCxvQkFBUSxDQUFBO0VBQ0wsT0FBTyxFQUFFLG1CQUFtQjtDQW1DL0I7O0FBM0NULEFBWWdCLGdCQVpBLENBT1Asb0JBQVEsQ0FLQSxnQkFBTSxDQUFBO0VBQ0gsT0FBTyxFQUFFLEtBQUs7RUFDZCxTQUFTLEVBQUUsSUFBSTtDQUNsQjs7QUFmakIsQUFpQmdCLGdCQWpCQSxDQU9QLG9CQUFRLENBVUEsZ0JBQU0sQ0FBQztFQUNKLFNBQVMsRUFBRSxJQUFJO0NBQ2xCOztBQW5CakIsQUFvQmdCLGdCQXBCQSxDQU9QLG9CQUFRLENBYUEsb0JBQVUsQ0FBQTtFQUNQLFNBQVMsRUFBRSxJQUFJO0NBQ2xCOztBQXRCakIsQUF3QmdCLGdCQXhCQSxDQU9QLG9CQUFRLENBaUJBLGlCQUFPLENBQUM7RUFDTCxTQUFTLEVBQUUsS0FBSztFQUNoQixNQUFNLEVBQUUsTUFBTTtDQUNqQjs7QUEzQmpCLEFBNkJnQixnQkE3QkEsQ0FPUCxvQkFBUSxDQUdMLFVBQVUsQ0FtQk4sV0FBVyxDQUFBO0VBQ1AsYUFBYSxFQUFFLElBQUk7Q0FDdEI7O0FBL0JqQixBQWtDWSxnQkFsQ0ksQ0FPUCxvQkFBUSxDQTJCTCxZQUFZLENBQUE7RUFDUixPQUFPLEVBQUUsSUFBSTtFQUNiLGNBQWMsRUFB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 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
