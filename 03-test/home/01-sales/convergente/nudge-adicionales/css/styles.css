/**
 * Vodafone Reboot Framework: Version 2.12.0. Generation Date: 2021-02-19T12:03:17.727Z
 */

.vfes-ms-content .vfms-banner {
  background-image: url("https://www.vodafone.es/c/statics/imagen/Fondo_lineas_adicionales_mobile.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  height: 31.25rem;
}

.vfes-ms-content .vfms-banner-content {
  padding: 2.5rem 1.25rem 1.25rem 1.25rem;
}

.vfes-ms-content .vfms-banner-content .vfms-text-block {
  display: block;
  font-size: 1.375rem;
}

.vfes-ms-content .vfms-banner-content .vfms-text__size {
  font-size: 1.5rem;
}

.vfes-ms-content .vfms-banner-content .vfms-text-itemblock {
  font-size: 2.25rem;
}

.vfes-ms-content .vfms-banner-content .vfms-text__width {
  max-width: 16.875rem;
  margin: 0 auto;
}

.vfes-ms-content .vfms-banner-content .vfms-button {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.vfes-ms-content .vfms-banner-content .vfms-button .vfes-button {
  margin-bottom: 0.625rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-banner {
    background-image: url("https://www.vodafone.es/c/statics/imagen/Fondo_lineas_adicionales_tablet.jpg");
  }
  .vfes-ms-content .vfms-banner-content .vfms-button {
    flex-direction: row;
    justify-content: center;
  }
  .vfes-ms-content .vfms-banner-content .vfms-button .vfms-button__size {
    width: 19.5625rem;
  }
  .vfes-ms-content .vfms-banner-content .vfms-button .vfes-button {
    margin-right: 0.625rem;
  }
  .vfes-ms-content .vfms-banner-content .vfms-text-block {
    display: block;
    font-size: 2.875rem;
  }
  .vfes-ms-content .vfms-banner-content .vfms-text__size {
    font-size: 2.125rem;
  }
  .vfes-ms-content .vfms-banner-content .vfms-text-itemblock {
    font-size: 2.5rem;
  }
  .vfes-ms-content .vfms-banner-content .vfms-text__width {
    max-width: 36.25rem;
    margin: 0 auto;
  }
  .vfes-ms-content .vfms-banner-content .vfms-main__text {
    font-size: 1.75rem;
    font-family: "VodafoneLight";
    font-weight: 400;
    max-width: 36.25rem;
    margin: 0 auto;
  }
}

@media screen and (min-width: 64rem) {
  .vfes-ms-content .vfms-banner {
    background-image: url("https://www.vodafone.es/c/statics/imagen/Fondo_lineas_adicionales_desktop.jpg");
  }
  .vfes-ms-content .vfms-banner-content {
    padding: 1.25rem 0;
  }
  .vfes-ms-content .vfms-banner-content .vfms-text-block {
    display: block;
    font-size: 2.1875rem;
  }
  .vfes-ms-content .vfms-banner-content .vfms-text-margin {
    margin-bottom: 0;
  }
  .vfes-ms-content .vfms-banner-content .vfms-text__size {
    font-size: 2.125rem;
  }
  .vfes-ms-content .vfms-banner-content .vfms-text__width {
    max-width: none;
  }
  .vfes-ms-content .vfms-banner-content .vfms-main__text {
    font-size: 1.75rem;
    max-width: none;
    margin-bottom: 0;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
