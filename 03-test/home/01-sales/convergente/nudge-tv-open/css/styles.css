/**
 * Vodafone Reboot Framework: Version 2.2.2. Generation Date: 2020-05-25T09:18:38.556Z
 */

.vfms-banner {
  background-image: url("https://www.vodafone.es/c/statics/imagen/bg-mobile640.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  background-color: black;
  height: 28.125rem;
  background-position: center;
}

.vfms-title3 {
  padding-top: 0;
  padding-bottom: 0;
  color: #ffffff !important;
}

.vfms-img--offer {
  height: 100%;
  width: 50%;
}

.vfms-img-open {
  margin-top: 0.9375rem;
  -webkit-filter: drop-shadow(0.3125rem 0.3125rem 1.875rem red);
          filter: drop-shadow(0.3125rem 0.3125rem 1.875rem red);
  -webkit-animation: float 5s ease-in-out infinite;
          animation: float 5s ease-in-out infinite;
}

.vfms-img-logos {
  padding-right: 0.3125rem;
  padding-left: 0.3125rem;
}

.vfms-banner-content-text {
  text-align: center;
  margin-left: 0;
  margin-top: 1.875rem;
}

@media screen and (min-width: 40rem) {
  .vfms-banner {
    background-image: url("https://www.vodafone.es/c/statics/imagen/bg-tablet.jpg");
    text-align: left;
    background-position: center;
    background-color: black;
    background-size: cover;
  }
  .vfms-banner-content-text {
    margin-left: 10%;
    text-align: left;
    margin-top: 0;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfms-banner {
    background-image: url("https://www.vodafone.es/c/statics/imagen/bg-desktop2.jpg");
    background-color: black;
    background-size: cover;
    background-position: center;
    height: 21.875rem;
  }
  .vfms-img-open {
    max-width: 37.5rem;
  }
  .vfms-banner-content-text {
    margin-left: 10%;
    text-align: center;
  }
}

@-webkit-keyframes float {
  0% {
    -webkit-filter: drop-shadow(0.3125rem 0.3125rem 1.875rem red);
    filter: drop-shadow(0.3125rem 0.3125rem 1.875rem red);
  }
  50% {
    -webkit-filter: drop-shadow(0.3125rem 0.3125rem 1.875rem red);
    filter: drop-shadow(0.3125rem 0.3125rem 0.9375rem red);
  }
  100% {
    -webkit-filter: drop-shadow(0.3125rem 0.3125rem 1.875rem red);
    filter: drop-shadow(0.3125rem 0.3125rem 1.875rem red);
  }
}

@keyframes float {
  0% {
    -webkit-filter: drop-shadow(0.3125rem 0.3125rem 1.875rem red);
    filter: drop-shadow(0.3125rem 0.3125rem 1.875rem red);
  }
  50% {
    -webkit-filter: drop-shadow(0.3125rem 0.3125rem 1.875rem red);
    filter: drop-shadow(0.3125rem 0.3125rem 0.9375rem red);
  }
  100% {
    -webkit-filter: drop-shadow(0.3125rem 0.3125rem 1.875rem red);
    filter: drop-shadow(0.3125rem 0.3125rem 1.875rem red);
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi52Zm1zLWJhbm5lcntcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iZy1tb2JpbGU2NDAuanBnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgaGVpZ2h0OiA0NTBweDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xufVxuLnZmbXMtdGl0bGUze1xuICBwYWRkaW5nLXRvcDogMDtcbiAgcGFkZGluZy1ib3R0b206IDA7XG4gIGNvbG9yOiAjZmZmZmZmIWltcG9ydGFudDtcbn1cblxuLnZmbXMtaW1nLS1vZmZlcntcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogNTAlO1xufVxuLnZmbXMtaW1nLW9wZW57XG4gIG1hcmdpbi10b3A6IDE1cHg7XG4gIGZpbHRlcjogZHJvcC1zaGFkb3coNXB4IDVweCAzMHB4IHJlZCk7XG4gIGFuaW1hdGlvbjogZmxvYXQgNXMgZWFzZS1pbi1vdXQgaW5maW5pdGU7XG59XG4udmZtcy1pbWctbG9nb3N7XG4gIHBhZGRpbmctcmlnaHQ6IDVweDtcbiAgcGFkZGluZy1sZWZ0OjVweDtcblxufVxuXG4udmZtcy1iYW5uZXItY29udGVudC10ZXh0e1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBtYXJnaW4tdG9wOiAzMHB4O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAudmZtcy1iYW5uZXIge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmctdGFibGV0LmpwZ1wiKTtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICB9XG4gIC52Zm1zLWJhbm5lci1jb250ZW50LXRleHR7XG4gICAgbWFyZ2luLWxlZnQ6IDEwJTtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIG1hcmdpbi10b3A6IDA7XG4gIH0gIFxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgLnZmbXMtYmFubmVyIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL2JnLWRlc2t0b3AyLmpwZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBoZWlnaHQ6IDM1MHB4O1xuICB9XG5cbiAgLnZmbXMtaW1nLW9wZW57XG4gICAgbWF4LXdpZHRoOiA2MDBweDtcbiAgfVxuICAudmZtcy1iYW5uZXItY29udGVudC10ZXh0e1xuICAgIG1hcmdpbi1sZWZ0OiAxMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9ICBcbn1cblxuQGtleWZyYW1lcyBmbG9hdCB7XG4gIDAlIHtcbiAgICAtd2Via2l0LWZpbHRlcjogZHJvcC1zaGFkb3coNXB4IDVweCAzMHB4IHJlZCk7XG4gICAgZmlsdGVyOiBkcm9wLXNoYWRvdyg1cHggNXB4IDMwcHggcmVkKTtcbiAgXG4gIH1cbiAgNTAlIHtcblxuICAgIC13ZWJraXQtZmlsdGVyOiBkcm9wLXNoYWRvdyg1cHggNXB4IDMwcHggcmVkKTtcbiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDVweCA1cHggMTVweCByZWQpO1xuICBcbiAgfVxuICAxMDAlIHtcbiAgICAtd2Via2l0LWZpbHRlcjogZHJvcC1zaGFkb3coNXB4IDVweCAzMHB4IHJlZCk7XG4gICAgZmlsdGVyOiBkcm9wLXNoYWRvdyg1cHggNXB4IDMwcHggcmVkKTtcbiBcbiAgfVxufVxuXG5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNBQSxBQUFBLFlBQVksQ0FBQTtFQUNWLGdCQUFnQixFQUFFLGdFQUFnRTtFQUNsRixpQkFBaUIsRUFBRSxTQUFTO0VBQzVCLGVBQWUsRUFBRSxLQUFLO0VBQ3RCLGdCQUFnQixFQUFFLEtBQUs7RUFDdkIsTUFBTSxFQUFFLEtBQUs7RUFDYixtQkFBbUIsRUFBRSxNQUFNO0NBQzVCOztBQUNELEFBQUEsWUFBWSxDQUFBO0VBQ1YsV0FBVyxFQUFFLENBQUM7RUFDZCxjQUFjLEVBQUUsQ0FBQztFQUNqQixLQUFLLEVBQUUsT0FBTyxDQUFBLFVBQVU7Q0FDekI7O0FBRUQsQUFBQSxnQkFBZ0IsQ0FBQTtFQUNkLE1BQU0sRUFBRSxJQUFJO0VBQ1osS0FBSyxFQUFFLEdBQUc7Q0FDWDs7QUFDRCxBQUFBLGNBQWMsQ0FBQTtFQUNaLFVBQVUsRUFBRSxJQUFJO0VBQ2hCLE1BQU0sRUFBRSw2QkFBNkI7RUFDckMsU0FBUyxFQUFFLDZCQUE2QjtDQUN6Qzs7QUFDRCxBQUFBLGVBQWUsQ0FBQTtFQUNiLGFBQWEsRUFBRSxHQUFHO0VBQ2xCLFlBQVksRUFBQyxHQUFHO0NBRWpCOztBQUVELEFBQUEseUJBQXlCLENBQUE7RUFDdkIsVUFBVSxFQUFFLE1BQU07RUFDbEIsV0FBVyxFQUFFLENBQUM7RUFDZCxVQUFVLEVBQUUsSUFBSTtDQUNqQjs7QUFFRCxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBQ2pDLEFBQUEsWUFBWSxDQUFDO0lBQ1gsZ0JBQWdCLEVBQUUsNkRBQTZEO0lBQy9FLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLG1CQUFtQixFQUFFLE1BQU07SUFDM0IsZ0JBQWdCLEVBQUUsS0FBSztJQUN2QixlQUFlLEVBQUUsS0FBSztHQUN2QjtFQUNELEFBQUEseUJBQXlCLENBQUE7SUFDdkIsV0FBVyxFQUFFLEdBQUc7SUFDaEIsVUFBVSxFQUFFLElBQUk7SUFDaEIsVUFBVSxFQUFFLENBQUM7R0FDZDs7O0FBRUgsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQUNqQyxBQUFBLFlBQVksQ0FBQztJQUNYLGdCQUFnQixFQUFFLCtEQUErRDtJQUNqRixnQkFBZ0IsRUFBRSxLQUFLO0lBQ3ZCLGVBQWUsRUFBRSxLQUFLO0lBQ3RCLG1CQUFtQixFQUFFLE1BQU07SUFDM0IsTUFBTSxFQUFFLEtBQUs7R0FDZDtFQUVELEFBQUEsY0FBYyxDQUFBO0lBQ1osU0FBUyxFQUFFLEtBQUs7R0FDakI7RUFDRCxBQUFBLHlCQUF5QixDQUFBO0lBQ3ZCLFdBQVcsRUFBRSxHQUFHO0lBQ2hCLFVBQVUsRUFBRSxNQUFNO0dBQ25COzs7QUFHSCxVQUFVLENBQVYsS0FBVTtFQUNSLEVBQUU7SUFDQSxjQUFjLEVBQUUsNkJBQTZCO0lBQzdDLE1BQU0sRUFBRSw2QkFBNkI7O0VBR3ZDLEdBQUc7SUFFRCxjQUFjLEVBQUUsNkJBQTZCO0lBQzdDLE1BQU0sRUFBRSw2QkFBNkI7O0VBR3ZDLElBQUk7SUFDRixjQUFjLEVBQUUsNkJBQTZCO0lBQzdDLE1BQU0sRUFBRSw2QkFBNkIifQ== */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi52Zm1zLWJhbm5lcntcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iZy1tb2JpbGU2NDAuanBnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgaGVpZ2h0OiA0NTBweDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xufVxuLnZmbXMtdGl0bGUze1xuICBwYWRkaW5nLXRvcDogMDtcbiAgcGFkZGluZy1ib3R0b206IDA7XG4gIGNvbG9yOiAjZmZmZmZmIWltcG9ydGFudDtcbn1cblxuLnZmbXMtaW1nLS1vZmZlcntcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogNTAlO1xufVxuLnZmbXMtaW1nLW9wZW57XG4gIG1hcmdpbi10b3A6IDE1cHg7XG4gIGZpbHRlcjogZHJvcC1zaGFkb3coNXB4IDVweCAzMHB4IHJlZCk7XG4gIGFuaW1hdGlvbjogZmxvYXQgNXMgZWFzZS1pbi1vdXQgaW5maW5pdGU7XG59XG4udmZtcy1pbWctbG9nb3N7XG4gIHBhZGRpbmctcmlnaHQ6IDVweDtcbiAgcGFkZGluZy1sZWZ0OjVweDtcblxufVxuXG4udmZtcy1iYW5uZXItY29udGVudC10ZXh0e1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBtYXJnaW4tdG9wOiAzMHB4O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAudmZtcy1iYW5uZXIge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmctdGFibGV0LmpwZ1wiKTtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICB9XG4gIC52Zm1zLWJhbm5lci1jb250ZW50LXRleHR7XG4gICAgbWFyZ2luLWxlZnQ6IDEwJTtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIG1hcmdpbi10b3A6IDA7XG4gIH0gIFxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgLnZmbXMtYmFubmVyIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL2JnLWRlc2t0b3AyLmpwZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBoZWlnaHQ6IDM1MHB4O1xuICB9XG5cbiAgLnZmbXMtaW1nLW9wZW57XG4gICAgbWF4LXdpZHRoOiA2MDBweDtcbiAgfVxuICAudmZtcy1iYW5uZXItY29udGVudC10ZXh0e1xuICAgIG1hcmdpbi1sZWZ0OiAxMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9ICBcbn1cblxuQGtleWZyYW1lcyBmbG9hdCB7XG4gIDAlIHtcbiAgICAtd2Via2l0LWZpbHRlcjogZHJvcC1zaGFkb3coNXB4IDVweCAzMHB4IHJlZCk7XG4gICAgZmlsdGVyOiBkcm9wLXNoYWRvdyg1cHggNXB4IDMwcHggcmVkKTtcbiAgXG4gIH1cbiAgNTAlIHtcblxuICAgIC13ZWJraXQtZmlsdGVyOiBkcm9wLXNoYWRvdyg1cHggNXB4IDMwcHggcmVkKTtcbiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDVweCA1cHggMTVweCByZWQpO1xuICBcbiAgfVxuICAxMDAlIHtcbiAgICAtd2Via2l0LWZpbHRlcjogZHJvcC1zaGFkb3coNXB4IDVweCAzMHB4IHJlZCk7XG4gICAgZmlsdGVyOiBkcm9wLXNoYWRvdyg1cHggNXB4IDMwcHggcmVkKTtcbiBcbiAgfVxufVxuXG5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNBQSxBQUFBLFlBQVksQ0FBQTtFQUNWLGdCQUFnQixFQUFFLGdFQUFnRTtFQUNsRixpQkFBaUIsRUFBRSxTQUFTO0VBQzVCLGVBQWUsRUFBRSxLQUFLO0VBQ3RCLGdCQUFnQixFQUFFLEtBQUs7RUFDdkIsTUFBTSxFQUFFLEtBQUs7RUFDYixtQkFBbUIsRUFBRSxNQUFNO0NBQzVCOztBQUNELEFBQUEsWUFBWSxDQUFBO0VBQ1YsV0FBVyxFQUFFLENBQUM7RUFDZCxjQUFjLEVBQUUsQ0FBQztFQUNqQixLQUFLLEVBQUUsT0FBTyxDQUFBLFVBQVU7Q0FDekI7O0FBRUQsQUFBQSxnQkFBZ0IsQ0FBQTtFQUNkLE1BQU0sRUFBRSxJQUFJO0VBQ1osS0FBSyxFQUFFLEdBQUc7Q0FDWDs7QUFDRCxBQUFBLGNBQWMsQ0FBQTtFQUNaLFVBQVUsRUFBRSxJQUFJO0VBQ2hCLE1BQU0sRUFBRSw2QkFBNkI7RUFDckMsU0FBUyxFQUFFLDZCQUE2QjtDQUN6Qzs7QUFDRCxBQUFBLGVBQWUsQ0FBQTtFQUNiLGFBQWEsRUFBRSxHQUFHO0VBQ2xCLFlBQVksRUFBQyxHQUFHO0NBRWpCOztBQUVELEFBQUEseUJBQXlCLENBQUE7RUFDdkIsVUFBVSxFQUFFLE1BQU07RUFDbEIsV0FBVyxFQUFFLENBQUM7RUFDZCxVQUFVLEVBQUUsSUFBSTtDQUNqQjs7QUFFRCxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBQ2pDLEFBQUEsWUFBWSxDQUFDO0lBQ1gsZ0JBQWdCLEVBQUUsNkRBQTZEO0lBQy9FLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLG1CQUFtQixFQUFFLE1BQU07SUFDM0IsZ0JBQWdCLEVBQUUsS0FBSztJQUN2QixlQUFlLEVBQUUsS0FBSztHQUN2QjtFQUNELEFBQUEseUJBQXlCLENBQUE7SUFDdkIsV0FBVyxFQUFFLEdBQUc7SUFDaEIsVUFBVSxFQUFFLElBQUk7SUFDaEIsVUFBVSxFQUFFLENBQUM7R0FDZDs7O0FBRUgsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQUNqQyxBQUFBLFlBQVksQ0FBQztJQUNYLGdCQUFnQixFQUFFLCtEQUErRDtJQUNqRixnQkFBZ0IsRUFBRSxLQUFLO0lBQ3ZCLGVBQWUsRUFBRSxLQUFLO0lBQ3RCLG1CQUFtQixFQUFFLE1BQU07SUFDM0IsTUFBTSxFQUFFLEtBQUs7R0FDZDtFQUVELEFBQUEsY0FBYyxDQUFBO0lBQ1osU0FBUyxFQUFFLEtBQUs7R0FDakI7RUFDRCxBQUFBLHlCQUF5QixDQUFBO0lBQ3ZCLFdBQVcsRUFBRSxHQUFHO0lBQ2hCLFVBQVUsRUFBRSxNQUFNO0dBQ25COzs7QUFHSCxVQUFVLENBQVYsS0FBVTtFQUNSLEVBQUU7SUFDQSxjQUFjLEVBQUUsNkJBQTZCO0lBQzdDLE1BQU0sRUFBRSw2QkFBNkI7O0VBR3ZDLEdBQUc7SUFFRCxjQUFjLEVBQUUsNkJBQTZCO0lBQzdDLE1BQU0sRUFBRSw2QkFBNkI7O0VBR3ZDLElBQUk7SUFDRixjQUFjLEVBQUUsNkJBQTZCO0lBQzdDLE1BQU0sRUFBRSw2QkFBNkIifQ== */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
