/**
 * Vodafone Reboot Framework: Version 15.6.0. Generation Date: 2020-04-24T12:16:05.599Z
 */

.vfes-ms-content-tarifas-moviles {
  background-image: url("https://www.vodafone.es/c/statics/imagen/bg_mobile_tarifasmoviles.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-tarifas-moviles {
    background-image: url("https://www.vodafone.es/c/statics/imagen/bg_desktop_tarifasmoviles.png");
  }
}

.vfes-ms-content-tarifas-moviles .vfes-title--5-large {
  font-size: 1.5rem;
  max-width: 15.625rem;
  margin: 0 auto;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-tarifas-moviles .vfes-title--5-large {
    font-size: 2.125rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-tarifas-moviles .vfes-title--5-large {
    font-size: 2.5rem;
    max-width: 25rem;
  }
}

.vfes-ms-content-tarifas-moviles .vfms-img {
  max-width: 10rem;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-tarifas-moviles .vfms-img {
    max-width: none;
  }
}

.vfes-ms-content-tarifas-moviles .vfms-align {
  text-align: center;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-tarifas-moviles .vfms-align {
    text-align: left;
    -webkit-box-align: end;
            align-items: flex-end;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-tarifas-moviles .vfes-flex__direction--row-column-sm {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-tarifas-moviles .vfes-text__min {
    font-size: 1.5rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LXRhcmlmYXMtbW92aWxlc3tcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmdfbW9iaWxlX3RhcmlmYXNtb3ZpbGVzLmpwZycpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL2JnX2Rlc2t0b3BfdGFyaWZhc21vdmlsZXMucG5nJyk7XG4gICAgfVxuICAgIC52ZmVzLXRpdGxlLS01LWxhcmdlIHtcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICBtYXgtd2lkdGg6IDI1MHB4O1xuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMzRweDtcbiAgICAgICAgfVxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgZm9udC1zaXplOiA0MHB4O1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy1pbWcge1xuICAgICAgICBtYXgtd2lkdGg6IDE2MHB4O1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiBub25lO1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLWFsaWduIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZlcy1mbGV4X19kaXJlY3Rpb24tLXJvdy1jb2x1bW4tc20ge1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgfVxuICAgIH0gXG4gICAgLnZmZXMtdGV4dHtcbiAgICAgICAgJl9fbWluIHtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSBcbiAgICB9ICJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNDQSxBQUFBLGdDQUFnQyxDQUFBO0VBQzVCLGdCQUFnQixFQUFFLDRFQUE0RTtFQUM5RixpQkFBaUIsRUFBRSxTQUFTO0VBQzVCLGVBQWUsRUFBRSxLQUFLO0VBQ3RCLG1CQUFtQixFQUFFLE1BQU07Q0F5QzFCOztBQXhDRCxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBTHZDLEFBQUEsZ0NBQWdDLENBQUE7SUFNeEIsZ0JBQWdCLEVBQUUsNkVBQTZFO0dBdUNsRzs7O0FBN0NMLEFBUUksZ0NBUjRCLENBUTVCLG9CQUFvQixDQUFDO0VBQ2pCLFNBQVMsRUFBRSxJQUFJO0VBQ2YsU0FBUyxFQUFFLEtBQUs7RUFDaEIsTUFBTSxFQUFFLE1BQU07Q0FRakI7O0FBUEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQVozQyxBQVFJLGdDQVI0QixDQVE1QixvQkFBb0IsQ0FBQztJQUtiLFNBQVMsRUFBRSxJQUFJO0dBTXRCOzs7QUFKRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBZjNDLEFBUUksZ0NBUjRCLENBUTVCLG9CQUFvQixDQUFDO0lBUWIsU0FBUyxFQUFFLElBQUk7SUFDZixTQUFTLEVBQUUsS0FBSztHQUV2Qjs7O0FBbkJMLEFBb0JJLGdDQXBCNEIsQ0FvQjVCLFNBQVMsQ0FBQztFQUNOLFNBQVMsRUFBRSxLQUFLO0NBSW5COztBQUhHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUF0QjNDLEFBb0JJLGdDQXBCNEIsQ0FvQjVCLFNBQVMsQ0FBQztJQUdGLFNBQVMsRUFBRSxJQUFJO0dBRXRCOzs7QUF6QkwsQUEwQkksZ0NBMUI0QixDQTBCNUIsV0FBVyxDQUFDO0VBQ1IsVUFBVSxFQUFFLE1BQU07Q0FLckI7O0FBSkcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQTVCM0MsQUEwQkksZ0NBMUI0QixDQTBCNUIsV0FBVyxDQUFDO0lBR0osVUFBVSxFQUFFLElBQUk7SUFDaEIsV0FBVyxFQUFFLFFBQVE7R0FFNUI7OztBQUVHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFsQzNDLEFBaUNJLGdDQWpDNEIsQ0FpQzVCLG9DQUFvQyxDQUFDO0lBRTdCLGNBQWMsRUFBRSxHQUFHO0dBRTFCOzs7QUFHTyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBeEMvQyxBQXVDUSxnQ0F2Q3dCLENBdUN2QixlQUFLLENBQUM7SUFFQyxTQUFTLEVBQUUsSUFBSTtHQUV0QiJ9 */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LXRhcmlmYXMtbW92aWxlc3tcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmdfbW9iaWxlX3RhcmlmYXNtb3ZpbGVzLmpwZycpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL2JnX2Rlc2t0b3BfdGFyaWZhc21vdmlsZXMucG5nJyk7XG4gICAgfVxuICAgIC52ZmVzLXRpdGxlLS01LWxhcmdlIHtcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICBtYXgtd2lkdGg6IDI1MHB4O1xuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMzRweDtcbiAgICAgICAgfVxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgZm9udC1zaXplOiA0MHB4O1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy1pbWcge1xuICAgICAgICBtYXgtd2lkdGg6IDE2MHB4O1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiBub25lO1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLWFsaWduIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZlcy1mbGV4X19kaXJlY3Rpb24tLXJvdy1jb2x1bW4tc20ge1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgfVxuICAgIH0gXG4gICAgLnZmZXMtdGV4dHtcbiAgICAgICAgJl9fbWluIHtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSBcbiAgICB9ICJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNDQSxBQUFBLGdDQUFnQyxDQUFBO0VBQzVCLGdCQUFnQixFQUFFLDRFQUE0RTtFQUM5RixpQkFBaUIsRUFBRSxTQUFTO0VBQzVCLGVBQWUsRUFBRSxLQUFLO0VBQ3RCLG1CQUFtQixFQUFFLE1BQU07Q0F5QzFCOztBQXhDRCxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBTHZDLEFBQUEsZ0NBQWdDLENBQUE7SUFNeEIsZ0JBQWdCLEVBQUUsNkVBQTZFO0dBdUNsRzs7O0FBN0NMLEFBUUksZ0NBUjRCLENBUTVCLG9CQUFvQixDQUFDO0VBQ2pCLFNBQVMsRUFBRSxJQUFJO0VBQ2YsU0FBUyxFQUFFLEtBQUs7RUFDaEIsTUFBTSxFQUFFLE1BQU07Q0FRakI7O0FBUEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQVozQyxBQVFJLGdDQVI0QixDQVE1QixvQkFBb0IsQ0FBQztJQUtiLFNBQVMsRUFBRSxJQUFJO0dBTXRCOzs7QUFKRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBZjNDLEFBUUksZ0NBUjRCLENBUTVCLG9CQUFvQixDQUFDO0lBUWIsU0FBUyxFQUFFLElBQUk7SUFDZixTQUFTLEVBQUUsS0FBSztHQUV2Qjs7O0FBbkJMLEFBb0JJLGdDQXBCNEIsQ0FvQjVCLFNBQVMsQ0FBQztFQUNOLFNBQVMsRUFBRSxLQUFLO0NBSW5COztBQUhHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUF0QjNDLEFBb0JJLGdDQXBCNEIsQ0FvQjVCLFNBQVMsQ0FBQztJQUdGLFNBQVMsRUFBRSxJQUFJO0dBRXRCOzs7QUF6QkwsQUEwQkksZ0NBMUI0QixDQTBCNUIsV0FBVyxDQUFDO0VBQ1IsVUFBVSxFQUFFLE1BQU07Q0FLckI7O0FBSkcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQTVCM0MsQUEwQkksZ0NBMUI0QixDQTBCNUIsV0FBVyxDQUFDO0lBR0osVUFBVSxFQUFFLElBQUk7SUFDaEIsV0FBVyxFQUFFLFFBQVE7R0FFNUI7OztBQUVHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFsQzNDLEFBaUNJLGdDQWpDNEIsQ0FpQzVCLG9DQUFvQyxDQUFDO0lBRTdCLGNBQWMsRUFBRSxHQUFHO0dBRTFCOzs7QUFHTyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBeEMvQyxBQXVDUSxnQ0F2Q3dCLENBdUN2QixlQUFLLENBQUM7SUFFQyxTQUFTLEVBQUUsSUFBSTtHQUV0QiJ9 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
