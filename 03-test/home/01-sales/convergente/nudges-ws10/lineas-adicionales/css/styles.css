/**
 * Vodafone Reboot Framework: Version 2.4.1. Generation Date: 2020-08-26T11:55:10.925Z
 */

.vfes-ms-content-adicionales {
  background-image: url("https://www.vodafone.es/c/statics/imagen/bg_mobile_lineasadicionales.jpg");
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales {
    background-image: url("https://www.vodafone.es/c/statics/imagen/bg_desktop_lineasadicionales.png");
  }
}

.vfes-ms-content-adicionales .vfes-title--5-large {
  font-size: 1.5rem;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-adicionales .vfes-title--5-large {
    font-size: 2.5rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-adicionales .vfes-title--5 {
    font-size: 1.5rem;
  }
}

.vfes-ms-content-adicionales .vfms-text__align {
  text-align: center;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales .vfms-text__align {
    text-align: left;
  }
}

.vfes-ms-content-adicionales .vfms-device {
  max-height: 9.375rem;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-adicionales .vfms-device {
    max-height: none;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales .vfms-align__items {
    align-items: flex-end;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales .vfes-flex__direction--row-column-sm {
    flex-direction: row;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales .vfms-text {
    max-width: 15.625rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-adicionales .vfms-text {
    max-width: 22.5rem;
  }
}

.vfes-ms-content-adicionales .vfes-colours--dark-grey {
  color: #333;
}

.vfes-ms-content-adicionales .vfms-tel__text a {
  color: #333;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LWFkaWNpb25hbGVze1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iZ19tb2JpbGVfbGluZWFzYWRpY2lvbmFsZXMuanBnJyk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmdfZGVza3RvcF9saW5lYXNhZGljaW9uYWxlcy5wbmcnKTtcbiAgICB9XG4gICAgLnZmZXMtdGl0bGUtLTUtbGFyZ2Uge1xuICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDQwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmZXMtdGl0bGUtLTUge1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLXRleHR7XG4gICAgICAgICZfX2FsaWduIHtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSAge1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9IFxuICAgIC52Zm1zLWRldmljZSB7XG4gICAgICAgIG1heC1oZWlnaHQ6IDE1MHB4O1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgbWF4LWhlaWdodDogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy1hbGlnbl9faXRlbXMge1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgICB9XG4gICAgfVxuICAgIC52ZmVzLWZsZXhfX2RpcmVjdGlvbi0tcm93LWNvbHVtbi1zbSB7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLXRleHQge1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAyNTBweDtcbiAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDM2MHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC52ZmVzLWNvbG91cnMtLWRhcmstZ3JleSB7XG4gICAgICAgIGNvbG9yOiAjMzMzO1xuICAgIH1cbiAgICAudmZtcy10ZWxfX3RleHQge1xuICAgICAgICBhIHtcbiAgICAgICAgICAgIGNvbG9yOiAjMzMzO1xuICAgICAgICB9XG4gICAgfVxufSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNDQSxBQUFBLDRCQUE0QixDQUFBO0VBQ3hCLGdCQUFnQixFQUFFLCtFQUErRTtFQUNqRyxpQkFBaUIsRUFBRSxTQUFTO0VBQzVCLG1CQUFtQixFQUFFLE1BQU07RUFDM0IsZUFBZSxFQUFFLEtBQUs7Q0F3RHpCOztBQXZERyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBTHZDLEFBQUEsNEJBQTRCLENBQUE7SUFNcEIsZ0JBQWdCLEVBQUUsZ0ZBQWdGO0dBc0R6Rzs7O0FBNURELEFBUUksNEJBUndCLENBUXhCLG9CQUFvQixDQUFDO0VBQ2pCLFNBQVMsRUFBRSxJQUFJO0NBSWxCOztBQUhHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFWM0MsQUFRSSw0QkFSd0IsQ0FReEIsb0JBQW9CLENBQUM7SUFHYixTQUFTLEVBQUUsSUFBSTtHQUV0Qjs7O0FBRUcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWYzQyxBQWNJLDRCQWR3QixDQWN4QixjQUFjLENBQUM7SUFFUCxTQUFTLEVBQUUsSUFBSTtHQUV0Qjs7O0FBbEJMLEFBb0JRLDRCQXBCb0IsQ0FvQm5CLGlCQUFPLENBQUM7RUFDTCxVQUFVLEVBQUUsTUFBTTtDQUlyQjs7QUFIRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBdEIvQyxBQW9CUSw0QkFwQm9CLENBb0JuQixpQkFBTyxDQUFDO0lBR0QsVUFBVSxFQUFFLElBQUk7R0FFdkI7OztBQXpCVCxBQTJCSSw0QkEzQndCLENBMkJ4QixZQUFZLENBQUM7RUFDVCxVQUFVLEVBQUUsS0FBSztDQUlwQjs7QUFIRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBN0IzQyxBQTJCSSw0QkEzQndCLENBMkJ4QixZQUFZLENBQUM7SUFHTCxVQUFVLEVBQUUsSUFBSTtHQUV2Qjs7O0FBRUcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWxDM0MsQUFpQ0ksNEJBakN3QixDQWlDeEIsa0JBQWtCLENBQUM7SUFFWCxXQUFXLEVBQUUsUUFBUTtHQUU1Qjs7O0FBRUcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXZDM0MsQUFzQ0ksNEJBdEN3QixDQXNDeEIsb0NBQW9DLENBQUM7SUFFN0IsY0FBYyxFQUFFLEdBQUc7R0FFMUI7OztBQUVHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUE1QzNDLEFBMkNJLDRCQTNDd0IsQ0EyQ3hCLFVBQVUsQ0FBQztJQUVILFNBQVMsRUFBRSxLQUFLO0dBTXZCOzs7QUFIRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBaEQzQyxBQTJDSSw0QkEzQ3dCLENBMkN4QixVQUFVLENBQUM7SUFNSCxTQUFTLEVBQUUsS0FBSztHQUV2Qjs7O0FBbkRMLEFBb0RJLDRCQXBEd0IsQ0FvRHhCLHdCQUF3QixDQUFDO0VBQ3JCLEtBQUssRUFBRSxJQUFJO0NBQ2Q7O0FBdERMLEFBd0RRLDRCQXhEb0IsQ0F1RHhCLGVBQWUsQ0FDWCxDQUFDLENBQUM7RUFDRSxLQUFLLEVBQUUsSUFBSTtDQUNkIn0= */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LWFkaWNpb25hbGVze1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iZ19tb2JpbGVfbGluZWFzYWRpY2lvbmFsZXMuanBnJyk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmdfZGVza3RvcF9saW5lYXNhZGljaW9uYWxlcy5wbmcnKTtcbiAgICB9XG4gICAgLnZmZXMtdGl0bGUtLTUtbGFyZ2Uge1xuICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDQwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmZXMtdGl0bGUtLTUge1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLXRleHR7XG4gICAgICAgICZfX2FsaWduIHtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSAge1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9IFxuICAgIC52Zm1zLWRldmljZSB7XG4gICAgICAgIG1heC1oZWlnaHQ6IDE1MHB4O1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgbWF4LWhlaWdodDogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy1hbGlnbl9faXRlbXMge1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgICB9XG4gICAgfVxuICAgIC52ZmVzLWZsZXhfX2RpcmVjdGlvbi0tcm93LWNvbHVtbi1zbSB7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLXRleHQge1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAyNTBweDtcbiAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDM2MHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC52ZmVzLWNvbG91cnMtLWRhcmstZ3JleSB7XG4gICAgICAgIGNvbG9yOiAjMzMzO1xuICAgIH1cbiAgICAudmZtcy10ZWxfX3RleHQge1xuICAgICAgICBhIHtcbiAgICAgICAgICAgIGNvbG9yOiAjMzMzO1xuICAgICAgICB9XG4gICAgfVxufSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNDQSxBQUFBLDRCQUE0QixDQUFBO0VBQ3hCLGdCQUFnQixFQUFFLCtFQUErRTtFQUNqRyxpQkFBaUIsRUFBRSxTQUFTO0VBQzVCLG1CQUFtQixFQUFFLE1BQU07RUFDM0IsZUFBZSxFQUFFLEtBQUs7Q0F3RHpCOztBQXZERyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBTHZDLEFBQUEsNEJBQTRCLENBQUE7SUFNcEIsZ0JBQWdCLEVBQUUsZ0ZBQWdGO0dBc0R6Rzs7O0FBNURELEFBUUksNEJBUndCLENBUXhCLG9CQUFvQixDQUFDO0VBQ2pCLFNBQVMsRUFBRSxJQUFJO0NBSWxCOztBQUhHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFWM0MsQUFRSSw0QkFSd0IsQ0FReEIsb0JBQW9CLENBQUM7SUFHYixTQUFTLEVBQUUsSUFBSTtHQUV0Qjs7O0FBRUcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWYzQyxBQWNJLDRCQWR3QixDQWN4QixjQUFjLENBQUM7SUFFUCxTQUFTLEVBQUUsSUFBSTtHQUV0Qjs7O0FBbEJMLEFBb0JRLDRCQXBCb0IsQ0FvQm5CLGlCQUFPLENBQUM7RUFDTCxVQUFVLEVBQUUsTUFBTTtDQUlyQjs7QUFIRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBdEIvQyxBQW9CUSw0QkFwQm9CLENBb0JuQixpQkFBTyxDQUFDO0lBR0QsVUFBVSxFQUFFLElBQUk7R0FFdkI7OztBQXpCVCxBQTJCSSw0QkEzQndCLENBMkJ4QixZQUFZLENBQUM7RUFDVCxVQUFVLEVBQUUsS0FBSztDQUlwQjs7QUFIRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBN0IzQyxBQTJCSSw0QkEzQndCLENBMkJ4QixZQUFZLENBQUM7SUFHTCxVQUFVLEVBQUUsSUFBSTtHQUV2Qjs7O0FBRUcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWxDM0MsQUFpQ0ksNEJBakN3QixDQWlDeEIsa0JBQWtCLENBQUM7SUFFWCxXQUFXLEVBQUUsUUFBUTtHQUU1Qjs7O0FBRUcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXZDM0MsQUFzQ0ksNEJBdEN3QixDQXNDeEIsb0NBQW9DLENBQUM7SUFFN0IsY0FBYyxFQUFFLEdBQUc7R0FFMUI7OztBQUVHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUE1QzNDLEFBMkNJLDRCQTNDd0IsQ0EyQ3hCLFVBQVUsQ0FBQztJQUVILFNBQVMsRUFBRSxLQUFLO0dBTXZCOzs7QUFIRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBaEQzQyxBQTJDSSw0QkEzQ3dCLENBMkN4QixVQUFVLENBQUM7SUFNSCxTQUFTLEVBQUUsS0FBSztHQUV2Qjs7O0FBbkRMLEFBb0RJLDRCQXBEd0IsQ0FvRHhCLHdCQUF3QixDQUFDO0VBQ3JCLEtBQUssRUFBRSxJQUFJO0NBQ2Q7O0FBdERMLEFBd0RRLDRCQXhEb0IsQ0F1RHhCLGVBQWUsQ0FDWCxDQUFDLENBQUM7RUFDRSxLQUFLLEVBQUUsSUFBSTtDQUNkIn0= */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
