/**
 * Vodafone Reboot Framework: Version 15.6.0. Generation Date: 2020-04-27T11:33:51.553Z
 */

.vfes-ms-content-one {
  background-image: url("https://www.vodafone.es/c/statics/imagen/bg_mobile_one.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-one {
    background-image: url("https://www.vodafone.es/c/statics/imagen/bg_desktop_one.png");
  }
}

.vfes-ms-content-one .vfes-title--5-large {
  font-size: 1.5rem;
  max-width: 15.625rem;
  margin: 0 auto;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-one .vfes-title--5-large {
    font-size: 2.125rem;
    max-width: 17.1875rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-one .vfes-title--5-large {
    font-size: 2.5rem;
    max-width: 23.4375rem;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-one .vfms-img {
    max-width: 14.375rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-one .vfms-img {
    max-width: none;
  }
}

.vfes-ms-content-one .vfms-align {
  text-align: center;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-one .vfms-align {
    text-align: left;
    -webkit-box-align: end;
            align-items: flex-end;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-one .vfes-flex__direction--row-column-sm {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-one .vfms-button__container {
    max-width: 10.9375rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-one .vfms-button__container {
    max-width: none;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-one .vfes-text__min {
    font-size: 1.5rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LW9uZXtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmdfbW9iaWxlX29uZS5qcGcnKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iZ19kZXNrdG9wX29uZS5wbmcnKTtcbiAgICB9XG4gICAgLnZmZXMtdGl0bGUtLTUtbGFyZ2Uge1xuICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgIG1heC13aWR0aDogMjUwcHg7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgZm9udC1zaXplOiAzNHB4O1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAyNzVweDtcbiAgICAgICAgfVxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgZm9udC1zaXplOiA0MHB4O1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAzNzVweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy1pbWcge1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAyMzBweDtcbiAgICAgICAgfVxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiBub25lO1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLWFsaWduIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZlcy1mbGV4X19kaXJlY3Rpb24tLXJvdy1jb2x1bW4tc20ge1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgfVxuICAgIH0gXG4gICAgLnZmbXMtYnV0dG9ue1xuICAgICAgICAmX19jb250YWluZXIge1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDE3NXB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmZXMtdGV4dHtcbiAgICAgICAgJl9fbWluIHtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSBcbiAgICB9ICJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNDQSxBQUFBLG9CQUFvQixDQUFBO0VBQ2hCLGdCQUFnQixFQUFFLGlFQUFpRTtFQUNuRixpQkFBaUIsRUFBRSxTQUFTO0VBQzVCLGVBQWUsRUFBRSxLQUFLO0VBQ3RCLG1CQUFtQixFQUFFLE1BQU07Q0FzRDFCOztBQXJERCxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBTHZDLEFBQUEsb0JBQW9CLENBQUE7SUFNWixnQkFBZ0IsRUFBRSxrRUFBa0U7R0FvRHZGOzs7QUExREwsQUFRSSxvQkFSZ0IsQ0FRaEIsb0JBQW9CLENBQUM7RUFDakIsU0FBUyxFQUFFLElBQUk7RUFDZixTQUFTLEVBQUUsS0FBSztFQUNoQixNQUFNLEVBQUUsTUFBTTtDQVNqQjs7QUFSRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBWjNDLEFBUUksb0JBUmdCLENBUWhCLG9CQUFvQixDQUFDO0lBS2IsU0FBUyxFQUFFLElBQUk7SUFDZixTQUFTLEVBQUUsS0FBSztHQU12Qjs7O0FBSkcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWhCM0MsQUFRSSxvQkFSZ0IsQ0FRaEIsb0JBQW9CLENBQUM7SUFTYixTQUFTLEVBQUUsSUFBSTtJQUNmLFNBQVMsRUFBRSxLQUFLO0dBRXZCOzs7QUFFRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBdEIzQyxBQXFCSSxvQkFyQmdCLENBcUJoQixTQUFTLENBQUM7SUFFRixTQUFTLEVBQUUsS0FBSztHQUt2Qjs7O0FBSEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXpCM0MsQUFxQkksb0JBckJnQixDQXFCaEIsU0FBUyxDQUFDO0lBS0YsU0FBUyxFQUFFLElBQUk7R0FFdEI7OztBQTVCTCxBQTZCSSxvQkE3QmdCLENBNkJoQixXQUFXLENBQUM7RUFDUixVQUFVLEVBQUUsTUFBTTtDQUtyQjs7QUFKRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBL0IzQyxBQTZCSSxvQkE3QmdCLENBNkJoQixXQUFXLENBQUM7SUFHSixVQUFVLEVBQUUsSUFBSTtJQUNoQixXQUFXLEVBQUUsUUFBUTtHQUU1Qjs7O0FBRUcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXJDM0MsQUFvQ0ksb0JBcENnQixDQW9DaEIsb0NBQW9DLENBQUM7SUFFN0IsY0FBYyxFQUFFLEdBQUc7R0FFMUI7OztBQUdPLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUEzQy9DLEFBMENRLG9CQTFDWSxDQTBDWCx1QkFBVyxDQUFDO0lBRUwsU0FBUyxFQUFFLEtBQUs7R0FLdkI7OztBQUhHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUE5Qy9DLEFBMENRLG9CQTFDWSxDQTBDWCx1QkFBVyxDQUFDO0lBS0wsU0FBUyxFQUFFLElBQUk7R0FFdEI7OztBQUlHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFyRC9DLEFBb0RRLG9CQXBEWSxDQW9EWCxlQUFLLENBQUM7SUFFQyxTQUFTLEVBQUUsSUFBSTtHQUV0QiJ9 */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LW9uZXtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmdfbW9iaWxlX29uZS5qcGcnKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iZ19kZXNrdG9wX29uZS5wbmcnKTtcbiAgICB9XG4gICAgLnZmZXMtdGl0bGUtLTUtbGFyZ2Uge1xuICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgIG1heC13aWR0aDogMjUwcHg7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgZm9udC1zaXplOiAzNHB4O1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAyNzVweDtcbiAgICAgICAgfVxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgZm9udC1zaXplOiA0MHB4O1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAzNzVweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy1pbWcge1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAyMzBweDtcbiAgICAgICAgfVxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiBub25lO1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLWFsaWduIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZlcy1mbGV4X19kaXJlY3Rpb24tLXJvdy1jb2x1bW4tc20ge1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgfVxuICAgIH0gXG4gICAgLnZmbXMtYnV0dG9ue1xuICAgICAgICAmX19jb250YWluZXIge1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDE3NXB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmZXMtdGV4dHtcbiAgICAgICAgJl9fbWluIHtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSBcbiAgICB9ICJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNDQSxBQUFBLG9CQUFvQixDQUFBO0VBQ2hCLGdCQUFnQixFQUFFLGlFQUFpRTtFQUNuRixpQkFBaUIsRUFBRSxTQUFTO0VBQzVCLGVBQWUsRUFBRSxLQUFLO0VBQ3RCLG1CQUFtQixFQUFFLE1BQU07Q0FzRDFCOztBQXJERCxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBTHZDLEFBQUEsb0JBQW9CLENBQUE7SUFNWixnQkFBZ0IsRUFBRSxrRUFBa0U7R0FvRHZGOzs7QUExREwsQUFRSSxvQkFSZ0IsQ0FRaEIsb0JBQW9CLENBQUM7RUFDakIsU0FBUyxFQUFFLElBQUk7RUFDZixTQUFTLEVBQUUsS0FBSztFQUNoQixNQUFNLEVBQUUsTUFBTTtDQVNqQjs7QUFSRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBWjNDLEFBUUksb0JBUmdCLENBUWhCLG9CQUFvQixDQUFDO0lBS2IsU0FBUyxFQUFFLElBQUk7SUFDZixTQUFTLEVBQUUsS0FBSztHQU12Qjs7O0FBSkcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWhCM0MsQUFRSSxvQkFSZ0IsQ0FRaEIsb0JBQW9CLENBQUM7SUFTYixTQUFTLEVBQUUsSUFBSTtJQUNmLFNBQVMsRUFBRSxLQUFLO0dBRXZCOzs7QUFFRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBdEIzQyxBQXFCSSxvQkFyQmdCLENBcUJoQixTQUFTLENBQUM7SUFFRixTQUFTLEVBQUUsS0FBSztHQUt2Qjs7O0FBSEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXpCM0MsQUFxQkksb0JBckJnQixDQXFCaEIsU0FBUyxDQUFDO0lBS0YsU0FBUyxFQUFFLElBQUk7R0FFdEI7OztBQTVCTCxBQTZCSSxvQkE3QmdCLENBNkJoQixXQUFXLENBQUM7RUFDUixVQUFVLEVBQUUsTUFBTTtDQUtyQjs7QUFKRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBL0IzQyxBQTZCSSxvQkE3QmdCLENBNkJoQixXQUFXLENBQUM7SUFHSixVQUFVLEVBQUUsSUFBSTtJQUNoQixXQUFXLEVBQUUsUUFBUTtHQUU1Qjs7O0FBRUcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXJDM0MsQUFvQ0ksb0JBcENnQixDQW9DaEIsb0NBQW9DLENBQUM7SUFFN0IsY0FBYyxFQUFFLEdBQUc7R0FFMUI7OztBQUdPLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUEzQy9DLEFBMENRLG9CQTFDWSxDQTBDWCx1QkFBVyxDQUFDO0lBRUwsU0FBUyxFQUFFLEtBQUs7R0FLdkI7OztBQUhHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUE5Qy9DLEFBMENRLG9CQTFDWSxDQTBDWCx1QkFBVyxDQUFDO0lBS0wsU0FBUyxFQUFFLElBQUk7R0FFdEI7OztBQUlHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFyRC9DLEFBb0RRLG9CQXBEWSxDQW9EWCxlQUFLLENBQUM7SUFFQyxTQUFTLEVBQUUsSUFBSTtHQUV0QiJ9 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
