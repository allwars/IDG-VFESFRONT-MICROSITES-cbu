/**
 * Vodafone Reboot Framework: Version 2.7.1. Generation Date: 2020-11-25T10:05:51.551Z
 */

.vfes-ms-content-nudge-tv {
  background-image: url("https://www.vodafone.es/c/statics/imagen/bg_mobile_tv.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-nudge-tv {
    background-image: url("https://www.vodafone.es/c/statics/imagen/bg_desktop_tv.png");
  }
}

.vfes-ms-content-nudge-tv .vfes-title--5-large {
  font-size: 1.5rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-nudge-tv .vfes-title--5-large {
    font-size: 2.125rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-nudge-tv .vfes-title--5-large {
    font-size: 2.5rem;
    max-width: 21.875rem;
  }
}

.vfes-ms-content-nudge-tv .vfms-img {
  max-width: 10rem;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-nudge-tv .vfms-img {
    max-width: none;
  }
}

.vfes-ms-content-nudge-tv .vfms-align {
  text-align: center;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-nudge-tv .vfms-align {
    text-align: left;
    align-items: flex-end;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-nudge-tv .vfes-flex__direction--row-column-sm {
    flex-direction: row;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-nudge-tv .vfms-button__container {
    max-width: 16.125rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-nudge-tv .vfms-button__container {
    max-width: none;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-nudge-tv .vfes-text__min {
    font-size: 1.5rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LW51ZGdlLXR2e1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iZ19tb2JpbGVfdHYucG5nJyk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmdfZGVza3RvcF90di5wbmcnKTtcbiAgICB9XG4gICAgLnZmZXMtdGl0bGUtLTUtbGFyZ2Uge1xuICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDM0cHg7XG4gICAgICAgIH1cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNDBweDtcbiAgICAgICAgICAgIG1heC13aWR0aDogMzUwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmbXMtaW1nIHtcbiAgICAgICAgbWF4LXdpZHRoOiAxNjBweDtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgIG1heC13aWR0aDogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy1hbGlnbiB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmZXMtZmxleF9fZGlyZWN0aW9uLS1yb3ctY29sdW1uLXNtIHtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgIH1cbiAgICB9IFxuICAgIC52Zm1zLWJ1dHRvbntcbiAgICAgICAgJl9fY29udGFpbmVyIHtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAyNThweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiBub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC52ZmVzLXRleHR7XG4gICAgICAgICZfX21pbiB7XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0gXG4gICAgfSAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFDQ0EsQUFBQSx5QkFBeUIsQ0FBQTtFQUNyQixnQkFBZ0IsRUFBRSxnRUFBZ0U7RUFDbEYsaUJBQWlCLEVBQUUsU0FBUztFQUM1QixlQUFlLEVBQUUsS0FBSztFQUN0QixtQkFBbUIsRUFBRSxNQUFNO0NBaUQxQjs7QUFoREQsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQUx2QyxBQUFBLHlCQUF5QixDQUFBO0lBTWpCLGdCQUFnQixFQUFFLGlFQUFpRTtHQStDdEY7OztBQXJETCxBQVFJLHlCQVJxQixDQVFyQixvQkFBb0IsQ0FBQztFQUNqQixTQUFTLEVBQUUsSUFBSTtDQVFsQjs7QUFQRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBVjNDLEFBUUkseUJBUnFCLENBUXJCLG9CQUFvQixDQUFDO0lBR2IsU0FBUyxFQUFFLElBQUk7R0FNdEI7OztBQUpHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFiM0MsQUFRSSx5QkFScUIsQ0FRckIsb0JBQW9CLENBQUM7SUFNYixTQUFTLEVBQUUsSUFBSTtJQUNmLFNBQVMsRUFBRSxLQUFLO0dBRXZCOzs7QUFqQkwsQUFrQkkseUJBbEJxQixDQWtCckIsU0FBUyxDQUFDO0VBQ04sU0FBUyxFQUFFLEtBQUs7Q0FJbkI7O0FBSEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXBCM0MsQUFrQkkseUJBbEJxQixDQWtCckIsU0FBUyxDQUFDO0lBR0YsU0FBUyxFQUFFLElBQUk7R0FFdEI7OztBQXZCTCxBQXdCSSx5QkF4QnFCLENBd0JyQixXQUFXLENBQUM7RUFDUixVQUFVLEVBQUUsTUFBTTtDQUtyQjs7QUFKRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBMUIzQyxBQXdCSSx5QkF4QnFCLENBd0JyQixXQUFXLENBQUM7SUFHSixVQUFVLEVBQUUsSUFBSTtJQUNoQixXQUFXLEVBQUUsUUFBUTtHQUU1Qjs7O0FBRUcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWhDM0MsQUErQkkseUJBL0JxQixDQStCckIsb0NBQW9DLENBQUM7SUFFN0IsY0FBYyxFQUFFLEdBQUc7R0FFMUI7OztBQUdPLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUF0Qy9DLEFBcUNRLHlCQXJDaUIsQ0FxQ2hCLHVCQUFXLENBQUM7SUFFTCxTQUFTLEVBQUUsS0FBSztHQUt2Qjs7O0FBSEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXpDL0MsQUFxQ1EseUJBckNpQixDQXFDaEIsdUJBQVcsQ0FBQztJQUtMLFNBQVMsRUFBRSxJQUFJO0dBRXRCOzs7QUFJRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBaEQvQyxBQStDUSx5QkEvQ2lCLENBK0NoQixlQUFLLENBQUM7SUFFQyxTQUFTLEVBQUUsSUFBSTtHQUV0QiJ9 */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LW51ZGdlLXR2e1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iZ19tb2JpbGVfdHYucG5nJyk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmdfZGVza3RvcF90di5wbmcnKTtcbiAgICB9XG4gICAgLnZmZXMtdGl0bGUtLTUtbGFyZ2Uge1xuICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDM0cHg7XG4gICAgICAgIH1cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNDBweDtcbiAgICAgICAgICAgIG1heC13aWR0aDogMzUwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmbXMtaW1nIHtcbiAgICAgICAgbWF4LXdpZHRoOiAxNjBweDtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgIG1heC13aWR0aDogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy1hbGlnbiB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmZXMtZmxleF9fZGlyZWN0aW9uLS1yb3ctY29sdW1uLXNtIHtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgIH1cbiAgICB9IFxuICAgIC52Zm1zLWJ1dHRvbntcbiAgICAgICAgJl9fY29udGFpbmVyIHtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAyNThweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiBub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC52ZmVzLXRleHR7XG4gICAgICAgICZfX21pbiB7XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0gXG4gICAgfSAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFDQ0EsQUFBQSx5QkFBeUIsQ0FBQTtFQUNyQixnQkFBZ0IsRUFBRSxnRUFBZ0U7RUFDbEYsaUJBQWlCLEVBQUUsU0FBUztFQUM1QixlQUFlLEVBQUUsS0FBSztFQUN0QixtQkFBbUIsRUFBRSxNQUFNO0NBaUQxQjs7QUFoREQsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQUx2QyxBQUFBLHlCQUF5QixDQUFBO0lBTWpCLGdCQUFnQixFQUFFLGlFQUFpRTtHQStDdEY7OztBQXJETCxBQVFJLHlCQVJxQixDQVFyQixvQkFBb0IsQ0FBQztFQUNqQixTQUFTLEVBQUUsSUFBSTtDQVFsQjs7QUFQRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBVjNDLEFBUUkseUJBUnFCLENBUXJCLG9CQUFvQixDQUFDO0lBR2IsU0FBUyxFQUFFLElBQUk7R0FNdEI7OztBQUpHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFiM0MsQUFRSSx5QkFScUIsQ0FRckIsb0JBQW9CLENBQUM7SUFNYixTQUFTLEVBQUUsSUFBSTtJQUNmLFNBQVMsRUFBRSxLQUFLO0dBRXZCOzs7QUFqQkwsQUFrQkkseUJBbEJxQixDQWtCckIsU0FBUyxDQUFDO0VBQ04sU0FBUyxFQUFFLEtBQUs7Q0FJbkI7O0FBSEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXBCM0MsQUFrQkkseUJBbEJxQixDQWtCckIsU0FBUyxDQUFDO0lBR0YsU0FBUyxFQUFFLElBQUk7R0FFdEI7OztBQXZCTCxBQXdCSSx5QkF4QnFCLENBd0JyQixXQUFXLENBQUM7RUFDUixVQUFVLEVBQUUsTUFBTTtDQUtyQjs7QUFKRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBMUIzQyxBQXdCSSx5QkF4QnFCLENBd0JyQixXQUFXLENBQUM7SUFHSixVQUFVLEVBQUUsSUFBSTtJQUNoQixXQUFXLEVBQUUsUUFBUTtHQUU1Qjs7O0FBRUcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWhDM0MsQUErQkkseUJBL0JxQixDQStCckIsb0NBQW9DLENBQUM7SUFFN0IsY0FBYyxFQUFFLEdBQUc7R0FFMUI7OztBQUdPLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUF0Qy9DLEFBcUNRLHlCQXJDaUIsQ0FxQ2hCLHVCQUFXLENBQUM7SUFFTCxTQUFTLEVBQUUsS0FBSztHQUt2Qjs7O0FBSEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXpDL0MsQUFxQ1EseUJBckNpQixDQXFDaEIsdUJBQVcsQ0FBQztJQUtMLFNBQVMsRUFBRSxJQUFJO0dBRXRCOzs7QUFJRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBaEQvQyxBQStDUSx5QkEvQ2lCLENBK0NoQixlQUFLLENBQUM7SUFFQyxTQUFTLEVBQUUsSUFBSTtHQUV0QiJ9 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
