/**
 * Vodafone Reboot Framework: Version 2.12.0. Generation Date: 2021-02-19T12:08:44.157Z
 */

.vfes-ms-content-fibra {
  background-image: url("https://www.vodafone.es/c/statics/imagen/bg_mobile_fibra.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-fibra {
    background-image: url("https://www.vodafone.es/c/statics/imagen/bg_desktop_fibra.png");
  }
}

.vfes-ms-content-fibra .vfes-title--5-large {
  font-size: 1.5rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-fibra .vfes-title--5-large {
    font-size: 2.125rem;
    max-width: 15.625rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-fibra .vfes-title--5-large {
    font-size: 2.5rem;
    max-width: 28.4375rem;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-fibra .vfms-img {
    max-width: 14.375rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-fibra .vfms-img {
    max-width: none;
  }
}

.vfes-ms-content-fibra .vfms-align {
  text-align: center;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-fibra .vfms-align {
    text-align: left;
    align-items: flex-end;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-fibra .vfes-flex__direction--row-column-sm {
    flex-direction: row;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-fibra .vfms-button__container {
    max-width: 12.5rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-fibra .vfms-button__container {
    max-width: none;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-fibra .vfes-text__min {
    font-size: 1.5rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LWZpYnJhe1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iZ19tb2JpbGVfZmlicmEuanBnJyk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmdfZGVza3RvcF9maWJyYS5wbmcnKTtcbiAgICB9XG4gICAgLnZmZXMtdGl0bGUtLTUtbGFyZ2Uge1xuICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDM0cHg7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDI1MHB4O1xuICAgICAgICB9XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDQwcHg7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDQ1NXB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLWltZyB7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDIzMHB4O1xuICAgICAgICB9XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmbXMtYWxpZ24ge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgICB9XG4gICAgfVxuICAgIC52ZmVzLWZsZXhfX2RpcmVjdGlvbi0tcm93LWNvbHVtbi1zbSB7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICB9XG4gICAgfSBcbiAgICAudmZtcy1idXR0b257XG4gICAgICAgICZfX2NvbnRhaW5lciB7XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDogMjAwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDogbm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZlcy10ZXh0e1xuICAgICAgICAmX19taW4ge1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9IFxuICAgIH0gIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0NBLEFBQUEsc0JBQXNCLENBQUE7RUFDbEIsZ0JBQWdCLEVBQUUsbUVBQW1FO0VBQ3JGLGlCQUFpQixFQUFFLFNBQVM7RUFDNUIsZUFBZSxFQUFFLEtBQUs7RUFDdEIsbUJBQW1CLEVBQUUsTUFBTTtDQW9EMUI7O0FBbkRELE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFMdkMsQUFBQSxzQkFBc0IsQ0FBQTtJQU1kLGdCQUFnQixFQUFFLG9FQUFvRTtHQWtEekY7OztBQXhETCxBQVFJLHNCQVJrQixDQVFsQixvQkFBb0IsQ0FBQztFQUNqQixTQUFTLEVBQUUsSUFBSTtDQVNsQjs7QUFSRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBVjNDLEFBUUksc0JBUmtCLENBUWxCLG9CQUFvQixDQUFDO0lBR2IsU0FBUyxFQUFFLElBQUk7SUFDZixTQUFTLEVBQUUsS0FBSztHQU12Qjs7O0FBSkcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWQzQyxBQVFJLHNCQVJrQixDQVFsQixvQkFBb0IsQ0FBQztJQU9iLFNBQVMsRUFBRSxJQUFJO0lBQ2YsU0FBUyxFQUFFLEtBQUs7R0FFdkI7OztBQUVHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFwQjNDLEFBbUJJLHNCQW5Ca0IsQ0FtQmxCLFNBQVMsQ0FBQztJQUVGLFNBQVMsRUFBRSxLQUFLO0dBS3ZCOzs7QUFIRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBdkIzQyxBQW1CSSxzQkFuQmtCLENBbUJsQixTQUFTLENBQUM7SUFLRixTQUFTLEVBQUUsSUFBSTtHQUV0Qjs7O0FBMUJMLEFBMkJJLHNCQTNCa0IsQ0EyQmxCLFdBQVcsQ0FBQztFQUNSLFVBQVUsRUFBRSxNQUFNO0NBS3JCOztBQUpHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUE3QjNDLEFBMkJJLHNCQTNCa0IsQ0EyQmxCLFdBQVcsQ0FBQztJQUdKLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLFdBQVcsRUFBRSxRQUFRO0dBRTVCOzs7QUFFRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBbkMzQyxBQWtDSSxzQkFsQ2tCLENBa0NsQixvQ0FBb0MsQ0FBQztJQUU3QixjQUFjLEVBQUUsR0FBRztHQUUxQjs7O0FBR08sTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXpDL0MsQUF3Q1Esc0JBeENjLENBd0NiLHVCQUFXLENBQUM7SUFFTCxTQUFTLEVBQUUsS0FBSztHQUt2Qjs7O0FBSEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQTVDL0MsQUF3Q1Esc0JBeENjLENBd0NiLHVCQUFXLENBQUM7SUFLTCxTQUFTLEVBQUUsSUFBSTtHQUV0Qjs7O0FBSUcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQW5EL0MsQUFrRFEsc0JBbERjLENBa0RiLGVBQUssQ0FBQztJQUVDLFNBQVMsRUFBRSxJQUFJO0dBRXRCIn0= */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LWZpYnJhe1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iZ19tb2JpbGVfZmlicmEuanBnJyk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmdfZGVza3RvcF9maWJyYS5wbmcnKTtcbiAgICB9XG4gICAgLnZmZXMtdGl0bGUtLTUtbGFyZ2Uge1xuICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDM0cHg7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDI1MHB4O1xuICAgICAgICB9XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDQwcHg7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDQ1NXB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLWltZyB7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDIzMHB4O1xuICAgICAgICB9XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmbXMtYWxpZ24ge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgICB9XG4gICAgfVxuICAgIC52ZmVzLWZsZXhfX2RpcmVjdGlvbi0tcm93LWNvbHVtbi1zbSB7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICB9XG4gICAgfSBcbiAgICAudmZtcy1idXR0b257XG4gICAgICAgICZfX2NvbnRhaW5lciB7XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDogMjAwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDogbm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZlcy10ZXh0e1xuICAgICAgICAmX19taW4ge1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9IFxuICAgIH0gIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0NBLEFBQUEsc0JBQXNCLENBQUE7RUFDbEIsZ0JBQWdCLEVBQUUsbUVBQW1FO0VBQ3JGLGlCQUFpQixFQUFFLFNBQVM7RUFDNUIsZUFBZSxFQUFFLEtBQUs7RUFDdEIsbUJBQW1CLEVBQUUsTUFBTTtDQW9EMUI7O0FBbkRELE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFMdkMsQUFBQSxzQkFBc0IsQ0FBQTtJQU1kLGdCQUFnQixFQUFFLG9FQUFvRTtHQWtEekY7OztBQXhETCxBQVFJLHNCQVJrQixDQVFsQixvQkFBb0IsQ0FBQztFQUNqQixTQUFTLEVBQUUsSUFBSTtDQVNsQjs7QUFSRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBVjNDLEFBUUksc0JBUmtCLENBUWxCLG9CQUFvQixDQUFDO0lBR2IsU0FBUyxFQUFFLElBQUk7SUFDZixTQUFTLEVBQUUsS0FBSztHQU12Qjs7O0FBSkcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWQzQyxBQVFJLHNCQVJrQixDQVFsQixvQkFBb0IsQ0FBQztJQU9iLFNBQVMsRUFBRSxJQUFJO0lBQ2YsU0FBUyxFQUFFLEtBQUs7R0FFdkI7OztBQUVHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFwQjNDLEFBbUJJLHNCQW5Ca0IsQ0FtQmxCLFNBQVMsQ0FBQztJQUVGLFNBQVMsRUFBRSxLQUFLO0dBS3ZCOzs7QUFIRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBdkIzQyxBQW1CSSxzQkFuQmtCLENBbUJsQixTQUFTLENBQUM7SUFLRixTQUFTLEVBQUUsSUFBSTtHQUV0Qjs7O0FBMUJMLEFBMkJJLHNCQTNCa0IsQ0EyQmxCLFdBQVcsQ0FBQztFQUNSLFVBQVUsRUFBRSxNQUFNO0NBS3JCOztBQUpHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUE3QjNDLEFBMkJJLHNCQTNCa0IsQ0EyQmxCLFdBQVcsQ0FBQztJQUdKLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLFdBQVcsRUFBRSxRQUFRO0dBRTVCOzs7QUFFRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBbkMzQyxBQWtDSSxzQkFsQ2tCLENBa0NsQixvQ0FBb0MsQ0FBQztJQUU3QixjQUFjLEVBQUUsR0FBRztHQUUxQjs7O0FBR08sTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXpDL0MsQUF3Q1Esc0JBeENjLENBd0NiLHVCQUFXLENBQUM7SUFFTCxTQUFTLEVBQUUsS0FBSztHQUt2Qjs7O0FBSEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQTVDL0MsQUF3Q1Esc0JBeENjLENBd0NiLHVCQUFXLENBQUM7SUFLTCxTQUFTLEVBQUUsSUFBSTtHQUV0Qjs7O0FBSUcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQW5EL0MsQUFrRFEsc0JBbERjLENBa0RiLGVBQUssQ0FBQztJQUVDLFNBQVMsRUFBRSxJQUFJO0dBRXRCIn0= */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
