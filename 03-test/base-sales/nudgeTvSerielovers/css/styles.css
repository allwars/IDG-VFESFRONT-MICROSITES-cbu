/**
 * Vodafone Reboot Framework: Version 2.5.1. Generation Date: 2020-10-22T11:09:56.842Z
 */

.vf-bs .vf-stickyBottomContainer {
  background-image: url("https://www.vodafone.es/c/statics/imagen/base_sales_sticky_mobile.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  display: flex;
  justify-content: flex-end;
  min-height: 9.375rem;
  padding: 1.25rem;
  position: fixed;
  bottom: 0;
  z-index: 9999;
  width: 100%;
}

@media screen and (min-width: 60.625rem) {
  .vf-bs .vf-stickyBottomContainer {
    background-image: url("https://www.vodafone.es/c/statics/imagen/base_sales_sticky_desktop.jpg");
    min-height: 6.25rem;
    background-position: bottom;
  }
}

.vf-bs .vf-stickyBottomContainer__text {
  margin: 0.9375rem 0;
}

@media screen and (min-width: 60.625rem) {
  .vf-bs .vf-stickyBottomContainer__text {
    max-width: 17.5rem;
    margin: 0 8.125rem 0 2.5rem;
  }
}

.vf-bs .vf-stickyBottomContainer__flex {
  display: flex;
  justify-content: flex-end;
  flex-direction: column;
  align-items: start;
}

@media screen and (min-width: 60.625rem) {
  .vf-bs .vf-stickyBottomContainer__flex {
    flex-direction: row;
    padding-right: 0.625rem;
    align-items: center;
  }
}

@media screen and (min-width: 64rem) {
  .vf-bs .vf-stickyBottomContainer__flex {
    padding-right: 12.5rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmYtYnN7XG4gIC52Zi1zdGlja3lCb3R0b21Db250YWluZXJ7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iYXNlX3NhbGVzX3N0aWNreV9tb2JpbGUuanBnXCIpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgbWluLWhlaWdodDogMTUwcHg7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgYm90dG9tOiAwO1xuICAgIHotaW5kZXg6IDk5OTk7XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iYXNlX3NhbGVzX3N0aWNreV9kZXNrdG9wLmpwZ1wiKTtcbiAgICAgIG1pbi1oZWlnaHQ6IDEwMHB4O1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogYm90dG9tO1xuICAgIH1cblxuICAgICZfX3RleHR7XG4gICAgICBtYXJnaW46IDE1cHggMDtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgIG1heC13aWR0aDogMjgwcHg7XG4gICAgICAgIG1hcmdpbjogMCAxMzBweCAwIDQwcHg7XG4gICAgICB9XG4gICAgfVxuICAgICZfX2ZsZXh7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBhbGlnbi1pdGVtczogc3RhcnQ7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDIwMHB4O1xuICAgICAgfVxuXG4gICAgfVxuICB9XG59Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0NBLEFBQ0UsTUFESSxDQUNKLHlCQUF5QixDQUFBO0VBQ3ZCLGdCQUFnQixFQUFFLDRFQUE0RTtFQUM5RixpQkFBaUIsRUFBRSxTQUFTO0VBQzVCLGVBQWUsRUFBRSxLQUFLO0VBQ3RCLE9BQU8sRUFBRSxJQUFJO0VBQ2IsZUFBZSxFQUFFLFFBQVE7RUFDekIsVUFBVSxFQUFFLEtBQUs7RUFDakIsT0FBTyxFQUFFLElBQUk7RUFDYixRQUFRLEVBQUUsS0FBSztFQUNmLE1BQU0sRUFBRSxDQUFDO0VBQ1QsT0FBTyxFQUFFLElBQUk7RUFDYixLQUFLLEVBQUUsSUFBSTtDQThCWjs7QUE1QkMsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWR2QyxBQUNFLE1BREksQ0FDSix5QkFBeUIsQ0FBQTtJQWNyQixnQkFBZ0IsRUFBRSw2RUFBNkU7SUFDL0YsVUFBVSxFQUFFLEtBQUs7SUFDakIsbUJBQW1CLEVBQUUsTUFBTTtHQXlCOUI7OztBQTFDSCxBQW9CSSxNQXBCRSxDQW9CRCwrQkFBTSxDQUFBO0VBQ0wsTUFBTSxFQUFFLE1BQU07Q0FLZjs7QUFKQyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBdEJ6QyxBQW9CSSxNQXBCRSxDQW9CRCwrQkFBTSxDQUFBO0lBR0gsU0FBUyxFQUFFLEtBQUs7SUFDaEIsTUFBTSxFQUFFLGNBQWM7R0FFekI7OztBQTFCTCxBQTJCSSxNQTNCRSxDQTJCRCwrQkFBTSxDQUFBO0VBQ0wsT0FBTyxFQUFFLElBQUk7RUFDYixlQUFlLEVBQUUsUUFBUTtFQUN6QixjQUFjLEVBQUUsTUFBTTtFQUN0QixXQUFXLEVBQUUsS0FBSztDQVVuQjs7QUFUQyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBaEN6QyxBQTJCSSxNQTNCRSxDQTJCRCwrQkFBTSxDQUFBO0lBTUgsY0FBYyxFQUFFLEdBQUc7SUFDbkIsYUFBYSxFQUFFLElBQUk7SUFDbkIsV0FBVyxFQUFFLE1BQU07R0FNdEI7OztBQUpDLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLE1BQU07RUFyQzFDLEFBMkJJLE1BM0JFLENBMkJELCtCQUFNLENBQUE7SUFXSCxhQUFhLEVBQUUsS0FBSztHQUd2QiJ9 */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmYtYnN7XG4gIC52Zi1zdGlja3lCb3R0b21Db250YWluZXJ7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iYXNlX3NhbGVzX3N0aWNreV9tb2JpbGUuanBnXCIpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgbWluLWhlaWdodDogMTUwcHg7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgYm90dG9tOiAwO1xuICAgIHotaW5kZXg6IDk5OTk7XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iYXNlX3NhbGVzX3N0aWNreV9kZXNrdG9wLmpwZ1wiKTtcbiAgICAgIG1pbi1oZWlnaHQ6IDEwMHB4O1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogYm90dG9tO1xuICAgIH1cblxuICAgICZfX3RleHR7XG4gICAgICBtYXJnaW46IDE1cHggMDtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgIG1heC13aWR0aDogMjgwcHg7XG4gICAgICAgIG1hcmdpbjogMCAxMzBweCAwIDQwcHg7XG4gICAgICB9XG4gICAgfVxuICAgICZfX2ZsZXh7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBhbGlnbi1pdGVtczogc3RhcnQ7XG4gICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDIwMHB4O1xuICAgICAgfVxuXG4gICAgfVxuICB9XG59Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0NBLEFBQ0UsTUFESSxDQUNKLHlCQUF5QixDQUFBO0VBQ3ZCLGdCQUFnQixFQUFFLDRFQUE0RTtFQUM5RixpQkFBaUIsRUFBRSxTQUFTO0VBQzVCLGVBQWUsRUFBRSxLQUFLO0VBQ3RCLE9BQU8sRUFBRSxJQUFJO0VBQ2IsZUFBZSxFQUFFLFFBQVE7RUFDekIsVUFBVSxFQUFFLEtBQUs7RUFDakIsT0FBTyxFQUFFLElBQUk7RUFDYixRQUFRLEVBQUUsS0FBSztFQUNmLE1BQU0sRUFBRSxDQUFDO0VBQ1QsT0FBTyxFQUFFLElBQUk7RUFDYixLQUFLLEVBQUUsSUFBSTtDQThCWjs7QUE1QkMsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWR2QyxBQUNFLE1BREksQ0FDSix5QkFBeUIsQ0FBQTtJQWNyQixnQkFBZ0IsRUFBRSw2RUFBNkU7SUFDL0YsVUFBVSxFQUFFLEtBQUs7SUFDakIsbUJBQW1CLEVBQUUsTUFBTTtHQXlCOUI7OztBQTFDSCxBQW9CSSxNQXBCRSxDQW9CRCwrQkFBTSxDQUFBO0VBQ0wsTUFBTSxFQUFFLE1BQU07Q0FLZjs7QUFKQyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBdEJ6QyxBQW9CSSxNQXBCRSxDQW9CRCwrQkFBTSxDQUFBO0lBR0gsU0FBUyxFQUFFLEtBQUs7SUFDaEIsTUFBTSxFQUFFLGNBQWM7R0FFekI7OztBQTFCTCxBQTJCSSxNQTNCRSxDQTJCRCwrQkFBTSxDQUFBO0VBQ0wsT0FBTyxFQUFFLElBQUk7RUFDYixlQUFlLEVBQUUsUUFBUTtFQUN6QixjQUFjLEVBQUUsTUFBTTtFQUN0QixXQUFXLEVBQUUsS0FBSztDQVVuQjs7QUFUQyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBaEN6QyxBQTJCSSxNQTNCRSxDQTJCRCwrQkFBTSxDQUFBO0lBTUgsY0FBYyxFQUFFLEdBQUc7SUFDbkIsYUFBYSxFQUFFLElBQUk7SUFDbkIsV0FBVyxFQUFFLE1BQU07R0FNdEI7OztBQUpDLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLE1BQU07RUFyQzFDLEFBMkJJLE1BM0JFLENBMkJELCtCQUFNLENBQUE7SUFXSCxhQUFhLEVBQUUsS0FBSztHQUd2QiJ9 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
