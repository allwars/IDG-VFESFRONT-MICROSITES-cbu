/**
 * Vodafone Reboot Framework: Version 15.6.0. Generation Date: 2020-03-02T16:17:03.556Z
 */

.vfes-ms-content-banner .vfms-background {
  background-image: url("https://www.vodafone.es/c/statics/imagen/banner-a90-ilimitable-resp.png");
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  min-height: 22.9375rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-banner .vfms-background {
    background-image: url("https://www.vodafone.es/c/statics/imagen/banner-a90-ilimitable-tablet.png");
    min-height: 0;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-banner .vfms-background {
    background-image: url("https://www.vodafone.es/c/statics/imagen/banner-a90-ilimitable-desktop-v2.png");
  }
}

.vfes-ms-content-banner .vfes-title--5 {
  font-size: 1.25rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-banner .vfes-title--5 {
    font-size: 1.5rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-banner .vfes-title--5 {
    font-size: 1.75rem;
  }
}

.vfes-ms-content-banner .vfms-text__align {
  text-align: left;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-banner .vfms-text__align {
    text-align: center;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-banner .vfms-text__size {
    font-size: 1.25rem;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-banner .vfes-main__container {
    min-height: 100%;
    -webkit-box-pack: center;
            justify-content: center;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-banner .vfes-main__container {
    max-width: 25.9375rem;
    -webkit-box-align: center;
            align-items: center;
  }
}

.vfes-ms-content-banner .vfms-icon {
  width: 2rem;
  height: 2rem;
  color: #fff;
  border-bottom: 0.0625rem solid #fff;
}

.vfes-ms-content-banner .vfms-white {
  color: #fff;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-banner .vfms-grid__main {
    max-width: 20rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-banner .vfms-grid__main {
    max-width: none;
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: center;
            justify-content: center;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-banner .vfms-grid__secondary {
    min-width: 13.125rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-banner .vfms-grid__secondary {
    max-width: none;
  }
}

.vfes-ms-content-banner .vfms-price {
  text-align: center;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-banner .vfms-price {
    text-align: left;
  }
}

.vfes-ms-content-banner .vfms-price__big {
  font-size: 1.5rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-banner .vfms-price__big {
    font-size: 2.125rem;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-banner .vfms-price__container {
    height: 100%;
    -webkit-box-pack: end;
            justify-content: flex-end;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-banner .vfms-flex__column {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LWJhbm5lcntcbiAgICAudmZtcy1iYWNrZ3JvdW5kIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL2Jhbm5lci1hOTAtaWxpbWl0YWJsZS1yZXNwLnBuZycpO1xuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDM2N3B4O1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL2Jhbm5lci1hOTAtaWxpbWl0YWJsZS10YWJsZXQucG5nJyk7XG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAwO1xuICAgICAgICB9XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmFubmVyLWE5MC1pbGltaXRhYmxlLWRlc2t0b3AtdjIucG5nJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmZXMtdGl0bGUtLTUge1xuICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgIH1cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy10ZXh0IHtcbiAgICAgICAgJl9fYWxpZ24ge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZfX3NpemUge1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmZXMtbWFpbl9fY29udGFpbmVyIHtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgfVxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA0MTVweDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmbXMtaWNvbiB7XG4gICAgICAgIHdpZHRoOiAzMnB4O1xuICAgICAgICBoZWlnaHQ6IDMycHg7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmZjtcbiAgICB9XG4gICAgLnZmbXMtd2hpdGUge1xuICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICB9XG4gICAgLnZmbXMtZ3JpZCB7XG4gICAgICAgICZfX21haW4ge1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDMyMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmX19zZWNvbmRhcnkge1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBtaW4td2lkdGg6IDIxMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9IFxuICAgIC52Zm1zLXByaWNlIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgfVxuICAgICAgICAmX19iaWcge1xuICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDM0cHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJl9fY29udGFpbmVyIHtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmbXMtZmxleF9fY29sdW1uIHtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgIH1cbiAgICB9XG59Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0NBLEFBQ0ksdUJBRG1CLENBQ25CLGdCQUFnQixDQUFDO0VBQ2IsZ0JBQWdCLEVBQUUsOEVBQThFO0VBQ2hHLGVBQWUsRUFBRSxLQUFLO0VBQ3RCLG1CQUFtQixFQUFFLE1BQU07RUFDM0IsaUJBQWlCLEVBQUUsU0FBUztFQUM1QixVQUFVLEVBQUUsS0FBSztDQVFwQjs7QUFQRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBUDNDLEFBQ0ksdUJBRG1CLENBQ25CLGdCQUFnQixDQUFDO0lBT1QsZ0JBQWdCLEVBQUUsZ0ZBQWdGO0lBQ2xHLFVBQVUsRUFBRSxDQUFDO0dBS3BCOzs7QUFIRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBWDNDLEFBQ0ksdUJBRG1CLENBQ25CLGdCQUFnQixDQUFDO0lBV1QsZ0JBQWdCLEVBQUUsb0ZBQW9GO0dBRTdHOzs7QUFkTCxBQWVJLHVCQWZtQixDQWVuQixjQUFjLENBQUM7RUFDWCxTQUFTLEVBQUUsSUFBSTtDQU9sQjs7QUFORyxNQUFNLENBQUMsTUFBTSxN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 */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LWJhbm5lcntcbiAgICAudmZtcy1iYWNrZ3JvdW5kIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL2Jhbm5lci1hOTAtaWxpbWl0YWJsZS1yZXNwLnBuZycpO1xuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDM2N3B4O1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL2Jhbm5lci1hOTAtaWxpbWl0YWJsZS10YWJsZXQucG5nJyk7XG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAwO1xuICAgICAgICB9XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnZvZGFmb25lLmVzL2Mvc3RhdGljcy9pbWFnZW4vYmFubmVyLWE5MC1pbGltaXRhYmxlLWRlc2t0b3AtdjIucG5nJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmZXMtdGl0bGUtLTUge1xuICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgIH1cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy10ZXh0IHtcbiAgICAgICAgJl9fYWxpZ24ge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZfX3NpemUge1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmZXMtbWFpbl9fY29udGFpbmVyIHtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgfVxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA0MTVweDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmbXMtaWNvbiB7XG4gICAgICAgIHdpZHRoOiAzMnB4O1xuICAgICAgICBoZWlnaHQ6IDMycHg7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmZjtcbiAgICB9XG4gICAgLnZmbXMtd2hpdGUge1xuICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICB9XG4gICAgLnZmbXMtZ3JpZCB7XG4gICAgICAgICZfX21haW4ge1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDMyMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmX19zZWNvbmRhcnkge1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBtaW4td2lkdGg6IDIxMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9IFxuICAgIC52Zm1zLXByaWNlIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgfVxuICAgICAgICAmX19iaWcge1xuICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDM0cHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJl9fY29udGFpbmVyIHtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmbXMtZmxleF9fY29sdW1uIHtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgIH1cbiAgICB9XG59Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0NBLEFBQ0ksdUJBRG1CLENBQ25CLGdCQUFnQixDQUFDO0VBQ2IsZ0JBQWdCLEVBQUUsOEVBQThFO0VBQ2hHLGVBQWUsRUFBRSxLQUFLO0VBQ3RCLG1CQUFtQixFQUFFLE1BQU07RUFDM0IsaUJBQWlCLEVBQUUsU0FBUztFQUM1QixVQUFVLEVBQUUsS0FBSztDQVFwQjs7QUFQRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBUDNDLEFBQ0ksdUJBRG1CLENBQ25CLGdCQUFnQixDQUFDO0lBT1QsZ0JBQWdCLEVBQUUsZ0ZBQWdGO0lBQ2xHLFVBQVUsRUFBRSxDQUFDO0dBS3BCOzs7QUFIRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBWDNDLEFBQ0ksdUJBRG1CLENBQ25CLGdCQUFnQixDQUFDO0lBV1QsZ0JBQWdCLEVBQUUsb0ZBQW9GO0dBRTdHOzs7QUFkTCxBQWVJLHVCQWZtQixDQWVuQixjQUFjLENBQUM7RUFDWCxTQUFTLEVBQUUsSUFBSTtDQU9sQjs7QUFORyxNQUFNLENBQUMsTUFBTSxN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 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
