/**
 * Vodafone Reboot Framework: Version 15.6.0. Generation Date: 2020-03-26T15:45:35.734Z
 */

.vfes-ms-content-adicionales {
  background-image: url("https://www.vodafone.es/c/statics/imagen/test-nudge-lineas-adicionales-mobile.png");
  background-repeat: no-repeat;
  background-size: cover;
  background-position-x: center;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales {
    background-image: url("https://www.vodafone.es/c/statics/imagen/test-nudge-lineas-adicionales-tablet.png");
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-adicionales {
    background-image: url("https://www.vodafone.es/c/statics/imagen/test-nudge-lineas-adicionales-desk.png");
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales .vfms-container {
    -webkit-box-align: start;
            align-items: flex-start;
  }
}

.vfes-ms-content-adicionales .vfms-btn-info {
  border: none;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales .vfms-btn__direction {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
  }
}

.vfes-ms-content-adicionales .vfms-tel-text {
  font-size: 1.125rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales .vfms-tel-text {
    max-width: 7.5rem;
  }
}

.vfes-ms-content-adicionales .vfms-tel-text a {
  color: #333;
  text-decoration: none;
  font-size: 1.25rem;
}

.vfes-ms-content-adicionales .vfms-hero__img {
  display: none;
  max-width: 9.0625rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales .vfms-hero__img {
    display: block;
    max-width: 9.375rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-adicionales .vfms-hero__img {
    max-width: 20.5625rem;
  }
}

.vfes-ms-content-adicionales .vfms-hero__title {
  font-size: 1.75rem;
  margin-bottom: 0.625rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales .vfms-hero__title {
    font-size: 2.5rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-adicionales .vfms-hero__title {
    font-size: 3.5rem;
  }
}

.vfes-ms-content-adicionales .vfms-hero__title-big {
  font-size: 2rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-adicionales .vfms-hero__title-big {
    font-size: 2.5rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-adicionales .vfms-hero__title-big {
    font-size: 3.5rem;
  }
}

.vfes-ms-content-adicionales .vfms-hero__subtitle {
  font-size: 1.25rem;
}

@media screen and (min-width: 640) {
  .vfes-ms-content-adicionales .vfms-hero__subtitle {
    font-size: 1.5rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-adicionales .vfms-hero__subtitle {
    font-size: 1.75rem;
  }
}

.vfes-ms-content-adicionales .vfms-client__wrapper {
  height: 5.25rem;
  background-color: #ffffff;
}

.vfes-ms-content-adicionales .vfms-client__text {
  font-size: 1.125rem;
}

.vfes-ms-content-adicionales .vfms-client a {
  margin-left: 1.25rem;
}

@media screen and (max-width: 60.625rem) {
  .vfes-ms-content-adicionales .vfms-client a {
    margin-left: 0;
    width: 18.75rem;
  }
}

@media screen and (max-width: 60.625rem) {
  .vfes-ms-content-adicionales .vfms-client {
    margin-top: 1.25rem;
    margin-bottom: 1.25rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi52ZmVzLW1zLWNvbnRlbnQtYWRpY2lvbmFsZXN7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL3Rlc3QtbnVkZ2UtbGluZWFzLWFkaWNpb25hbGVzLW1vYmlsZS5wbmcnKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbi14OiBjZW50ZXI7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL3Rlc3QtbnVkZ2UtbGluZWFzLWFkaWNpb25hbGVzLXRhYmxldC5wbmcnKTtcbiAgICB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL3Rlc3QtbnVkZ2UtbGluZWFzLWFkaWNpb25hbGVzLWRlc2sucG5nJyk7XG4gICAgfVxuICAgIC52Zm1zLWNvbnRhaW5lcntcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgICAgIH1cblxuICAgIH1cbiAgICAudmZtcy1idG4ge1xuICAgICAgICAmLWluZm97XG4gICAgICAgICAgICBib3JkZXI6bm9uZTtcbiAgICAgICAgfVxuICAgICAgICAmX19kaXJlY3Rpb24ge1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgICAgICBcbiAgICAudmZtcy10ZWwtdGV4dHtcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAxMjBweDtcbiAgICAgICAgfVxuICAgICAgICBhe1xuICAgICAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG5cbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy1oZXJvIHtcbiAgICAgICAgJl9faW1nIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDE0NXB4O1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDE1MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDMyOXB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZfX3RpdGxlIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNDBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiA1NnB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJi1iaWcge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICAgICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDQwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNTZweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJl9fc3VidGl0bGUge1xuICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwKSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDI4cHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICBcbiAgICB9XG4gICBcbiAgICAudmZtcy1jbGllbnR7XG4gICAgICAgICZfX3dyYXBwZXJ7XG4gICAgICAgICAgICBoZWlnaHQ6ODRweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6I2ZmZmZmZjtcbiAgICAgICAgfVxuICAgICAgICAmX190ZXh0e1xuICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICB9XG4gICAgICAgIGF7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDoyMHB4O1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDowO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAzMDBweDsgICAgIFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOjIwcHg7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOjIwcHg7XG4gICBcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFDQUEsQUFBQSw0QkFBNEIsQ0FBQTtFQUN4QixnQkFBZ0IsRUFBRSx3RkFBd0Y7RUFDMUcsaUJBQWlCLEVBQUUsU0FBUztFQUM1QixlQUFlLEVBQUUsS0FBSztFQUN0QixxQkFBcUIsRUFBRSxNQUFNO0NBcUdoQzs7QUFwR0csTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQUx2QyxBQUFBLDRCQUE0QixDQUFBO0lBTXBCLGdCQUFnQixFQUFFLHdGQUF3RjtHQW1Hakg7OztBQWpHRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBUnZDLEFBQUEsNEJBQTRCLENBQUE7SUFTcEIsZ0JBQWdCLEVBQUUsc0ZBQXNGO0dBZ0cvRzs7O0FBN0ZPLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFaM0MsQUFXSSw0QkFYd0IsQ0FXeEIsZUFBZSxDQUFBO0lBRVIsV0FBVyxFQUFFLFVBQVU7R0FHN0I7OztBQWhCTCxBQWtCUSw0QkFsQm9CLENBa0JuQixjQUFLLENB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 */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi52ZmVzLW1zLWNvbnRlbnQtYWRpY2lvbmFsZXN7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL3Rlc3QtbnVkZ2UtbGluZWFzLWFkaWNpb25hbGVzLW1vYmlsZS5wbmcnKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbi14OiBjZW50ZXI7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL3Rlc3QtbnVkZ2UtbGluZWFzLWFkaWNpb25hbGVzLXRhYmxldC5wbmcnKTtcbiAgICB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL3Rlc3QtbnVkZ2UtbGluZWFzLWFkaWNpb25hbGVzLWRlc2sucG5nJyk7XG4gICAgfVxuICAgIC52Zm1zLWNvbnRhaW5lcntcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgICAgIH1cblxuICAgIH1cbiAgICAudmZtcy1idG4ge1xuICAgICAgICAmLWluZm97XG4gICAgICAgICAgICBib3JkZXI6bm9uZTtcbiAgICAgICAgfVxuICAgICAgICAmX19kaXJlY3Rpb24ge1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgICAgICBcbiAgICAudmZtcy10ZWwtdGV4dHtcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAxMjBweDtcbiAgICAgICAgfVxuICAgICAgICBhe1xuICAgICAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG5cbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy1oZXJvIHtcbiAgICAgICAgJl9faW1nIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6IDE0NXB4O1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDE1MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDMyOXB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZfX3RpdGxlIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNDBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiA1NnB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJi1iaWcge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICAgICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDQwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNTZweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJl9fc3VidGl0bGUge1xuICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwKSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDI4cHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICBcbiAgICB9XG4gICBcbiAgICAudmZtcy1jbGllbnR7XG4gICAgICAgICZfX3dyYXBwZXJ7XG4gICAgICAgICAgICBoZWlnaHQ6ODRweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6I2ZmZmZmZjtcbiAgICAgICAgfVxuICAgICAgICAmX190ZXh0e1xuICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICB9XG4gICAgICAgIGF7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDoyMHB4O1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDowO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAzMDBweDsgICAgIFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOjIwcHg7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOjIwcHg7XG4gICBcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFDQUEsQUFBQSw0QkFBNEIsQ0FBQTtFQUN4QixnQkFBZ0IsRUFBRSx3RkFBd0Y7RUFDMUcsaUJBQWlCLEVBQUUsU0FBUztFQUM1QixlQUFlLEVBQUUsS0FBSztFQUN0QixxQkFBcUIsRUFBRSxNQUFNO0NBcUdoQzs7QUFwR0csTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQUx2QyxBQUFBLDRCQUE0QixDQUFBO0lBTXBCLGdCQUFnQixFQUFFLHdGQUF3RjtHQW1Hakg7OztBQWpHRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBUnZDLEFBQUEsNEJBQTRCLENBQUE7SUFTcEIsZ0JBQWdCLEVBQUUsc0ZBQXNGO0dBZ0cvRzs7O0FBN0ZPLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFaM0MsQUFXSSw0QkFYd0IsQ0FXeEIsZUFBZSxDQUFBO0lBRVIsV0FBVyxFQUFFLFVBQVU7R0FHN0I7OztBQWhCTCxBQWtCUSw0QkFsQm9CLENBa0JuQixjQUFLLENB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 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
