/**
 * Vodafone Reboot Framework: Version 2.4.1. Generation Date: 2020-09-07T09:48:46.825Z
 */

.vfes-ms-content .vfms-flex__container {
  display: flex;
  flex-direction: column;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-flex__container {
    flex-direction: row;
  }
}

.vfes-ms-content .vfms-flex__item:nth-of-type(1) {
  order: 2;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-flex__item:nth-of-type(1) {
    order: 1;
    width: 40%;
  }
}

.vfes-ms-content .vfms-flex__item:nth-of-type(2) {
  order: 1;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-flex__item:nth-of-type(2) {
    order: 2;
    width: 60%;
  }
}

.vfes-ms-content .vfms-text {
  text-align: center;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-text {
    text-align: left;
    max-width: 34.375rem;
  }
}

.vfes-ms-content .vfms-text-p {
  padding: 1rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-text-p {
    padding: 2.5rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-text-p {
    padding: 7.8125rem 7.8125rem 0 7.8125rem;
  }
}

@media screen and (min-width: 93.75rem) {
  .vfes-ms-content .vfms-text-p {
    padding: 8.125rem 0 0 30%;
  }
}

.vfes-ms-content .vfms-video__container {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content .vfms-video__container {
    min-width: 55.625rem;
  }
}

.vfes-ms-content .vfms-video__img {
  width: 100%;
}

.vfes-ms-content .vfms-video-responsive {
  padding-bottom: 56.25%;
  padding-top: 1.875rem;
  height: 0;
  overflow: hidden;
  min-height: 15rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-video-responsive {
    min-height: 32rem;
  }
}

.vfes-ms-content .vfms-video-responsive iframe,
.vfes-ms-content .vfms-video-responsive object,
.vfes-ms-content .vfms-video-responsive embed {
  position: absolute;
  top: 0;
  left: 0.625rem;
  width: 100%;
  height: 100%;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content .vfms-video-responsive iframe,
  .vfes-ms-content .vfms-video-responsive object,
  .vfes-ms-content .vfms-video-responsive embed {
    left: 0;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50e1xuICAgIC52Zm1zLWZsZXh7XG4gICAgICAgICZfX2NvbnRhaW5lciB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmX19pdGVtOm50aC1vZi10eXBlKDEpIHtcbiAgICAgICAgICAgIG9yZGVyOiAyO1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgICBvcmRlcjogMTtcbiAgICAgICAgICAgICAgICB3aWR0aDogNDAlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZfX2l0ZW06bnRoLW9mLXR5cGUoMikge1xuICAgICAgICAgICAgb3JkZXI6IDE7XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgICAgIG9yZGVyOiAyO1xuICAgICAgICAgICAgICAgIHdpZHRoOiA2MCU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9IFxuICAgIC52Zm1zLXRleHQge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA1NTBweDtcbiAgICAgICAgfVxuICAgICAgICAmLXAge1xuICAgICAgICAgICAgcGFkZGluZzogMTZweDtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogNDBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMTI1cHggMTI1cHggMCAxMjVweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE1MDBweCkge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEzMHB4IDAgMCAzMCU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmbXMtdmlkZW97XG4gICAgICAgICZfX2NvbnRhaW5lciB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgICBtaW4td2lkdGg6IDg5MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZfX2ltZyB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgIH0gXG4gICAgLnZmbXMtdmlkZW8tcmVzcG9uc2l2ZSB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA1Ni4yNSU7XG4gICAgICAgIHBhZGRpbmctdG9wOiAzMHB4O1xuICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIG1pbi1oZWlnaHQ6IDI0MHB4O1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgbWluLWhlaWdodDogNTEycHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgICAgIFxuICAgIC52Zm1zLXZpZGVvLXJlc3BvbnNpdmUgaWZyYW1lLFxuICAgIC52Zm1zLXZpZGVvLXJlc3BvbnNpdmUgb2JqZWN0LFxuICAgIC52Zm1zLXZpZGVvLXJlc3BvbnNpdmUgZW1iZWQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMTBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpe1xuICAgICAgICBsZWZ0OiAwO1xuICAgIH1cbiAgICB9XG59Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0NBLEFBRVEsZ0JBRlEsQ0FFUCxxQkFBVyxDQUFDO0VBQ1QsT0FBTyxFQUFFLElBQUk7RUFDYixjQUFjLEVBQUUsTUFBTTtDQUl6Qjs7QUFIRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBTC9DLEFBRVEsZ0JBRlEsQ0FFUCxxQkFBVyxDQUFDO0lBSUwsY0FBYyxFQUFFLEdBQUc7R0FFMUI7OztBQVJULEFBU1EsZ0JBVFEsQ0FTUCxnQkFBTSxBQUFBLFlBQWEsQ0FBQSxDQUFDLEVBQUU7RUFDbkIsS0FBSyxFQUFFLENBQUM7Q0FLWDs7QUFKRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBWC9DLEFBU1EsZ0JBVFEsQ0FTUCxnQkFBTSxBQUFBLFlBQWEsQ0FBQSxDQUFDLEVBQUU7SUFHZixLQUFLLEVBQUUsQ0FB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 */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50e1xuICAgIC52Zm1zLWZsZXh7XG4gICAgICAgICZfX2NvbnRhaW5lciB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmX19pdGVtOm50aC1vZi10eXBlKDEpIHtcbiAgICAgICAgICAgIG9yZGVyOiAyO1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgICBvcmRlcjogMTtcbiAgICAgICAgICAgICAgICB3aWR0aDogNDAlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZfX2l0ZW06bnRoLW9mLXR5cGUoMikge1xuICAgICAgICAgICAgb3JkZXI6IDE7XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgICAgIG9yZGVyOiAyO1xuICAgICAgICAgICAgICAgIHdpZHRoOiA2MCU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9IFxuICAgIC52Zm1zLXRleHQge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA1NTBweDtcbiAgICAgICAgfVxuICAgICAgICAmLXAge1xuICAgICAgICAgICAgcGFkZGluZzogMTZweDtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogNDBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk3MHB4KSB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMTI1cHggMTI1cHggMCAxMjVweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE1MDBweCkge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEzMHB4IDAgMCAzMCU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmbXMtdmlkZW97XG4gICAgICAgICZfX2NvbnRhaW5lciB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgICBtaW4td2lkdGg6IDg5MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZfX2ltZyB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgIH0gXG4gICAgLnZmbXMtdmlkZW8tcmVzcG9uc2l2ZSB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA1Ni4yNSU7XG4gICAgICAgIHBhZGRpbmctdG9wOiAzMHB4O1xuICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIG1pbi1oZWlnaHQ6IDI0MHB4O1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgbWluLWhlaWdodDogNTEycHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgICAgIFxuICAgIC52Zm1zLXZpZGVvLXJlc3BvbnNpdmUgaWZyYW1lLFxuICAgIC52Zm1zLXZpZGVvLXJlc3BvbnNpdmUgb2JqZWN0LFxuICAgIC52Zm1zLXZpZGVvLXJlc3BvbnNpdmUgZW1iZWQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMTBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpe1xuICAgICAgICBsZWZ0OiAwO1xuICAgIH1cbiAgICB9XG59Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0NBLEFBRVEsZ0JBRlEsQ0FFUCxxQkFBVyxDQUFDO0VBQ1QsT0FBTyxFQUFFLElBQUk7RUFDYixjQUFjLEVBQUUsTUFBTTtDQUl6Qjs7QUFIRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBTC9DLEFBRVEsZ0JBRlEsQ0FFUCxxQkFBVyxDQUFDO0lBSUwsY0FBYyxFQUFFLEdBQUc7R0FFMUI7OztBQVJULEFBU1EsZ0JBVFEsQ0FTUCxnQkFBTSxBQUFBLFlBQWEsQ0FBQSxDQUFDLEVBQUU7RUFDbkIsS0FBSyxFQUFFLENBQUM7Q0FLWDs7QUFKRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBWC9DLEFBU1EsZ0JBVFEsQ0FTUCxnQkFBTSxBQUFBLFlBQWEsQ0FBQSxDQUFDLEVBQUU7SUFHZixLQUFLLEVBQUUsQ0FB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 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
