/**
 * Vodafone Reboot Framework: Version 15.5.1. Generation Date: 2020-01-17T12:28:15.497Z
 */

.vfes-ms-content-packs5g {
  scroll-behavior: smooth;
}

.vfes-ms-content-packs5g .vfms-main .vfms-nomarginbottom {
  margin-bottom: 0;
}

.vfes-ms-content-packs5g .vfms-main__link {
  text-decoration: underline;
}

.vfes-ms-content-packs5g .vfms-main .vfes-carousel {
  padding: 0;
}

.vfes-ms-content-packs5g .vfms-main__vr {
  max-width: 6.25rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-packs5g .vfms-main__fullwidth {
    width: 100%;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-packs5g .vfms-main__card--height {
    min-height: 12.5rem;
  }
}

.vfes-ms-content-packs5g .vfms-specs__device {
  max-width: 50%;
}

.vfes-ms-content-packs5g .vfms-specs__line {
  border-bottom: 0.0625rem solid #333;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-packs5g .vfms-specs__device-container1 {
    width: 90%;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-packs5g .vfms-specs__device-container1 {
    width: 80%;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-packs5g .vfms-specs__device-container2 {
    width: 10%;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-packs5g .vfms-flexrow__md {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-packs5g .vfms-flex__justify--evenly {
    -webkit-box-pack: space-evenly;
            justify-content: space-evenly;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-packs5g .vfes-paragraph {
    font-size: 1.125rem;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-packs5g .vfes-title--2 {
    font-size: 2.5rem;
  }
}

.vfes-ms-content-packs5g .vfms-ticket {
  position: fixed;
  bottom: 0;
  right: 0;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-packs5g .vfms-ticket {
    top: 9.375rem;
    right: 6.25rem;
  }
}

.vfes-ms-content-packs5g .vfms-ticket__dropdown-button {
  position: absolute;
  top: 0.1875rem;
  right: 0.625rem;
  color: #e60000;
}

.vfes-ms-content-packs5g .vfms-ticket .vfes-card__list-header .vfes-card__list-paragraphs .vfes-paragraph {
  width: auto;
}

.vfes-ms-content-packs5g .vfes-card__list {
  margin-bottom: 0;
}

.vfes-ms-content-packs5g .vfes-card__list-content .vfes-paragraph {
  margin-left: 3.125rem;
}

.vfes-ms-content-packs5g .vfes-card__list-content .vfes-card__list-list {
  margin-left: 3.125rem;
}

.vfes-ms-content-packs5g .vfes-card__list-footer {
  border-top: 0.0625rem solid #e60000;
}

.vfes-ms-content-packs5g .vfes-card__list-footer .vfes-button {
  width: 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
