/**
 * Vodafone Reboot Framework: Version 15.6.0. Generation Date: 2020-02-28T12:32:51.863Z
 */

.vfes-ms-content-oferta .vfms-card {
  min-height: 18.75rem;
  background-image: url("https://www.vodafone.es/c/statics/imagen/background-banner-50-3-tarifas-resp.png");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  text-align: center;
  display: -webkit-box;
  display: flex;
  -webkit-box-align: end;
          align-items: flex-end;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-oferta .vfms-card {
    min-height: 7.5rem;
    background-image: url("https://www.vodafone.es/c/statics/imagen/background-banner-50-3-tarifas-tablet.png");
    -webkit-box-pack: end;
            justify-content: flex-end;
    -webkit-box-align: center;
            align-items: center;
    text-align: left;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-oferta .vfms-card {
    min-height: 9.0625rem;
    background-image: url("https://www.vodafone.es/c/statics/imagen/background-banner-50-3-tarifas-desk.png");
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-oferta .vfms-card__text {
    max-width: 23.125rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-oferta .vfms-card__text {
    max-width: 37.5rem;
  }
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-oferta .vfes-paragraph--large {
    font-size: 1.25rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-oferta .vfes-paragraph--large {
    font-size: 1.625rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LW9mZXJ0YXtcbiAgICAudmZtcy1jYXJkIHtcbiAgICAgICAgbWluLWhlaWdodDogMzAwcHg7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iYWNrZ3JvdW5kLWJhbm5lci01MC0zLXRhcmlmYXMtcmVzcC5wbmcnKTtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEyMHB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL2JhY2tncm91bmQtYmFubmVyLTUwLTMtdGFyaWZhcy10YWJsZXQucG5nJyk7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIH1cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDE0NXB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL2JhY2tncm91bmQtYmFubmVyLTUwLTMtdGFyaWZhcy1kZXNrLnBuZycpO1xuICAgICAgICB9XG4gICAgICAgICZfX3RleHQge1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDM3MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDYwMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSBcbiAgICAudmZlcy1wYXJhZ3JhcGgtLWxhcmdlIHtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgfVxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgZm9udC1zaXplOiAyNnB4O1xuICAgICAgICB9XG4gICAgfVxufSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNDQSxBQUNJLHVCQURtQixDQUNuQixVQUFVLENBQUM7RUFDUCxVQUFVLEVBQUUsS0FBSztFQUNqQixnQkFBZ0IsRUFBRSx1RkFBdUY7RUFDekcsZUFBZSxFQUFFLEtBQUs7RUFDdEIsaUJBQWlCLEVBQUUsU0FBUztFQUM1QixtQkFBbUIsRUFBRSxNQUFNO0VBQzNCLFVBQVUsRUFBRSxNQUFNO0VBQ2xCLE9BQU8sRUFBRSxJQUFJO0VBQ2IsV0FBVyxFQUFFLFFBQVE7Q0FvQnhCOztBQW5CRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBVjNDLEFBQ0ksdUJBRG1CLENBQ25CLFVBQVUsQ0FBQztJQVVILFVBQVUsRUFBRSxLQUFLO0lBQ2pCLGdCQUFnQixFQUFFLHlGQUF5RjtJQUMzRyxlQUFlLEVBQUUsUUFBUTtJQUN6QixXQUFXLEVBQUUsTUFBTTtJQUNuQixVQUFVLEVBQUUsSUFBSTtHQWN2Qjs7O0FBWkcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWpCM0MsQUFDSSx1QkFEbUIsQ0FDbkIsVUFBVSxDQUFDO0lBaUJILFVBQVUsRUFBRSxLQUFLO0lBQ2pCLGdCQUFnQixFQUFFLHVGQUF1RjtHQVVoSDs7O0FBUE8sTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXRCL0MsQUFxQlEsdUJBckJlLENBcUJkLGdCQUFNLENBQUM7SUFFQSxTQUFTLEVBQUUsS0FBSztHQUt2Qjs7O0FBSEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXpCL0MsQUFxQlEsdUJBckJlLENBcUJkLGdCQUFNLENBQUM7SUFLQSxTQUFTLEVBQUUsS0FBSztHQUV2Qjs7O0FBR0QsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQS9CM0MsQUE4QkksdUJBOUJtQixDQThCbkIsc0JBQXNCLENBQUM7SUFFZixTQUFTLEVBQUUsSUFBSTtHQUt0Qjs7O0FBSEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWxDM0MsQUE4QkksdUJBOUJtQixDQThCbkIsc0JBQXNCLENBQUM7SUFLZixTQUFTLEVBQUUsSUFBSTtHQUV0QiJ9 */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LW9mZXJ0YXtcbiAgICAudmZtcy1jYXJkIHtcbiAgICAgICAgbWluLWhlaWdodDogMzAwcHg7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9iYWNrZ3JvdW5kLWJhbm5lci01MC0zLXRhcmlmYXMtcmVzcC5wbmcnKTtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEyMHB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL2JhY2tncm91bmQtYmFubmVyLTUwLTMtdGFyaWZhcy10YWJsZXQucG5nJyk7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIH1cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDE0NXB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL2JhY2tncm91bmQtYmFubmVyLTUwLTMtdGFyaWZhcy1kZXNrLnBuZycpO1xuICAgICAgICB9XG4gICAgICAgICZfX3RleHQge1xuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDM3MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDYwMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSBcbiAgICAudmZlcy1wYXJhZ3JhcGgtLWxhcmdlIHtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgfVxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgZm9udC1zaXplOiAyNnB4O1xuICAgICAgICB9XG4gICAgfVxufSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNDQSxBQUNJLHVCQURtQixDQUNuQixVQUFVLENBQUM7RUFDUCxVQUFVLEVBQUUsS0FBSztFQUNqQixnQkFBZ0IsRUFBRSx1RkFBdUY7RUFDekcsZUFBZSxFQUFFLEtBQUs7RUFDdEIsaUJBQWlCLEVBQUUsU0FBUztFQUM1QixtQkFBbUIsRUFBRSxNQUFNO0VBQzNCLFVBQVUsRUFBRSxNQUFNO0VBQ2xCLE9BQU8sRUFBRSxJQUFJO0VBQ2IsV0FBVyxFQUFFLFFBQVE7Q0FvQnhCOztBQW5CRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBVjNDLEFBQ0ksdUJBRG1CLENBQ25CLFVBQVUsQ0FBQztJQVVILFVBQVUsRUFBRSxLQUFLO0lBQ2pCLGdCQUFnQixFQUFFLHlGQUF5RjtJQUMzRyxlQUFlLEVBQUUsUUFBUTtJQUN6QixXQUFXLEVBQUUsTUFBTTtJQUNuQixVQUFVLEVBQUUsSUFBSTtHQWN2Qjs7O0FBWkcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWpCM0MsQUFDSSx1QkFEbUIsQ0FDbkIsVUFBVSxDQUFDO0lBaUJILFVBQVUsRUFBRSxLQUFLO0lBQ2pCLGdCQUFnQixFQUFFLHVGQUF1RjtHQVVoSDs7O0FBUE8sTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXRCL0MsQUFxQlEsdUJBckJlLENBcUJkLGdCQUFNLENBQUM7SUFFQSxTQUFTLEVBQUUsS0FBSztHQUt2Qjs7O0FBSEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXpCL0MsQUFxQlEsdUJBckJlLENBcUJkLGdCQUFNLENBQUM7SUFLQSxTQUFTLEVBQUUsS0FBSztHQUV2Qjs7O0FBR0QsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQS9CM0MsQUE4QkksdUJBOUJtQixDQThCbkIsc0JBQXNCLENBQUM7SUFFZixTQUFTLEVBQUUsSUFBSTtHQUt0Qjs7O0FBSEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQWxDM0MsQUE4QkksdUJBOUJtQixDQThCbkIsc0JBQXNCLENBQUM7SUFLZixTQUFTLEVBQUUsSUFBSTtHQUV0QiJ9 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
