/**
 * Vodafone Reboot Framework: Version 2.2.2. Generation Date: 2020-05-13T07:52:39.205Z
 */

input:disabled {
  border: none;
  box-shadow: none;
  background: #fff;
  color: #9a9a9a;
}

.vfes-ms-content {
  /*********************************************************/
  /****************** CONFIGURATOR STYLES ******************/
  /*********************************************************/
  /**************************************************/
  /***************** TICKET STYLES ******************/
  /**************************************************/
  /**************************************************/
  /***************** Channel MODAL ******************/
  /**************************************************/
}

.vfes-ms-content .btn-eliminar {
  display: none;
}

.vfes-ms-content .mes {
  cursor: pointer;
}

.vfes-ms-content .carateristicas__title {
  padding-top: 3.125rem;
}

.vfes-ms-content .info-capita {
  position: absolute;
  z-index: 8;
  bottom: 10rem;
  left: 0;
  width: auto;
  height: 15.625rem;
}

.vfes-ms-content .btn-info-icon {
  cursor: pointer;
}

.vfes-ms-content .capita-cerrar {
  cursor: pointer;
  position: absolute;
  top: 1.25rem;
  right: 5%;
  z-index: 10;
  width: 1.25rem;
  height: 1.25rem;
  background-color: transparent;
}

.vfes-ms-content .canon-container {
  position: relative;
  max-width: 15.625rem;
  display: flex;
  justify-content: center;
  align-items: center;
}

.vfes-ms-content .btn-info-icon {
  margin-left: 0.625rem;
  margin-bottom: 0.3125rem;
}

.vfes-ms-content .vfes-detalle {
  margin-left: 0.3125rem;
}

.vfes-ms-content .ticket-icon-container {
  width: 2.5rem;
  height: 2.5rem;
}

.vfes-ms-content .ticket-icon {
  margin-left: 0.3125rem;
  margin-top: 0.3125rem;
}

.vfes-ms-content .meses {
  margin-left: 1.25rem;
}

.vfes-ms-content .meses__container {
  display: flex;
  justify-content: start;
  align-items: center;
  margin-bottom: 1.25rem;
}

.vfes-ms-content .meses__container div {
  margin-right: 0.625rem;
}

.vfes-ms-content .caracteristicas__container {
  margin: 0 auto;
}

.vfes-ms-content h4 {
  margin-top: 0;
}

.vfes-ms-content input[type="radio"]:disabled {
  opacity: .2;
}

.vfes-ms-content input[type="radio"]:disabled + label {
  opacity: .5;
}

.vfes-ms-content .vfms-accesorio {
  min-height: 15rem !important;
}

.vfes-ms-content .vfms-adicionales {
  min-height: 15.3125rem !important;
}

.vfes-ms-content .vfms-btn-add {
  width: 9.6875rem;
  position: absolute;
  bottom: 1.5625rem;
  right: 0.9375rem;
}

.vfes-ms-content .vfms-btn-add2 {
  width: 9.6875rem;
  position: absolute;
  bottom: 1.5625rem;
  right: 0.9375rem;
}

.vfes-ms-content .vfms-rates-img {
  margin-top: 1.25rem;
  margin-left: 1.25rem;
}

.vfes-ms-content .vfms-tabs__container {
  display: flex;
  justify-content: space-around;
  margin-bottom: 0.3125rem;
  margin-top: 0.3125rem;
}

.vfes-ms-content .vfes-tabs__tab {
  max-width: 10rem;
  height: 3.125rem;
  padding: .75rem .25rem;
  width: 100%;
  white-space: normal;
}

.vfes-ms-content .vfes-tabs__tab-active::after {
  content: '';
  display: none;
  position: absolute;
  bottom: -0.625rem;
  left: 50%;
  width: 0;
  height: 0;
  border-top: 0.3125rem solid #E60000;
  border-left: 0.3125rem solid transparent;
  border-right: 0.3125rem solid transparent;
  border-bottom: 0.3125rem solid transparent;
  transform: translate(-50%);
}

.vfes-ms-content .btn-tab {
  width: 100%;
}

.vfes-ms-content .vfes-form__label {
  padding-bottom: 1rem;
}

.vfes-ms-content .menu {
  height: 3.4375rem;
  background-color: #ffffff;
}

.vfes-ms-content .menu__img {
  padding-top: 0.625rem;
  padding-left: 0.625rem;
}

.vfes-ms-content .device__text {
  color: #333333;
  margin-left: 0.625rem;
  margin-bottom: 1.875rem;
}

.vfes-ms-content .device__text p {
  margin: 0 0 0.0625rem 0;
  position: relative;
}

.vfes-ms-content .device__link {
  margin-top: 5.875rem;
  position: relative;
}

.vfes-ms-content .device__link a {
  color: #E60000;
}

.vfes-ms-content .device__flex {
  display: flex;
}

.vfes-ms-content .device__title {
  font-size: 1.25rem;
  margin-bottom: 0.9375rem;
  margin-top: 0.9375rem;
}

.vfes-ms-content :focus {
  outline: 0.1875rem solid #007C92;
}

.vfes-ms-content .vfes-button:not(.vfes-button--tertiary) {
  border: 0.0625rem solid transparent;
}

.vfes-ms-content .vfes-layout__wrapper {
  overflow: hidden;
}

.vfes-ms-content .vfes-button--secondary[disabled] {
  background-color: #ccc;
  color: #fff;
  pointer-events: none;
}

.vfes-ms-content .vfms-banner-layout {
  padding: 1.875rem 0;
}

.vfes-ms-content .vfms-banner .vfes-title--1 {
  margin-bottom: 1.25rem;
}

.vfes-ms-content .vfms-banner .vfes-title--3 {
  margin-bottom: 0;
}

.vfes-ms-content .vfms-label__outstanding {
  position: absolute;
  top: -1.375rem;
  padding: 0.3125rem 0.625rem 0.3125rem 0.625rem;
  border-radius: 0.375rem 0.375rem 0 0;
}

.vfes-ms-content .vfms-configurator {
  padding: 1rem 0;
}

.vfes-ms-content .vfms-configurator .vfms-label__outstanding + .vfes-card {
  border-radius: 0 0.375rem 0.375rem 0.375rem;
}

.vfes-ms-content .vfms-configurator__status {
  display: block;
  position: absolute;
  right: -1.5625rem;
  top: -0.4375rem;
  width: 0;
  height: 0;
  border-left: 2.5rem solid transparent;
  border-right: 2.5rem solid transparent;
  border-top: 2.5rem solid #cccccc;
  background-color: #ccc;
  transform: rotate(-135deg);
  z-index: 1;
  transition: border-color 0.3s ease-out, background-color 0.3s ease-out;
  opacity: 0;
}

.vfes-ms-content .vfms-configurator__icon {
  position: absolute;
  top: 0.3125rem;
  right: 0.3125rem;
  z-index: 2;
}

.vfes-ms-content .vfms-configurator__icon--tick {
  display: none;
}

.vfes-ms-content .vfms-configurator__remove {
  display: none;
}

.vfes-ms-content .vfms-configurator .added .vfms-configurator__status {
  background-color: #428600;
  border-top-color: #428600;
  opacity: 1;
  transition: 0.5s;
}

.vfes-ms-content .vfms-configurator .added .vfms-configurator__icon--tick {
  display: inline-block;
}

.vfes-ms-content .vfms-configurator .added .vfms-configurator__icon--plus {
  display: none;
}

.vfes-ms-content .vfms-configurator .added .vfms-configurator__add {
  display: none;
}

.vfes-ms-content .vfms-configurator .added .vfms-configurator__remove {
  display: inline-block;
}

.vfes-ms-content .vfms-configurator .added.vfms-configurator__single .vfms-configurator__add {
  display: inline-block;
}

.vfes-ms-content .vfms-configurator .added2 .vfms-configurator__status {
  background-color: #428600;
  border-top-color: #428600;
  opacity: 1;
  transition: 0.5s;
}

.vfes-ms-content .vfms-configurator .added2 .vfms-configurator__icon--tick {
  display: inline-block;
}

.vfes-ms-content .vfms-configurator .added2 .vfms-configurator__icon--plus {
  display: none;
}

.vfes-ms-content .vfms-configurator .added2 .vfms-configurator__add {
  display: none;
}

.vfes-ms-content .vfms-configurator .added2 .vfms-configurator__remove {
  display: inline-block;
}

.vfes-ms-content .vfms-configurator .added2.vfms-configurator__single .vfms-configurator__add {
  display: inline-block;
}

.vfes-ms-content .vfms-configurator .added3 .vfms-configurator__status {
  background-color: #428600;
  border-top-color: #428600;
  opacity: 1;
  transition: 0.5s;
}

.vfes-ms-content .vfms-configurator .added3 .vfms-configurator__icon--tick {
  display: inline-block;
}

.vfes-ms-content .vfms-configurator .added3 .vfms-configurator__icon--plus {
  display: none;
}

.vfes-ms-content .vfms-configurator .added3 .vfms-configurator__add {
  display: none;
}

.vfes-ms-content .vfms-configurator .added3 .vfms-configurator__remove {
  display: inline-block;
}

.vfes-ms-content .vfms-configurator .added3.vfms-configurator__single .vfms-configurator__add {
  display: inline-block;
}

.vfes-ms-content .vfms-configurator .vfes-title {
  margin-bottom: 0.625rem;
  text-align: center;
}

.vfes-ms-content .vfms-configurator .vfes-layout__item {
  overflow: hidden;
}

.vfes-ms-content .vfms-card-configurator {
  display: flex;
  padding: 0.875rem 0 1.5rem;
  justify-content: space-between;
  flex-wrap: wrap;
}

.vfes-ms-content .vfms-card-configurator img {
  margin-bottom: 0;
}

.vfes-ms-content .vfms-card-configurator p {
  margin-bottom: 0;
}

.vfes-ms-content .vfms-card-configurator__column {
  display: inline-flex;
  align-items: center;
  flex: 1 50%;
}

.vfes-ms-content .vfms-card-configurator__column:last-child {
  justify-content: space-around;
}

.vfes-ms-content .vfms-card-configurator__info {
  display: inline-flex;
  flex-direction: column;
}

.vfes-ms-content .vfms-card-configurator__counter {
  position: relative;
  padding: 0 1.25rem;
}

.vfes-ms-content .vfms-card-configurator__num {
  display: inline-block;
  border: 0.0625rem solid #cccccc;
  padding: 1.4375rem 2.5rem;
  font-size: 1.25rem;
  line-height: 1.75rem;
  border-radius: 0.375rem;
}

.vfes-ms-content .vfms-card-configurator__button {
  width: 2.5rem;
  height: 2.5rem;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  box-shadow: 0 0.125rem 0.25rem 0 rgba(0, 0, 0, 0.2);
  border: 0.0625rem solid #cccccc;
  border-radius: 100%;
  background-color: #e60000;
  color: #FFFFFF;
  opacity: 1;
  transition: opacity 0.3s ease-out, left 0.3s ease-out;
}

.vfes-ms-content .vfms-card-configurator__button.hide {
  display: inline-block;
  pointer-events: none;
  opacity: 0;
}

.vfes-ms-content .vfms-card-configurator__button-less {
  left: 0;
}

.vfes-ms-content .vfms-card-configurator__button-less.hide {
  left: -0.625rem;
}

.vfes-ms-content .vfms-card-configurator__button-more {
  right: 0;
}

.vfes-ms-content .vfms-card-configurator__button-more.hide {
  right: -0.625rem;
}

.vfes-ms-content .vfms-card-configurator.vfms-card-terminal {
  flex-direction: column;
  text-align: left;
  padding: 0.5rem 1.25rem 1rem;
}

.vfes-ms-content .vfms-card-configurator.vfms-card-terminal.hide {
  display: none;
}

.vfes-ms-content .vfms-card-configurator.vfms-card-terminal.show {
  display: flex;
}

.vfes-ms-content .vfms-card-configurator.vfms-card-terminal .vfms-card-configurator__column {
  flex-direction: column;
  align-items: flex-start;
}

.vfes-ms-content .vfms-card-configurator.vfms-card-terminal .vfms-card-configurator__column img {
  align-self: center;
}

.vfes-ms-content .vfms-card-configurator.vfms-card-terminal .vfms-card-configurator__column .vfes-button {
  margin-top: 1rem;
}

.vfes-ms-content .vfms-card-one {
  min-height: 12.1875rem;
  border: none;
}

.vfes-ms-content .vfms-card-one .vfes-card-rate__dataitem-price {
  font-size: 1.25rem;
  text-align: left;
  line-height: 1.2;
}

.vfes-ms-content .vfms-card-one .vfes-card-rate__dataitem {
  padding: 0.625rem 0.3125rem 0 0.5rem;
}

.vfes-ms-content .vfms-card-one .vfes-card-rate__dataitem .vfes-title {
  line-height: 1.2;
}

.vfes-ms-content .vfms-card-one .vfes-card-rate__dataitem svg {
  width: 3.125rem;
  height: 3.125rem;
}

.vfes-ms-content .vfms-card-one .vfes-bestprice {
  display: flex;
  padding: 0.3125rem 0;
}

.vfes-ms-content .vfms-card-one .vfes-bestprice img {
  width: 1.5rem;
  height: 1.5rem;
}

.vfes-ms-content .vfms-card-one .vfms-card-rate__tooltip {
  position: relative;
  padding: 0.125rem 0 0.125rem 0;
  border-bottom: 0.0625rem solid #ebebeb;
  margin-bottom: 0.3125rem;
  display: flex;
  justify-content: center;
  align-items: center;
}

.vfes-ms-content .vfms-card-one .vfms-card-rate__tooltip p {
  margin-bottom: 0;
  display: flex;
  align-items: center;
  padding: 0 0.5rem 0 0.5rem;
}

.vfes-ms-content .vfms-card-one .vfms-card-rate__tooltip button {
  position: relative;
  bottom: initial;
  right: initial;
}

.vfes-ms-content .vfms-card-one .vfms-configurator__button {
  padding: 0.625rem 0.625rem 1.25rem 1.125rem;
  display: flex;
  flex-direction: column;
}

.vfes-ms-content .vfms-card-one--offer {
  border: 0.0625rem solid #d3d3d3;
}

.vfes-ms-content .vfms-card-one--offer-super {
  border: 0.0625rem solid #d3d3d3;
}

.vfes-ms-content .vfms-card-one--offer-color {
  border: 0.0625rem solid #d3d3d3;
}

.vfes-ms-content .vfms-card-packtv {
  padding: 1rem 1.25rem;
  position: relative;
  overflow: hidden;
  border: none;
}

.vfes-ms-content .vfms-card-packtv.vfms-card-tv--offer {
  border: 0.0625rem solid #9C2AA0;
}

.vfes-ms-content .vfms-card-packtv.vfms-card-tv--offer-albergine {
  border: 0.0625rem solid #5E2750;
}

.vfes-ms-content .vfms-card-packtv.vfms-card-tv--offercolour {
  border: 0.0625rem solid #00B0CA;
}

.vfes-ms-content .vfms-card-packtv__border {
  position: absolute;
  height: 0.75rem;
  left: 0;
  right: 0;
  top: 0;
}

.vfes-ms-content .vfms-card-packtv .vfes-button {
  width: 100%;
}

.vfes-ms-content .vfes-carousel--active {
  overflow: initial;
}

.vfes-ms-content .vfes-carousel--active .vfes-carousel__list-element {
  opacity: 1;
  transition: opacity 0.3s ease-out;
}

.vfes-ms-content .vfes-carousel--active .vfes-carousel__list-element--active {
  opacity: 1;
}

.vfes-ms-content .vfes-carousel__arrow {
  left: -0.75rem;
}

.vfes-ms-content .vfes-carousel__arrow--right {
  right: -0.75rem;
  left: auto;
}

.vfes-ms-content .vfms-ticket__body.hide + .vfes-card__list-footer {
  border-top: 0;
}

.vfes-ms-content .vfms-ticket__dropdown-button {
  position: absolute;
  top: 0.1875rem;
  right: 0.625rem;
  color: #e60000;
}

.vfes-ms-content .vfms-ticket__content {
  max-height: 18.75rem;
  overflow-y: auto;
}

.vfes-ms-content .vfms-ticket__overlay {
  position: fixed;
  background-color: rgba(0, 0, 0, 0.8);
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: block;
}

.vfes-ms-content .vfms-ticket__overlay.hide {
  display: none;
}

.vfes-ms-content .vfms-ticket__element {
  margin-bottom: 0.75rem;
}

.vfes-ms-content .vfms-ticket__element:last-child {
  margin-bottom: 0;
}

.vfes-ms-content .vfms-ticket__wrapper.fixed {
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: 7;
}

.vfes-ms-content .vfms-ticket .vfes-card__list-header .vfes-card__list-paragraphs .vfes-paragraph {
  width: auto;
}

.vfes-ms-content .vfes-alert {
  position: relative;
  height: 2.4375rem;
  top: 0.3125rem;
  overflow: hidden;
  transition: height 0.5s ease-out;
  letter-spacing: normal;
}

.vfes-ms-content .vfes-alert.hide {
  height: 0;
}

.vfes-ms-content .vfes-alert-body {
  background-color: #FFFFFF;
}

.vfes-ms-content .vfes-card__list {
  margin-bottom: 0;
}

.vfes-ms-content .vfes-card__list-content .vfes-paragraph {
  margin-left: 0.625rem;
}

.vfes-ms-content .vfes-card__list-content .vfes-card__list-list {
  margin-left: 0.625rem;
}

.vfes-ms-content .vfes-card__list-container.hide {
  display: none;
}

.vfes-ms-content .vfes-card__list-footer {
  border-top: 0.0625rem solid #e60000;
}

.vfes-ms-content .vfes-card__list-footer .vfes-button {
  width: 100%;
}

.vfes-ms-content .vfes-button.js-modal-confirm-accept {
  margin: 0.625rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content {
    /*********************************************************/
    /****************** CONFIGURATOR STYLES ******************/
    /*********************************************************/
  }
  .vfes-ms-content .vfms-card-configurator {
    padding: 1.125rem 2.6875rem 1.125rem 1.0625rem;
  }
  .vfes-ms-content .vfms-card-configurator.vfms-card-terminal {
    flex-direction: row;
    padding: 1.125rem 2.6875rem 1.125rem 1.0625rem;
  }
  .vfes-ms-content .vfms-card-configurator.vfms-card-terminal .vfms-card-configurator__column {
    flex-direction: row;
    align-items: center;
  }
  .vfes-ms-content .vfms-card-configurator.vfms-card-terminal .vfms-card-configurator__column img {
    width: 6.25rem;
    height: 6.25rem;
  }
  .vfes-ms-content .vfms-card-configurator.vfms-card-terminal .vfms-card-configurator__column .vfes-button {
    margin-top: 0;
    width: 9.375rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content {
    /*********************************************************/
    /****************** CONFIGURATOR STYLES ******************/
    /*********************************************************/
    /**************************************************/
    /***************** TICKET STYLES ******************/
    /**************************************************/
  }
  .vfes-ms-content .vfms-configurator .vfes-layout__item:not(.vfms-ticket__wrapper) {
    z-index: 8;
  }
  .vfes-ms-content .vfms-configurator .vfes-title {
    text-align: left;
  }
  .vfes-ms-content .vfms-card-configurator {
    padding: 1.125rem 2.375rem 1.125rem 0.375rem;
  }
  .vfes-ms-content .vfes-carousel__arrow {
    width: 2.5rem;
    height: 2.5rem;
  }
  .vfes-ms-content .vfes-carousel__arrow::after {
    height: 1rem;
    width: 1rem;
  }
  .vfes-ms-content .vfms-ticket {
    max-width: 23.75rem;
    width: 100%;
    float: right;
  }
  .vfes-ms-content .vfms-ticket__wrapper {
    position: relative;
    overflow: initial;
    top: 3.75rem;
  }
  .vfes-ms-content .vfms-ticket__wrapper.fixed {
    width: 100% !important;
    max-width: 75rem;
    bottom: auto;
    top: 5rem;
    bottom: initial;
    left: 50%;
    transform: translateX(-50%);
  }
  .vfes-ms-content .vfms-ticket__overlay {
    display: none;
  }
  .vfes-ms-content .vfms-ticket__content {
    max-height: 20rem;
  }
  .vfes-ms-content .vfes-alert {
    display: none;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsImlucHV0OmRpc2FibGVkLCBzZWxlY3Q6ZGlzYWJsZWQsIHRleHRhcmVhOmRpc2FibGVkIHtcbiAgICBib3JkZXI6bm9uZTtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgY29sb3I6ICM5YTlhOWE7XG59XG5cbi52ZmVzLW1zLWNvbnRlbnQge1xuICAgIC5idG4tZWxpbWluYXJ7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7ICBcbiAgICB9XG4gICAgLm1lc2Vze1xuICAgICAgICAvL2Rpc3BsYXk6bm9uZTtcbiAgICB9XG4gICAgLm1lc3tcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbiAgICAuY2FyYXRlcmlzdGljYXNfX3RpdGxle1xuICAgICAgICBwYWRkaW5nLXRvcDo1MHB4O1xuICAgIH1cbiAgICAuaW5mby1jYXBpdGF7XG4gICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICB6LWluZGV4OiA4O1xuICAgICAgICBib3R0b206IDE2MHB4O1xuICAgICAgICBsZWZ0OjA7XG4gICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICBoZWlnaHQ6MjUwcHg7XG4gICAgfVxuICAgIC5idG4taW5mby1pY29ue1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgfVxuICAgIC5jYXBpdGEtY2VycmFye1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOjIwcHg7XG4gICAgICAgIHJpZ2h0OjUlO1xuICAgICAgICB6LWluZGV4OiAxMDtcbiAgICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICAgIGhlaWdodDoyMHB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O1xuICAgIH1cbiAgICAuY2Fub24tY29udGFpbmVye1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIG1heC13aWR0aDogMjUwcHg7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbiAgICAuYnRuLWluZm8taWNvbntcbiAgICAgICAgbWFyZ2luLWxlZnQ6MTBweDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICAgIH1cbiAgICAudmZlcy1kZXRhbGxle1xuICAgICAgICBtYXJnaW4tbGVmdDo1cHg7XG4gICAgfVxuICAgIC50aWNrZXQtaWNvbi1jb250YWluZXJ7XG4gICAgICAgIHdpZHRoOjQwcHg7XG4gICAgICAgIGhlaWdodDogNDBweDtcbiAgICB9XG4gICAgLnRpY2tldC1pY29ue1xuICAgICAgIG1hcmdpbi1sZWZ0OjVweDtcbiAgICAgICBtYXJnaW4tdG9wOjVweDtcbiAgICAgICAgXG4gICAgfVxuXG4gICAgLm1lc2Vze1xuICAgICAgICBtYXJnaW4tbGVmdDoyMHB4O1xuICAgICAgICAmX19jb250YWluZXJ7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzdGFydDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgICAgICAgZGl2e1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICAgICAgICAgIH0gICAgICAgXG4gICAgICAgIH1cbiAgICB9XG4gICAgLmNhcmFjdGVyaXN0aWNhc3tcbiAgICAgICAgJl9fY29udGFpbmVye1xuXG4gICAgICAgICAgICBtYXJnaW46MCBhdXRvO1xuICAgICAgICAgICBcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGg0e1xuICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgIH1cblxuXG4gICAgaW5wdXRbdHlwZT1cInJhZGlvXCJdOmRpc2FibGVkIHtcbiAgICAgICAgb3BhY2l0eTouMjtcbiAgICB9XG4gICAgaW5wdXRbdHlwZT1cInJhZGlvXCJdOmRpc2FibGVkK2xhYmVsIHtcbiAgICAgICAgb3BhY2l0eTouNTtcbiAgICB9XG5cbiAgICAudmZtcy1hY2Nlc29yaW97XG5cbiAgICAgICAgbWluLWhlaWdodDogMjQwcHghaW1wb3J0YW50O1xuXG4gICAgfVxuICAgIC52Zm1zLWFkaWNpb25hbGVze1xuICAgICAgICBtaW4taGVpZ2h0OiAyNDVweCFpbXBvcnRhbnQ7XG4gICAgfVxuICAgXG4gICAgLnZmbXMtYnRuLWFkZHtcbiAgICAgICAgd2lkdGg6MTU1cHg7XG4gICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICBib3R0b206IDI1cHg7XG4gICAgICAgIHJpZ2h0OiAxNXB4O1xuICAgIH1cbiAgICAudmZtcy1idG4tYWRkMntcbiAgICAgICAgd2lkdGg6MTU1cHg7XG4gICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICBib3R0b206IDI1cHg7XG4gICAgICAgIHJpZ2h0OiAxNXB4O1xuICAgIH1cbiAgICAudmZtcy1yYXRlcy1pbWd7XG4gICAgICAgIG1hcmdpbi10b3A6MjBweDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6MjBweDtcbiAgICB9XG4gICAgLnZmbXMtbW9iaWxlLXJhdGVze1xuXG5cbiAgICB9XG5cbiAgICAudmZtcy10YWJzX19jb250YWluZXJ7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gICAgICAgIG1hcmdpbi10b3A6IDVweDtcbiAgICAgICAgXG4gICAgfVxuXG4gICAgLnZmZXMtdGFic19fdGFiIHtcbiAgICAgICAgbWF4LXdpZHRoOiAxNjBweDtcbiAgICAgICAgaGVpZ2h0OjUwcHg7XG4gICAgICAgIHBhZGRpbmc6IC43NXJlbSAuMjVyZW07XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAgIH1cbiAgICAudmZlcy10YWJzX190YWItYWN0aXZle1xuICAgICAgICAvL2JvcmRlci1ib3R0b206IDJweCAjRTYwMDAwIHNvbGlkO1xuICAgIH1cbiAgICAudmZlcy10YWJzX190YWItYWN0aXZlOjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGJvdHRvbTogLTAuNjI1cmVtO1xuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgIHdpZHRoOiAwO1xuICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgIGJvcmRlci10b3A6IDAuMzEyNXJlbSBzb2xpZCAjRTYwMDAwO1xuICAgICAgICBib3JkZXItbGVmdDogMC4zMTI1cmVtIHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItcmlnaHQ6IDAuMzEyNXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMC4zMTI1cmVtIHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUpO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlKTtcbiAgICB9XG4gICAgLmJ0bi10YWIge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gIFxuICAgIC52ZmVzLWZvcm1fX2xhYmVsIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDE2cHg7XG4gICAgfVxuICAgIC5tZW51e1xuICAgICAgICBoZWlnaHQ6IDU1cHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gICAgICAgICZfX2ltZ3tcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC5kZXZpY2V7XG4gICAgICAgICZfX3RleHR7XG4gICAgICAgICAgICBjb2xvcjogIzMzMzMzMzsgXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDoxMHB4OyAgXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4OyAgICAgICAgXG4gICAgICAgICAgICAgICAgcHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwIDAgMXB4IDA7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgICBcbiAgICAgICAgfVxuICAgICAgICAmX19saW5reyAgICAgXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiA5NHB4O1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyBcbiAgICAgICAgICAgIGF7XG4gICAgICAgICAgICAgICAgY29sb3I6ICNFNjAwMDA7XG4gICAgICAgICAgICB9ICAgICAgICBcbiAgICAgICAgfVxuICAgICAgICAmX19mbGV4e1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDsgICAgICAgICBcbiAgICAgICAgfVxuICAgICAgICAmX190aXRsZXtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDsgXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxNXB4OyBcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDE1cHg7ICAgICAgICAgXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICA6Zm9jdXMge1xuICAgICAgICBvdXRsaW5lOiAzcHggc29saWQgIzAwN0M5MjtcbiAgICB9XG5cbiAgICAudmZlcy1idXR0b246bm90KC52ZmVzLWJ1dHRvbi0tdGVydGlhcnkpIHtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgfVxuXG4gICAgLnZmZXMtbGF5b3V0X193cmFwcGVyIHtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB9XG5cbiAgICAudmZlcy1idXR0b24tLXNlY29uZGFyeVtkaXNhYmxlZF0ge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjO1xuICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgfVxuXG4gICAgLnZmbXMtYmFubmVye1xuXG4gICAgICAgICYtbGF5b3V0e1xuICAgICAgICAgICAgcGFkZGluZzogMzBweCAwO1xuICAgICAgICB9XG4gICAgICAgIC52ZmVzLXRpdGxlLS0xe1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICAgICAgfVxuXG4gICAgICAgIC52ZmVzLXRpdGxlLS0ze1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC52Zm1zLWxhYmVsX19vdXRzdGFuZGluZ3tcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IC0yMnB4O1xuICAgICAgICBwYWRkaW5nOiA1cHggMTBweCA1cHggMTBweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4IDZweCAwIDA7XG4gICAgfVxuICAgIFxuICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4gICAgLyoqKioqKioqKioqKioqKioqKiBDT05GSUdVUkFUT1IgU1RZTEVTICoqKioqKioqKioqKioqKioqKi9cbiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuICAgIC52Zm1zLWNvbmZpZ3VyYXRvciB7XG4gICAgICAgIHBhZGRpbmc6IDFyZW0gMDtcbiAgICAgICAgLy9Fc3F1aW5hcyBkZSBjYXJkcyBjb24gY2ludGlsbG9cbiAgICAgICAgXG4gICAgICAgIC52Zm1zLWxhYmVsX19vdXRzdGFuZGluZyArIC52ZmVzLWNhcmQge1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMCA2cHggNnB4IDZweDtcbiAgICAgICAgfVxuXG5cdFx0Ly9GaW4gbW9kaWNmaWNhY2nDs24gZXNxdWluYXMgZGUgY2FyZHMgY29uIGNpbnRpbGxvXG5cblx0XHQmX19zdGF0dXMge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICByaWdodDogLTI1cHg7XG4gICAgICAgICAgICB0b3A6IC03cHg7XG4gICAgICAgICAgICB3aWR0aDogMDtcbiAgICAgICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiA0MHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLXJpZ2h0OiA0MHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYm9yZGVyLXRvcDogNDBweCBzb2xpZCAjY2NjY2NjO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC0xMzVkZWcpO1xuICAgICAgICAgICAgei1pbmRleDogMTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAwLjNzIGVhc2Utb3V0LCBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZS1vdXQ7XG5cdFx0XHRvcGFjaXR5OiAwO1xuXG5cdFx0fVxuXG4gICAgICAgICZfX2ljb24ge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiA1cHg7XG4gICAgICAgICAgICByaWdodDogNXB4O1xuICAgICAgICAgICAgei1pbmRleDogMjtcblxuICAgICAgICAgICAgJi0tdGljayB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICZfX3JlbW92ZSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICB9XG5cbiAgICAgICAgLmFkZGVkIHtcbiAgICAgICAgICAgIC52Zm1zLWNvbmZpZ3VyYXRvcl9fc3RhdHVzIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDI4NjAwO1xuICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6ICM0Mjg2MDA7XG5cdFx0XHRcdG9wYWNpdHk6IDE7XG5cdFx0XHRcdHRyYW5zaXRpb246IDAuNXM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC52Zm1zLWNvbmZpZ3VyYXRvcl9faWNvbiB7XG4gICAgICAgICAgICAgICAgJi0tdGljayB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAmLS1wbHVzIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC52Zm1zLWNvbmZpZ3VyYXRvcl9fYWRkIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAudmZtcy1jb25maWd1cmF0b3JfX3JlbW92ZSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmLnZmbXMtY29uZmlndXJhdG9yX19zaW5nbGUgLnZmbXMtY29uZmlndXJhdG9yX19hZGQge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAuYWRkZWQyIHtcbiAgICAgICAgICAgIC52Zm1zLWNvbmZpZ3VyYXRvcl9fc3RhdHVzIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDI4NjAwO1xuICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6ICM0Mjg2MDA7XG5cdFx0XHRcdG9wYWNpdHk6IDE7XG5cdFx0XHRcdHRyYW5zaXRpb246IDAuNXM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC52Zm1zLWNvbmZpZ3VyYXRvcl9faWNvbiB7XG4gICAgICAgICAgICAgICAgJi0tdGljayB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAmLS1wbHVzIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC52Zm1zLWNvbmZpZ3VyYXRvcl9fYWRkIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAudmZtcy1jb25maWd1cmF0b3JfX3JlbW92ZSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmLnZmbXMtY29uZmlndXJhdG9yX19zaW5nbGUgLnZmbXMtY29uZmlndXJhdG9yX19hZGQge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAuYWRkZWQzIHtcbiAgICAgICAgICAgIC52Zm1zLWNvbmZpZ3VyYXRvcl9fc3RhdHVzIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDI4NjAwO1xuICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6ICM0Mjg2MDA7XG5cdFx0XHRcdG9wYWNpdHk6IDE7XG5cdFx0XHRcdHRyYW5zaXRpb246IDAuNXM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC52Zm1zLWNvbmZpZ3VyYXRvcl9faWNvbiB7XG4gICAgICAgICAgICAgICAgJi0tdGljayB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAmLS1wbHVzIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC52Zm1zLWNvbmZpZ3VyYXRvcl9fYWRkIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAudmZtcy1jb25maWd1cmF0b3JfX3JlbW92ZSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmLnZmbXMtY29uZmlndXJhdG9yX19zaW5nbGUgLnZmbXMtY29uZmlndXJhdG9yX19hZGQge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIC52ZmVzLXRpdGxlIHtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIH1cblxuICAgICAgICAudmZlcy1sYXlvdXRfX2l0ZW0ge1xuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC52Zm1zLWNhcmQtY29uZmlndXJhdG9yIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgcGFkZGluZzogMTRweCAwIDI0cHg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuXG4gICAgICAgIGltZyB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgcCB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAmX19jb2x1bW4ge1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgZmxleDogMSA1MCU7XG5cbiAgICAgICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmX19pbmZvIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICAgICAgICB9XG5cbiAgICAgICAgJl9fY291bnRlciB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBwYWRkaW5nOiAwIDIwcHg7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICZfX251bSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjY2NjO1xuICAgICAgICAgICAgcGFkZGluZzogMjNweCA0MHB4O1xuICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDI4cHg7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgICAgIH1cblxuICAgICAgICAmX19idXR0b24ge1xuICAgICAgICAgICAgd2lkdGg6IDQwcHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICAgICAgYm94LXNoYWRvdzogMCAycHggNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2NjY2NjYztcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTYwMDAwO1xuICAgICAgICAgICAgY29sb3I6ICNGRkZGRkY7XG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2Utb3V0LCBsZWZ0IDAuM3MgZWFzZS1vdXQ7XG5cbiAgICAgICAgICAgICYuaGlkZSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICYtbGVzcyB7XG4gICAgICAgICAgICAgICAgbGVmdDogMDtcblxuICAgICAgICAgICAgICAgICYuaGlkZSB7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IC0xMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJi1tb3JlIHtcbiAgICAgICAgICAgICAgICByaWdodDogMDtcblxuICAgICAgICAgICAgICAgICYuaGlkZSB7XG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtMTBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmLnZmbXMtY2FyZC10ZXJtaW5hbCB7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDhweCAyMHB4IDE2cHg7XG5cbiAgICAgICAgICAgICYuaGlkZXtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmLnNob3d7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJiAudmZtcy1jYXJkLWNvbmZpZ3VyYXRvcl9fY29sdW1uIHtcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuXG4gICAgICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC52ZmVzLWJ1dHRvbiB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDE2cHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICBcblxuICAgIC52Zm1zLWNhcmQtb25le1xuICAgICAgICBtaW4taGVpZ2h0OiAxOTVweDtcblxuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIC52ZmVzLWNhcmQtcmF0ZV9fZGF0YWl0ZW0tcHJpY2V7XG4gICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgICAgICAgfVxuXG4gICAgICAgIC52ZmVzLWNhcmQtcmF0ZV9fZGF0YWl0ZW17XG4gICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDVweCAwIDhweDtcblxuICAgICAgICAgICAgLnZmZXMtdGl0bGV7XG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHN2Z3tcbiAgICAgICAgICAgICAgICB3aWR0aDogNTBweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDUwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAudmZlcy1iZXN0cHJpY2V7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgcGFkZGluZzogNXB4IDA7XG5cbiAgICAgICAgICAgIGltZ3tcbiAgICAgICAgICAgICAgICB3aWR0aDogMjRweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDI0cHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAudmZtcy1jYXJkLXJhdGVfX3Rvb2x0aXB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBwYWRkaW5nOiAycHggMCAycHggMDtcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWJlYmViO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBcbiAgICBcbiAgICAgICAgICAgIHB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMCA4cHggMCA4cHg7XG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICBidXR0b257XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgICAgIGJvdHRvbTogaW5pdGlhbDtcbiAgICAgICAgICAgICAgICByaWdodDogaW5pdGlhbDtcbiAgICAgICAgICAgIH1cbiAgICBcbiAgICBcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLnZmbXMtY29uZmlndXJhdG9yX19idXR0b257XG4gICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDEwcHggMjBweCAxOHB4O1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAudmZtcy1jYXJkLW9uZS0tb2ZmZXJ7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkM2QzZDM7XG4gICAgfVxuXG5cblx0LnZmbXMtY2FyZC1vbmUtLW9mZmVyLXN1cGVye1xuXHRcdGJvcmRlcjogMXB4IHNvbGlkICNkM2QzZDM7XG5cdH1cbiAgICAudmZtcy1jYXJkLW9uZS0tb2ZmZXItY29sb3J7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkM2QzZDM7XG4gICAgfVxuXG4gICAgLnZmbXMtY2FyZC1wYWNrdHYge1xuICAgICAgICBwYWRkaW5nOiAxNnB4IDIwcHg7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuXG4gICAgICAgICYudmZtcy1jYXJkLXR2LS1vZmZlcntcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICM5QzJBQTA7XG4gICAgICAgIH1cblxuXHRcdCYudmZtcy1jYXJkLXR2LS1vZmZlci1hbGJlcmdpbmV7XG5cdFx0XHRib3JkZXI6IDFweCBzb2xpZCAjNUUyNzUwO1xuXHRcdH1cblxuICAgICAgICAmLnZmbXMtY2FyZC10di0tb2ZmZXJjb2xvdXJ7XG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMDBCMENBO1xuICAgICAgICB9XG5cbiAgICAgICAgJl9fYm9yZGVyIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGhlaWdodDogMTJweDtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICByaWdodDogMDtcbiAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgfVxuXG4gICAgICAgIC52ZmVzLWJ1dHRvbiB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgLnZmZXMtY2Fyb3VzZWwge1xuXG4gICAgICAgICYtLWFjdGl2ZSB7XG4gICAgICAgICAgICBvdmVyZmxvdzogaW5pdGlhbDtcblxuICAgICAgICAgICAgLnZmZXMtY2Fyb3VzZWxfX2xpc3QtZWxlbWVudCB7XG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZS1vdXQ7XG4gICAgXG4gICAgICAgICAgICAgICAgJi0tYWN0aXZlIHtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmX19hcnJvdyB7XG4gICAgICAgICAgICBsZWZ0OiAtMTJweDtcblxuICAgICAgICAgICAgJi0tcmlnaHQge1xuICAgICAgICAgICAgICAgIHJpZ2h0OiAtMTJweDtcbiAgICAgICAgICAgICAgICBsZWZ0OiBhdXRvO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuICAgIC8qKioqKioqKioqKioqKioqKiBUSUNLRVQgU1RZTEVTICoqKioqKioqKioqKioqKioqKi9cbiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4gICAgLnZmbXMtdGlja2V0IHtcbiAgICAgICAgJl9fYm9keS5oaWRlICsgLnZmZXMtY2FyZF9fbGlzdC1mb290ZXIge1xuICAgICAgICAgICAgYm9yZGVyLXRvcDogMDtcbiAgICAgICAgfVxuXG4gICAgICAgICZfX2Ryb3Bkb3duLWJ1dHRvbiB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDNweDtcbiAgICAgICAgICAgIHJpZ2h0OiAxMHB4O1xuICAgICAgICAgICAgY29sb3I6ICNlNjAwMDA7XG4gICAgICAgIH1cblxuICAgICAgICAmX19jb250ZW50IHtcbiAgICAgICAgICAgIG1heC1oZWlnaHQ6IDMwMHB4O1xuICAgICAgICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgICAgfVxuXG4gICAgICAgICZfX292ZXJsYXkge1xuICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjgpO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAgICAgICAgICYuaGlkZSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICZfX2VsZW1lbnQge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTJweDtcblxuICAgICAgICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJl9fd3JhcHBlci5maXhlZCB7XG4gICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICBib3R0b206IDA7XG4gICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgei1pbmRleDogNztcbiAgICAgICAgfVxuXG4gICAgICAgIC52ZmVzLWNhcmRfX2xpc3QtaGVhZGVyIC52ZmVzLWNhcmRfX2xpc3QtcGFyYWdyYXBocyAudmZlcy1wYXJhZ3JhcGgge1xuICAgICAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAudmZlcy1hbGVydCB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgaGVpZ2h0OiAzOXB4O1xuICAgICAgICB0b3A6IDVweDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgdHJhbnNpdGlvbjogaGVpZ2h0IDAuNXMgZWFzZS1vdXQ7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiBub3JtYWw7XG5cbiAgICAgICAgJi5oaWRlIHtcbiAgICAgICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgfVxuXG4gICAgICAgICYtYm9keSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLnZmZXMtY2FyZF9fbGlzdCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgICYtY29udGVudCB7XG5cbiAgICAgICAgICAgIC52ZmVzLXBhcmFncmFwaCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC52ZmVzLWNhcmRfX2xpc3QtbGlzdCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmLWNvbnRhaW5lci5oaWRlIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cblxuICAgICAgICAmLWZvb3RlciB7XG4gICAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2U2MDAwMDtcbiAgICBcbiAgICAgICAgICAgIC52ZmVzLWJ1dHRvbiB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cblxuXHQvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cdC8qKioqKioqKioqKioqKioqKiBDaGFubmVsIE1PREFMICoqKioqKioqKioqKioqKioqKi9cblx0LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG5cdC52ZmVzLWJ1dHRvbi5qcy1tb2RhbC1jb25maXJtLWFjY2VwdHtcblx0XHRtYXJnaW46IDEwcHg7XG5cdH1cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4gICAgICAgIC8qKioqKioqKioqKioqKioqKiogQ09ORklHVVJBVE9SIFNUWUxFUyAqKioqKioqKioqKioqKioqKiovXG4gICAgICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4gICAgICAgIC52Zm1zLWNhcmQtY29uZmlndXJhdG9yIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDE4cHggNDNweCAxOHB4IDE3cHg7XG5cbiAgICAgICAgICAgICYudmZtcy1jYXJkLXRlcm1pbmFsIHtcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE4cHggNDNweCAxOHB4IDE3cHg7XG4gICAgXG4gICAgICAgICAgICAgICAgLnZmbXMtY2FyZC1jb25maWd1cmF0b3JfX2NvbHVtbiB7XG4gICAgICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgXG4gICAgICAgICAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwcHg7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHB4O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAgICAgICAgIC52ZmVzLWJ1dHRvbiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDE1MHB4O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAgICAgICAgLyoqKioqKioqKioqKioqKioqKiBDT05GSUdVUkFUT1IgU1RZTEVTICoqKioqKioqKioqKioqKioqKi9cbiAgICAgICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAgICAgICAgLnZmbXMtY29uZmlndXJhdG9yIHtcbiAgICAgICAgICAgIC52ZmVzLWxheW91dF9faXRlbTpub3QoLnZmbXMtdGlja2V0X193cmFwcGVyKSB7XG4gICAgICAgICAgICAgICAgei1pbmRleDogODtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC52ZmVzLXRpdGxlIHtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLnZmbXMtY2FyZC1jb25maWd1cmF0b3Ige1xuICAgICAgICAgICAgcGFkZGluZzogMThweCAzOHB4IDE4cHggNnB4O1xuICAgICAgICB9XG5cbiAgICAgICAgLnZmZXMtY2Fyb3VzZWxfX2Fycm93IHtcbiAgICAgICAgICAgIHdpZHRoOiA0MHB4O1xuICAgICAgICAgICAgaGVpZ2h0OiA0MHB4O1xuXG4gICAgICAgICAgICAmOjphZnRlciB7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxNnB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxNnB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuICAgICAgICAvKioqKioqKioqKioqKioqKiogVElDS0VUIFNUWUxFUyAqKioqKioqKioqKioqKioqKiovXG4gICAgICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAgICAgICAgLnZmbXMtdGlja2V0IHtcbiAgICAgICAgICAgIG1heC13aWR0aDogMzgwcHg7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJl9fd3JhcHBlciB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgICAgIG92ZXJmbG93OiBpbml0aWFsO1xuICAgICAgICAgICAgICAgIHRvcDogNjBweDtcblxuICAgICAgICAgICAgICAgICYuZml4ZWQge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgICAgICAgICAgICAgICAgICAgYm90dG9tOiBhdXRvO1xuICAgICAgICAgICAgICAgICAgICB0b3A6IDgwcHg7XG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTogaW5pdGlhbDtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmX19vdmVybGF5IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmX19jb250ZW50IHtcbiAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiAzMjBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBcblxuICAgICAgICAudmZlcy1hbGVydCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICB9XG4gICAgfVxuXG4gIFxuXG5cbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUNBQSxBQUFBLEtBQUssQUFBQSxTQUFTLEVBQUUsTUFBTSxBQUFBLFNBQVMsRUFBRSxRQUFRLEFBQUEsU0FBUyxDQUFDO0VBQy9DLE1BQU0sRUFBQyxJQUFJO0VBQ1gsVUFBVSxFQUFFLElBQUk7RUFDaEIsVUFBVSxFQUFFLElBQUk7RUFDaEIsS0FBSyxFQUFFLE9BQU87Q0FDakI7O0FBRUQsQUFBQSxnQkFBZ0IsQ0FBQztFQTBPYiwyREFBMkQ7RUFDM0QsMkRBQTJEO0VBQzNELDJEQUEyRDtFQXlZM0Qsb0RBQW9EO0VBQ3BELG9EQUFvRDtFQUNwRCxvREFBb0Q7RUFnR3ZELG9EQUFvRDtFQUNwRCxvREFBb0Q7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 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
