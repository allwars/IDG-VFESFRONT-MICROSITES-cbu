/**
 * Vodafone Reboot Framework: Version 15.6.0. Generation Date: 2020-03-23T09:10:37.274Z
 */

.vfes-ms-content-bannercta {
  background-image: url("https://www.vodafone.es/c/statics/imagen/imagen_boxless_mobile.jpg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  height: 28.6875rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-bannercta {
    background-image: url("https://www.vodafone.es/c/statics/imagen/img-boxless-tablet-v2.jpg");
    height: auto;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-bannercta {
    background-image: url("https://www.vodafone.es/c/statics/imagen/img-boxless-desktop-v2.jpg");
    min-height: 16.0625rem;
  }
}

.vfes-ms-content-bannercta .vfms-title {
  font-size: 1.5rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-bannercta .vfms-title {
    font-size: 2rem;
    max-width: 28.125rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-bannercta .vfms-title {
    max-width: none;
  }
}

.vfes-ms-content-bannercta .vfms-text {
  font-size: 0.875rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-bannercta .vfms-text {
    max-width: 28.125rem;
    font-size: 1.125rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-bannercta .vfms-text {
    max-width: 35.8125rem;
  }
}

.vfes-ms-content-bannercta .icon-mv {
  min-width: 4rem;
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-bannercta .vfms-button {
    width: 12.0625rem;
  }
}

.vfes-ms-content-bannercta .vfms-button__margin {
  margin-top: 13.625rem;
}

@media screen and (min-width: 40rem) {
  .vfes-ms-content-bannercta .vfms-button__margin {
    margin-top: 1.875rem;
    margin-left: 6.875rem;
  }
}

@media screen and (min-width: 60.625rem) {
  .vfes-ms-content-bannercta .vfms-button__margin {
    margin-left: 8.125rem;
  }
}

.vfes-ms-content-bannercta .vfms-button__white {
  color: white;
}

.vfes-ms-content-bannercta .vfms-icon-rsp {
  min-width: 5.3125rem;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LWJhbm5lcmN0YXtcbiAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9pbWFnZW5fYm94bGVzc19tb2JpbGUuanBnJyk7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBoZWlnaHQ6IDQ1OXB4O1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9pbWctYm94bGVzcy10YWJsZXQtdjIuanBnJyk7XG4gICAgICAgIGhlaWdodDogYXV0bztcbiAgICB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL2ltZy1ib3hsZXNzLWRlc2t0b3AtdjIuanBnJyk7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDI1N3B4O1xuICAgIH1cbiAgICAudmZtcy10aXRsZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICAgICAgICAgIG1heC13aWR0aDogNDUwcHg7XG4gICAgICAgIH1cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgIG1heC13aWR0aDogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy10ZXh0IHtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA0NTBweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgfVxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA1NzNweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAuaWNvbi1tdiB7XG4gICAgICAgIG1pbi13aWR0aDogNjRweDtcbiAgICB9XG4gICAgLnZmbXMtYnV0dG9ue1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgd2lkdGg6IDE5M3B4O1xuICAgICAgICB9XG4gICAgICAgICZfX21hcmdpbiB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMThweDtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMzBweDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMTEwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMzBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmX193aGl0ZSB7XG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIH1cbiAgICB9IFxuICAgIC52Zm1zLWljb24tcnNwIHtcbiAgICAgICAgbWluLXdpZHRoOiA4NXB4O1xuICAgIH1cbn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFDQ0EsQUFBQSwwQkFBMEIsQ0FBQTtFQUN2QixnQkFBZ0IsRUFBRSx5RUFBeUU7RUFDMUYsbUJBQW1CLEVBQUUsTUFBTTtFQUMzQixlQUFlLEVBQUUsS0FBSztFQUN0QixpQkFBaUIsRUFBRSxTQUFTO0VBQzVCLE1BQU0sRUFBRSxLQUFLO0NBcURoQjs7QUFwREcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQU52QyxBQUFBLDBCQUEwQixDQUFBO0lBT2xCLGdCQUFnQixFQUFFLHlFQUF5RTtJQUMzRixNQUFNLEVBQUUsSUFBSTtHQWtEbkI7OztBQWhERyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBVnZDLEFBQUEsMEJBQTBCLENBQUE7SUFXbEIsZ0JBQWdCLEVBQUUsMEVBQTBFO0lBQzVGLFVBQVUsRUFBRSxLQUFLO0dBOEN4Qjs7O0FBMURELEFBY0ksMEJBZHNCLENBY3RCLFdBQVcsQ0FBQztFQUNSLFNBQVMsRUFBRSxJQUFJO0NBUWxCOztBQVBHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFoQjNDLEFBY0ksMEJBZHNCLENBY3RCLFdBQVcsQ0FBQztJQUdKLFNBQVMsRUFBRSxJQUFJO0lBQ2YsU0FBUyxFQUFFLEtBQUs7R0FLdkI7OztBQUhHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFwQjNDLEFBY0ksMEJBZHNCLENBY3RCLFdBQVcsQ0FBQztJQU9KLFNBQVMsRUFBRSxJQUFJO0dBRXRCOzs7QUF2QkwsQUF3QkksMEJBeEJzQixDQXdCdEIsVUFBVSxDQUFDO0VBQ1AsU0FBUyxFQUFFLElBQUk7Q0FRbEI7O0FBUEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQTFCM0MsQUF3QkksMEJBeEJzQixDQXdCdEIsVUFBVSxDQUFDO0lBR0gsU0FBUyxFQUFFLEtBQUs7SUFDaEIsU0FBUyxFQUFFLElBQUk7R0FLdEI7OztBQUhHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUE5QjNDLEFBd0JJLDBCQXhCc0IsQ0F3QnRCLFVBQVUsQ0FBQztJQU9ILFNBQVMsRUFBRSxLQUFLO0dBRXZCOzs7QUFqQ0wsQUFrQ0ksMEJBbENzQixDQWtDdEIsUUFBUSxDQUFDO0VBQ0wsU0FBUyxFQUFFLElBQUk7Q0FDbEI7O0FBRUcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXRDM0MsQUFxQ0ksMEJBckNzQixDQXFDdEIsWUFBWSxDQUFBO0lBRUosS0FBSyxFQUFFLEtBQUs7R0FlbkI7OztBQXRETCxBQXlDUSwwQkF6Q2tCLENBeUNqQixvQkFBUSxDQUFDO0VBQ04sVUFBVSxFQUFFLEtBQUs7Q0FRcEI7O0FBUEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQTNDL0MsQUF5Q1EsMEJBekNrQixDQXlDakIsb0JBQVEsQ0FBQztJQUdGLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLFdBQVcsRUFBRSxLQUFLO0dBS3pCOzs7QUFIRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBL0MvQyxBQXlDUSwwQkF6Q2tCLENBeUNqQixvQkFBUSxDQUFDO0lBT0YsV0FBVyxFQUFFLEtBQUs7R0FFekI7OztBQWxEVCxBQW1EUSwwQkFuRGtCLENBbURqQixtQkFBTyxDQUFDO0VBQ0wsS0FBSyxFQUFFLEtBQUs7Q0FDZjs7QUFyRFQsQUF1REksMEJBdkRzQixDQXVEdEIsY0FBYyxDQUFDO0VBQ1gsU0FBUyxFQUFFLElBQUk7Q0FDbEIifQ== */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LWJhbm5lcmN0YXtcbiAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9pbWFnZW5fYm94bGVzc19tb2JpbGUuanBnJyk7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBoZWlnaHQ6IDQ1OXB4O1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly93d3cudm9kYWZvbmUuZXMvYy9zdGF0aWNzL2ltYWdlbi9pbWctYm94bGVzcy10YWJsZXQtdjIuanBnJyk7XG4gICAgICAgIGhlaWdodDogYXV0bztcbiAgICB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy52b2RhZm9uZS5lcy9jL3N0YXRpY3MvaW1hZ2VuL2ltZy1ib3hsZXNzLWRlc2t0b3AtdjIuanBnJyk7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDI1N3B4O1xuICAgIH1cbiAgICAudmZtcy10aXRsZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjQwcHgpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICAgICAgICAgIG1heC13aWR0aDogNDUwcHg7XG4gICAgICAgIH1cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTcwcHgpIHtcbiAgICAgICAgICAgIG1heC13aWR0aDogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy10ZXh0IHtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NDBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA0NTBweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgfVxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA1NzNweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAuaWNvbi1tdiB7XG4gICAgICAgIG1pbi13aWR0aDogNjRweDtcbiAgICB9XG4gICAgLnZmbXMtYnV0dG9ue1xuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgd2lkdGg6IDE5M3B4O1xuICAgICAgICB9XG4gICAgICAgICZfX21hcmdpbiB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMThweDtcbiAgICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0MHB4KSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMzBweDtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMTEwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5NzBweCkge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMzBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmX193aGl0ZSB7XG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIH1cbiAgICB9IFxuICAgIC52Zm1zLWljb24tcnNwIHtcbiAgICAgICAgbWluLXdpZHRoOiA4NXB4O1xuICAgIH1cbn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFDQ0EsQUFBQSwwQkFBMEIsQ0FBQTtFQUN2QixnQkFBZ0IsRUFBRSx5RUFBeUU7RUFDMUYsbUJBQW1CLEVBQUUsTUFBTTtFQUMzQixlQUFlLEVBQUUsS0FBSztFQUN0QixpQkFBaUIsRUFBRSxTQUFTO0VBQzVCLE1BQU0sRUFBRSxLQUFLO0NBcURoQjs7QUFwREcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQU52QyxBQUFBLDBCQUEwQixDQUFBO0lBT2xCLGdCQUFnQixFQUFFLHlFQUF5RTtJQUMzRixNQUFNLEVBQUUsSUFBSTtHQWtEbkI7OztBQWhERyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBVnZDLEFBQUEsMEJBQTBCLENBQUE7SUFXbEIsZ0JBQWdCLEVBQUUsMEVBQTBFO0lBQzVGLFVBQVUsRUFBRSxLQUFLO0dBOEN4Qjs7O0FBMURELEFBY0ksMEJBZHNCLENBY3RCLFdBQVcsQ0FBQztFQUNSLFNBQVMsRUFBRSxJQUFJO0NBUWxCOztBQVBHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFoQjNDLEFBY0ksMEJBZHNCLENBY3RCLFdBQVcsQ0FBQztJQUdKLFNBQVMsRUFBRSxJQUFJO0lBQ2YsU0FBUyxFQUFFLEtBQUs7R0FLdkI7OztBQUhHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUFwQjNDLEFBY0ksMEJBZHNCLENBY3RCLFdBQVcsQ0FBQztJQU9KLFNBQVMsRUFBRSxJQUFJO0dBRXRCOzs7QUF2QkwsQUF3QkksMEJBeEJzQixDQXdCdEIsVUFBVSxDQUFDO0VBQ1AsU0FBUyxFQUFFLElBQUk7Q0FRbEI7O0FBUEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQTFCM0MsQUF3QkksMEJBeEJzQixDQXdCdEIsVUFBVSxDQUFDO0lBR0gsU0FBUyxFQUFFLEtBQUs7SUFDaEIsU0FBUyxFQUFFLElBQUk7R0FLdEI7OztBQUhHLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUE5QjNDLEFBd0JJLDBCQXhCc0IsQ0F3QnRCLFVBQVUsQ0FBQztJQU9ILFNBQVMsRUFBRSxLQUFLO0dBRXZCOzs7QUFqQ0wsQUFrQ0ksMEJBbENzQixDQWtDdEIsUUFBUSxDQUFDO0VBQ0wsU0FBUyxFQUFFLElBQUk7Q0FDbEI7O0FBRUcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQXRDM0MsQUFxQ0ksMEJBckNzQixDQXFDdEIsWUFBWSxDQUFBO0lBRUosS0FBSyxFQUFFLEtBQUs7R0FlbkI7OztBQXRETCxBQXlDUSwwQkF6Q2tCLENBeUNqQixvQkFBUSxDQUFDO0VBQ04sVUFBVSxFQUFFLEtBQUs7Q0FRcEI7O0FBUEcsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQTNDL0MsQUF5Q1EsMEJBekNrQixDQXlDakIsb0JBQVEsQ0FBQztJQUdGLFVBQVUsRUFBRSxJQUFJO0lBQ2hCLFdBQVcsRUFBRSxLQUFLO0dBS3pCOzs7QUFIRyxNQUFNLENBQUMsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBL0MvQyxBQXlDUSwwQkF6Q2tCLENBeUNqQixvQkFBUSxDQUFDO0lBT0YsV0FBVyxFQUFFLEtBQUs7R0FFekI7OztBQWxEVCxBQW1EUSwwQkFuRGtCLENBbURqQixtQkFBTyxDQUFDO0VBQ0wsS0FBSyxFQUFFLEtBQUs7Q0FDZjs7QUFyRFQsQUF1REksMEJBdkRzQixDQXVEdEIsY0FBYyxDQUFDO0VBQ1gsU0FBUyxFQUFFLElBQUk7Q0FDbEIifQ== */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
