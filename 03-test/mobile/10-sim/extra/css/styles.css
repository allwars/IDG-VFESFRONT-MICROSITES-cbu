/**
 * Vodafone Reboot Framework: Version 15.6.0. Generation Date: 2020-01-30T13:55:34.995Z
 */

.vfes-ms-content-extra .vfms-title__center {
  text-align: center;
}

.vfes-ms-content-extra .vfms-nomargin__bottom {
  margin-bottom: 0;
}

.vfes-ms-content-extra .vfms-nopadding__bottom {
  padding-bottom: 0;
}

.vfes-ms-content-extra .vfes-flex__direction--colum {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
}

.vfes-ms-content-extra .vfms-link {
  text-decoration: underline;
}

.vfes-ms-content-extra .vfms-img__size {
  height: 5rem;
  width: 5rem;
}

.vfes-ms-content-extra .vfms-button__width {
  min-width: 18.75rem;
}

.vfes-ms-content-extra .vfms-container__legales {
  margin: 5%;
  background: white;
  padding: 5%;
  position: relative;
}

.vfes-ms-content-extra .vfms-popup__legales {
  position: absolute;
  top: 6.25rem;
  background: rgba(0, 0, 0, 0.5);
  z-index: 1;
}

.vfes-ms-content-extra .vfms-icon {
  position: absolute;
  right: 0.625rem;
  top: 0.625rem;
}

.vfes-ms-content-extra .vfes-paragraph--right {
  text-align: right;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LWV4dHJhe1xuICAgIC52Zm1zLXRpdGxle1xuICAgICAgICAmX19jZW50ZXIge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLW5vbWFyZ2luX19ib3R0b20ge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIH1cbiAgICAudmZtcy1ub3BhZGRpbmdfX2JvdHRvbSB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAwO1xuICAgIH1cbiAgICAudmZlcy1mbGV4X19kaXJlY3Rpb24tLWNvbHVtIHtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB9XG4gICAgLnZmbXMtbGluayB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIH1cbiAgICAudmZtcy1pbWdfX3NpemUge1xuICAgICAgICBoZWlnaHQ6IDgwcHg7XG4gICAgICAgIHdpZHRoOiA4MHB4O1xuICAgIH1cbiAgICAudmZtcy1idXR0b25fX3dpZHRoIHtcbiAgICAgICAgbWluLXdpZHRoOiAzMDBweDtcbiAgICB9XG4gICAgLnZmbXMtcG9wdXAge1xuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgIGhlaWdodDogMTAwdmg7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwwLDAsLjUpO1xuICAgICAgICB6LWluZGV4OiA0O1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG4gICAgLnZmbXMtY29udGFpbmVyIHtcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgICAgcGFkZGluZzogNSU7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgJl9fbGVnYWxlcyB7XG4gICAgICAgICAgICBtYXJnaW46IDUlO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICBwYWRkaW5nOiA1JTtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy1wb3B1cF9fbGVnYWxlcyB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAxMDBweDtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwuNSk7XG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgfVxuICAgIC52Zm1zLWljb24ge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiAxMHB4O1xuICAgICAgICB0b3A6IDEwcHg7XG4gICAgfVxuICAgIC52ZmVzLXBhcmFncmFwaC0tcmlnaHQge1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICB9XG59Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0NBLEFBRVEsc0JBRmMsQ0FFYixtQkFBUSxDQUFDO0VBQ04sVUFBVSxFQUFFLE1BQU07Q0FDckI7O0FBSlQsQUFNSSxzQkFOa0IsQ0FNbEIsc0JBQXNCLENBQUM7RUFDbkIsYUFBYSxFQUFFLENBQUM7Q0FDbkI7O0FBUkwsQUFTSSxzQkFUa0IsQ0FTbEIsdUJBQXVCLENBQUM7RUFDcEIsY0FBYyxFQUFFLENBQUM7Q0FDcEI7O0FBWEwsQUFZSSxzQkFaa0IsQ0FZbEIsNEJBQTRCLENBQUM7RUFDekIsY0FBYyxFQUFFLE1BQU07Q0FDekI7O0FBZEwsQUFlSSxzQkFma0IsQ0FlbEIsVUFBVSxDQUFDO0VBQ1AsZUFBZSxFQUFFLFNBQVM7Q0FDN0I7O0FBakJMLEFBa0JJLHNCQWxCa0IsQ0FrQmxCLGVBQWUsQ0FBQztFQUNaLE1BQU0sRUFBRSxJQUFJO0VBQ1osS0FBSyxFQUFFLElBQUk7Q0FDZDs7QUFyQkwsQUFzQkksc0JBdEJrQixDQXNCbEIsbUJBQW1CLENBQUM7RUFDaEIsU0FBUyxFQUFFLEtBQUs7Q0FDbkI7O0FBeEJMLEFBeUJJLHNCQXpCa0IsQ0F5QmxCLFdBQVcsQ0FBQztFQUNSLFFBQVEsRUFBRSxLQUFLO0VBQ2YsTUFBTSxFQUFFLEtBQUs7RUFDYixLQUFLLEVBQUUsSUFBSTtFQUNYLEdBQUcsRUFBRSxDQUFDO0VBQ04sVUFBVSxFQUFFLGtCQUFjO0VBQzFCLE9BQU8sRUFBRSxDQUFDO0VBQ1YsT0FBTyxFQUFFLElBQUk7RUFDYixlQUFlLEVBQUUsTUFBTTtFQUN2QixXQUFXLEVBQUUsTUFBTTtDQUN0Qjs7QUFuQ0wsQUFvQ0ksc0JBcENrQixDQW9DbEIsZUFBZSxDQUFDO0VBQ1osVUFBVSxFQUFFLElBQUk7RUFDaEIsT0FBTyxFQUFFLEVBQUU7RUFDWCxRQUFRLEVBQUUsUUFBUTtDQU9yQjs7QUE5Q0wsQUF3Q1Esc0JBeENjLENBd0NiLHdCQUFTLENBQUM7RUFDUCxNQUFNLEVBQUUsRUFBRTtFQUNWLFVBQVUsRUFBRSxLQUFLO0VBQ2pCLE9BQU8sRUFBRSxFQUFFO0VBQ1gsUUFBUSxFQUFFLFFBQVE7Q0FDckI7O0FBN0NULEFBK0NJLHNCQS9Da0IsQ0ErQ2xCLG9CQUFvQixDQUFDO0VBQ2pCLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLEdBQUcsRUFBRSxLQUFLO0VBQ1YsVUFBVSxFQUFFLGtCQUFjO0VBQzFCLE9BQU8sRUFBRSxDQUFDO0NBQ2I7O0FBcERMLEFBcURJLHNCQXJEa0IsQ0FxRGxCLFVBQVUsQ0FBQztFQUNQLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLEtBQUssRUFBRSxJQUFJO0VBQ1gsR0FBRyxFQUFFLElBQUk7Q0FDWjs7QUF6REwsQUEwREksc0JBMURrQixDQTBEbEIsc0JBQXNCLENBQUM7RUFDbkIsVUFBVSxFQUFFLEtBQUs7Q0FDcEIifQ== */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LWV4dHJhe1xuICAgIC52Zm1zLXRpdGxle1xuICAgICAgICAmX19jZW50ZXIge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLW5vbWFyZ2luX19ib3R0b20ge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIH1cbiAgICAudmZtcy1ub3BhZGRpbmdfX2JvdHRvbSB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAwO1xuICAgIH1cbiAgICAudmZlcy1mbGV4X19kaXJlY3Rpb24tLWNvbHVtIHtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB9XG4gICAgLnZmbXMtbGluayB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIH1cbiAgICAudmZtcy1pbWdfX3NpemUge1xuICAgICAgICBoZWlnaHQ6IDgwcHg7XG4gICAgICAgIHdpZHRoOiA4MHB4O1xuICAgIH1cbiAgICAudmZtcy1idXR0b25fX3dpZHRoIHtcbiAgICAgICAgbWluLXdpZHRoOiAzMDBweDtcbiAgICB9XG4gICAgLnZmbXMtcG9wdXAge1xuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgIGhlaWdodDogMTAwdmg7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwwLDAsLjUpO1xuICAgICAgICB6LWluZGV4OiA0O1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG4gICAgLnZmbXMtY29udGFpbmVyIHtcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgICAgcGFkZGluZzogNSU7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgJl9fbGVnYWxlcyB7XG4gICAgICAgICAgICBtYXJnaW46IDUlO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICBwYWRkaW5nOiA1JTtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy1wb3B1cF9fbGVnYWxlcyB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAxMDBweDtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwuNSk7XG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgfVxuICAgIC52Zm1zLWljb24ge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiAxMHB4O1xuICAgICAgICB0b3A6IDEwcHg7XG4gICAgfVxuICAgIC52ZmVzLXBhcmFncmFwaC0tcmlnaHQge1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICB9XG59Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0NBLEFBRVEsc0JBRmMsQ0FFYixtQkFBUSxDQUFDO0VBQ04sVUFBVSxFQUFFLE1BQU07Q0FDckI7O0FBSlQsQUFNSSxzQkFOa0IsQ0FNbEIsc0JBQXNCLENBQUM7RUFDbkIsYUFBYSxFQUFFLENBQUM7Q0FDbkI7O0FBUkwsQUFTSSxzQkFUa0IsQ0FTbEIsdUJBQXVCLENBQUM7RUFDcEIsY0FBYyxFQUFFLENBQUM7Q0FDcEI7O0FBWEwsQUFZSSxzQkFaa0IsQ0FZbEIsNEJBQTRCLENBQUM7RUFDekIsY0FBYyxFQUFFLE1BQU07Q0FDekI7O0FBZEwsQUFlSSxzQkFma0IsQ0FlbEIsVUFBVSxDQUFDO0VBQ1AsZUFBZSxFQUFFLFNBQVM7Q0FDN0I7O0FBakJMLEFBa0JJLHNCQWxCa0IsQ0FrQmxCLGVBQWUsQ0FBQztFQUNaLE1BQU0sRUFBRSxJQUFJO0VBQ1osS0FBSyxFQUFFLElBQUk7Q0FDZDs7QUFyQkwsQUFzQkksc0JBdEJrQixDQXNCbEIsbUJBQW1CLENBQUM7RUFDaEIsU0FBUyxFQUFFLEtBQUs7Q0FDbkI7O0FBeEJMLEFBeUJJLHNCQXpCa0IsQ0F5QmxCLFdBQVcsQ0FBQztFQUNSLFFBQVEsRUFBRSxLQUFLO0VBQ2YsTUFBTSxFQUFFLEtBQUs7RUFDYixLQUFLLEVBQUUsSUFBSTtFQUNYLEdBQUcsRUFBRSxDQUFDO0VBQ04sVUFBVSxFQUFFLGtCQUFjO0VBQzFCLE9BQU8sRUFBRSxDQUFDO0VBQ1YsT0FBTyxFQUFFLElBQUk7RUFDYixlQUFlLEVBQUUsTUFBTTtFQUN2QixXQUFXLEVBQUUsTUFBTTtDQUN0Qjs7QUFuQ0wsQUFvQ0ksc0JBcENrQixDQW9DbEIsZUFBZSxDQUFDO0VBQ1osVUFBVSxFQUFFLElBQUk7RUFDaEIsT0FBTyxFQUFFLEVBQUU7RUFDWCxRQUFRLEVBQUUsUUFBUTtDQU9yQjs7QUE5Q0wsQUF3Q1Esc0JBeENjLENBd0NiLHdCQUFTLENBQUM7RUFDUCxNQUFNLEVBQUUsRUFBRTtFQUNWLFVBQVUsRUFBRSxLQUFLO0VBQ2pCLE9BQU8sRUFBRSxFQUFFO0VBQ1gsUUFBUSxFQUFFLFFBQVE7Q0FDckI7O0FBN0NULEFBK0NJLHNCQS9Da0IsQ0ErQ2xCLG9CQUFvQixDQUFDO0VBQ2pCLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLEdBQUcsRUFBRSxLQUFLO0VBQ1YsVUFBVSxFQUFFLGtCQUFjO0VBQzFCLE9BQU8sRUFBRSxDQUFDO0NBQ2I7O0FBcERMLEFBcURJLHNCQXJEa0IsQ0FxRGxCLFVBQVUsQ0FBQztFQUNQLFFBQVEsRUFBRSxRQUFRO0VBQ2xCLEtBQUssRUFBRSxJQUFJO0VBQ1gsR0FBRyxFQUFFLElBQUk7Q0FDWjs7QUF6REwsQUEwREksc0JBMURrQixDQTBEbEIsc0JBQXNCLENBQUM7RUFDbkIsVUFBVSxFQUFFLEtBQUs7Q0FDcEIifQ== */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
