/**
 * Vodafone Reboot Framework: Version 15.6.0. Generation Date: 2020-02-05T15:23:07.530Z
 */

.vfes-ms-content-ilimitada-super .vfms-title__center {
  text-align: center;
}

.vfes-ms-content-ilimitada-super .vfms-nomargin__bottom {
  margin-bottom: 0;
}

.vfes-ms-content-ilimitada-super .vfms-nopadding__bottom {
  padding-bottom: 0;
}

.vfes-ms-content-ilimitada-super .vfes-flex__direction--colum {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
}

.vfes-ms-content-ilimitada-super .vfms-link {
  text-decoration: underline;
}

.vfes-ms-content-ilimitada-super .vfms-img__size {
  height: 5rem;
  width: 5rem;
}

.vfes-ms-content-ilimitada-super .vfms-button__width {
  min-width: 18.75rem;
}

.vfes-ms-content-ilimitada-super .vfms-popup {
  position: fixed;
  height: 100vh;
  width: 100%;
  top: 0;
  background: rgba(0, 0, 0, 0.5);
  z-index: 4;
  display: -webkit-box;
  display: flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
}

.vfes-ms-content-ilimitada-super .vfms-container {
  background: #fff;
  padding: 5%;
  position: relative;
}

.vfes-ms-content-ilimitada-super .vfms-container__legales {
  margin: 5%;
  background: white;
  padding: 5%;
  position: relative;
}

.vfes-ms-content-ilimitada-super .vfms-popup__legales {
  position: absolute;
  top: 6.25rem;
  background: rgba(0, 0, 0, 0.5);
  z-index: 1;
}

@media screen and (min-width: 61.25rem) {
  .vfes-ms-content-ilimitada-super .vfms-list__item {
    display: inline-block;
  }
}

@media screen and (min-width: 61.25rem) {
  .vfes-ms-content-ilimitada-super .vfms-ml {
    margin-left: 0.75rem;
  }
}

.vfes-ms-content-ilimitada-super .vfms-icon {
  position: absolute;
  right: 0.625rem;
  top: 0.625rem;
}

.vfes-ms-content-ilimitada-super .vfes-paragraph--right {
  text-align: right;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LWlsaW1pdGFkYS1zdXBlcntcbiAgICAudmZtcy10aXRsZXtcbiAgICAgICAgJl9fY2VudGVyIHtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy1ub21hcmdpbl9fYm90dG9tIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG4gICAgLnZmbXMtbm9wYWRkaW5nX19ib3R0b20ge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICB9XG4gICAgLnZmZXMtZmxleF9fZGlyZWN0aW9uLS1jb2x1bSB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgfVxuICAgIC52Zm1zLWxpbmsge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG4gICAgLnZmbXMtaW1nX19zaXplIHtcbiAgICAgICAgaGVpZ2h0OiA4MHB4O1xuICAgICAgICB3aWR0aDogODBweDtcbiAgICB9XG4gICAgLnZmbXMtYnV0dG9uX193aWR0aCB7XG4gICAgICAgIG1pbi13aWR0aDogMzAwcHg7XG4gICAgfVxuICAgIC52Zm1zLXBvcHVwIHtcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICBoZWlnaHQ6IDEwMHZoO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLC41KTtcbiAgICAgICAgei1pbmRleDogNDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuICAgIC52Zm1zLWNvbnRhaW5lciB7XG4gICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICAgIHBhZGRpbmc6IDUlO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICZfX2xlZ2FsZXMge1xuICAgICAgICAgICAgbWFyZ2luOiA1JTtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgICAgcGFkZGluZzogNSU7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmbXMtcG9wdXBfX2xlZ2FsZXMge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMTAwcHg7XG4gICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwwLDAsLjUpO1xuICAgICAgICB6LWluZGV4OiAxO1xuICAgIH1cbiAgICAudmZtcy1saXN0IHtcbiAgICAgICAgJl9faXRlbSB7XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5ODBweCkge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy1tbCB7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk4MHB4KSB7XG4gICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMnB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLWljb24ge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiAxMHB4O1xuICAgICAgICB0b3A6IDEwcHg7XG4gICAgfVxuICAgIC52ZmVzLXBhcmFncmFwaC0tcmlnaHQge1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICB9XG59Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0NBLEFBRVEsZ0NBRndCLENBRXZCLG1CQUFRLENBQUM7RUFDTixVQUFVLEVBQUUsTUFBTTtDQUNyQjs7QUFKVCxBQU1JLGdDQU40QixDQU01QixzQkFBc0IsQ0FBQztFQUNuQixhQUFhLEVBQUUsQ0FBQztDQUNuQjs7QUFSTCxBQVNJLGdDQVQ0QixDQVM1Qix1QkFBdUIsQ0FBQztFQUNwQixjQUFjLEVBQUUsQ0FBQztDQUNwQjs7QUFYTCxBQVlJLGdDQVo0QixDQVk1Qiw0QkFBNEIsQ0FBQztFQUN6QixjQUFjLEVBQUUsTUFBTTtDQUN6Qjs7QUFkTCxBQWVJLGdDQWY0QixDQWU1QixVQUFVLENBQUM7RUFDUCxlQUFlLEVBQUUsU0FBUztDQUM3Qjs7QUFqQkwsQUFrQkksZ0NBbEI0QixDQWtCNUIsZUFBZSxDQUFDO0VBQ1osTUFBTSxFQUFFLElBQUk7RUFDWixLQUFLLEVBQUUsSUFBSTtDQUNkOztBQXJCTCxBQXNCSSxnQ0F0QjRCLENBc0I1QixtQkFBbUIsQ0FBQztFQUNoQixTQUFTLEVBQUUsS0FBSztDQUNuQjs7QUF4QkwsQUF5QkksZ0NBekI0QixDQXlCNUIsV0FBVyxDQUFDO0VBQ1IsUUFBUSxFQUFFLEtBQUs7RUFDZixNQUFNLEVBQUUsS0FBSztFQUNiLEtBQUssRUFBRSxJQUFJO0VBQ1gsR0FBRyxFQUFFLENBQUM7RUFDTixVQUFVLEVBQUUsa0JBQWM7RUFDMUIsT0FBTyxFQUFFLENBQUM7RUFDVixPQUFPLEVBQUUsSUFBSTtFQUNiLGVBQWUsRUFBRSxNQUFNO0VBQ3ZCLFdBQVcsRUFBRSxNQUFNO0NBQ3RCOztBQW5DTCxBQW9DSSxnQ0FwQzRCLENBb0M1QixlQUFlLENBQUM7RUFDWixVQUFVLEVBQUUsSUFBSTtFQUNoQixPQUFPLEVBQUUsRUFBRTtFQUNYLFFBQVEsRUFBRSxRQUFRO0NBT3JCOztBQTlDTCxBQXdDUSxnQ0F4Q3dCLENBd0N2Qix3QkFBUyxDQUFDO0VBQ1AsTUFBTSxFQUFFLEVBQUU7RUFDVixVQUFVLEVBQUUsS0FBSztFQUNqQixPQUFPLEVBQUUsRUFBRTtFQUNYLFFBQVEsRUFBRSxRQUFRO0NBQ3JCOztBQTdDVCxBQStDSSxnQ0EvQzRCLENBK0M1QixvQkFBb0IsQ0FBQztFQUNqQixRQUFRLEVBQUUsUUFBUTtFQUNsQixHQUFHLEVBQUUsS0FBSztFQUNWLFVBQVUsRUFBRSxrQkFBYztFQUMxQixPQUFPLEVBQUUsQ0FBQztDQUNiOztBQUdPLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUF2RC9DLEFBc0RRLGdDQXREd0IsQ0FzRHZCLGdCQUFNLENBQUM7SUFFQSxPQUFPLEVBQUUsWUFBWTtHQUU1Qjs7O0FBR0QsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQTdEM0MsQUE0REksZ0NBNUQ0QixDQTRENUIsUUFBUSxDQUFDO0lBRUYsV0FBVyxFQUFFLElBQUk7R0FFdkI7OztBQWhFTCxBQWlFSSxnQ0FqRTRCLENBaUU1QixVQUFVLENBQUM7RUFDUCxRQUFRLEVBQUUsUUFBUTtFQUNsQixLQUFLLEVBQUUsSUFBSTtFQUNYLEdBQUcsRUFBRSxJQUFJO0NBQ1o7O0FBckVMLEFBc0VJLGdDQXRFNEIsQ0FzRTVCLHNCQUFzQixDQUFDO0VBQ25CLFVBQVUsRUFBRSxLQUFLO0NBQ3BCIn0= */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCJfbWljcm8uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBcXVpIHNlIHB1ZWRlbiBpbXBvcnRhciBsaWJyZXLDrWFzIGV4dGVybmFzXG4vLyBlajogQGltcG9ydCAnL3Rvb2xzL2Z1bmN0aW9ucyc7XG5cbkBpbXBvcnQgXCJtaWNyb1wiOyIsIi8vIENTUyBkZWwgbWljcm9zaXRlXG4udmZlcy1tcy1jb250ZW50LWlsaW1pdGFkYS1zdXBlcntcbiAgICAudmZtcy10aXRsZXtcbiAgICAgICAgJl9fY2VudGVyIHtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy1ub21hcmdpbl9fYm90dG9tIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG4gICAgLnZmbXMtbm9wYWRkaW5nX19ib3R0b20ge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICB9XG4gICAgLnZmZXMtZmxleF9fZGlyZWN0aW9uLS1jb2x1bSB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgfVxuICAgIC52Zm1zLWxpbmsge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG4gICAgLnZmbXMtaW1nX19zaXplIHtcbiAgICAgICAgaGVpZ2h0OiA4MHB4O1xuICAgICAgICB3aWR0aDogODBweDtcbiAgICB9XG4gICAgLnZmbXMtYnV0dG9uX193aWR0aCB7XG4gICAgICAgIG1pbi13aWR0aDogMzAwcHg7XG4gICAgfVxuICAgIC52Zm1zLXBvcHVwIHtcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICBoZWlnaHQ6IDEwMHZoO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLC41KTtcbiAgICAgICAgei1pbmRleDogNDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuICAgIC52Zm1zLWNvbnRhaW5lciB7XG4gICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICAgIHBhZGRpbmc6IDUlO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICZfX2xlZ2FsZXMge1xuICAgICAgICAgICAgbWFyZ2luOiA1JTtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgICAgcGFkZGluZzogNSU7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnZmbXMtcG9wdXBfX2xlZ2FsZXMge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMTAwcHg7XG4gICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwwLDAsLjUpO1xuICAgICAgICB6LWluZGV4OiAxO1xuICAgIH1cbiAgICAudmZtcy1saXN0IHtcbiAgICAgICAgJl9faXRlbSB7XG4gICAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5ODBweCkge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAudmZtcy1tbCB7XG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk4MHB4KSB7XG4gICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMnB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC52Zm1zLWljb24ge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiAxMHB4O1xuICAgICAgICB0b3A6IDEwcHg7XG4gICAgfVxuICAgIC52ZmVzLXBhcmFncmFwaC0tcmlnaHQge1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICB9XG59Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0NBLEFBRVEsZ0NBRndCLENBRXZCLG1CQUFRLENBQUM7RUFDTixVQUFVLEVBQUUsTUFBTTtDQUNyQjs7QUFKVCxBQU1JLGdDQU40QixDQU01QixzQkFBc0IsQ0FBQztFQUNuQixhQUFhLEVBQUUsQ0FBQztDQUNuQjs7QUFSTCxBQVNJLGdDQVQ0QixDQVM1Qix1QkFBdUIsQ0FBQztFQUNwQixjQUFjLEVBQUUsQ0FBQztDQUNwQjs7QUFYTCxBQVlJLGdDQVo0QixDQVk1Qiw0QkFBNEIsQ0FBQztFQUN6QixjQUFjLEVBQUUsTUFBTTtDQUN6Qjs7QUFkTCxBQWVJLGdDQWY0QixDQWU1QixVQUFVLENBQUM7RUFDUCxlQUFlLEVBQUUsU0FBUztDQUM3Qjs7QUFqQkwsQUFrQkksZ0NBbEI0QixDQWtCNUIsZUFBZSxDQUFDO0VBQ1osTUFBTSxFQUFFLElBQUk7RUFDWixLQUFLLEVBQUUsSUFBSTtDQUNkOztBQXJCTCxBQXNCSSxnQ0F0QjRCLENBc0I1QixtQkFBbUIsQ0FBQztFQUNoQixTQUFTLEVBQUUsS0FBSztDQUNuQjs7QUF4QkwsQUF5QkksZ0NBekI0QixDQXlCNUIsV0FBVyxDQUFDO0VBQ1IsUUFBUSxFQUFFLEtBQUs7RUFDZixNQUFNLEVBQUUsS0FBSztFQUNiLEtBQUssRUFBRSxJQUFJO0VBQ1gsR0FBRyxFQUFFLENBQUM7RUFDTixVQUFVLEVBQUUsa0JBQWM7RUFDMUIsT0FBTyxFQUFFLENBQUM7RUFDVixPQUFPLEVBQUUsSUFBSTtFQUNiLGVBQWUsRUFBRSxNQUFNO0VBQ3ZCLFdBQVcsRUFBRSxNQUFNO0NBQ3RCOztBQW5DTCxBQW9DSSxnQ0FwQzRCLENBb0M1QixlQUFlLENBQUM7RUFDWixVQUFVLEVBQUUsSUFBSTtFQUNoQixPQUFPLEVBQUUsRUFBRTtFQUNYLFFBQVEsRUFBRSxRQUFRO0NBT3JCOztBQTlDTCxBQXdDUSxnQ0F4Q3dCLENBd0N2Qix3QkFBUyxDQUFDO0VBQ1AsTUFBTSxFQUFFLEVBQUU7RUFDVixVQUFVLEVBQUUsS0FBSztFQUNqQixPQUFPLEVBQUUsRUFBRTtFQUNYLFFBQVEsRUFBRSxRQUFRO0NBQ3JCOztBQTdDVCxBQStDSSxnQ0EvQzRCLENBK0M1QixvQkFBb0IsQ0FBQztFQUNqQixRQUFRLEVBQUUsUUFBUTtFQUNsQixHQUFHLEVBQUUsS0FBSztFQUNWLFVBQVUsRUFBRSxrQkFBYztFQUMxQixPQUFPLEVBQUUsQ0FBQztDQUNiOztBQUdPLE1BQU0sQ0FBQyxNQUFNLE1BQU0sU0FBUyxFQUFFLEtBQUs7RUF2RC9DLEFBc0RRLGdDQXREd0IsQ0FzRHZCLGdCQUFNLENBQUM7SUFFQSxPQUFPLEVBQUUsWUFBWTtHQUU1Qjs7O0FBR0QsTUFBTSxDQUFDLE1BQU0sTUFBTSxTQUFTLEVBQUUsS0FBSztFQTdEM0MsQUE0REksZ0NBNUQ0QixDQTRENUIsUUFBUSxDQUFDO0lBRUYsV0FBVyxFQUFFLElBQUk7R0FFdkI7OztBQWhFTCxBQWlFSSxnQ0FqRTRCLENBaUU1QixVQUFVLENBQUM7RUFDUCxRQUFRLEVBQUUsUUFBUTtFQUNsQixLQUFLLEVBQUUsSUFBSTtFQUNYLEdBQUcsRUFBRSxJQUFJO0NBQ1o7O0FBckVMLEFBc0VJLGdDQXRFNEIsQ0FzRTVCLHNCQUFzQixDQUFDO0VBQ25CLFVBQVUsRUFBRSxLQUFLO0NBQ3BCIn0= */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
